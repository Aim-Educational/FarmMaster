@model CrudCreateEditViewModel<Contact>
@{
    Layout = "_LayoutCrudCreateEdit";

    ViewData["LayoutModel"] = new CrudLayoutViewModel 
    {
        EntityName         = "Contact",
        EntityId           = Model.Entity?.ContactId,
        EntityIdExpression = "Entity.ContactId"
    };

    var action = (Model.IsCreate) ? "Create" : "Edit";
}

@section MainWindowForm {
    <div class="required input-wrapper">
        <label>Name</label>
        <textbox :mode="mode" asp-for="Entity.Name" placeholder="Name" required />
    </div>
    <div class="required input-wrapper">
        <label>Type</label>
        <vue-multiselect :options="['@nameof(ContactType.Individual)', '@nameof(ContactType.BusinessEntity)']"
                         :disabled="mode === 'view'"
                         v-model="typeValue"
                         required>
        </vue-multiselect>
        <input type="hidden" asp-for="Entity.Type" :value="typeValue" />
    </div>
    <div class="input-wrapper">
        <label>Email</label>
        <textbox :mode="mode" asp-for="Entity.Email" placeholder="Email" />
    </div>
    <div class="input-wrapper">
        <label>Phone</label>
        <textbox :mode="mode" asp-for="Entity.Phone" placeholder="Phone" />
    </div>
    <alert type="error" fm-model-error="true"></alert>
    <button class="top margined blue fluid"
            v-if="mode === 'edit'">
        @action Contact
    </button>
}

@section PostMainWindow {
    @if(!Model.IsCreate)
    {
        <window title="Notes">
            <notes :mode="mode"
                    parent-type="contact"
                    :parent-id="Number('@Model.Entity.ContactId')">
            </notes>
        </window>
    }
}

@section VueScript {
    data: {
        typeValue: "@Model?.Entity?.Type"
    }
}