const GRAPHQL_ENDPOINT = "/graphql";
export class GraphQL {
    static query(query, variables) {
        return fetch(GRAPHQL_ENDPOINT, {
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json"
            },
            method: "POST",
            body: JSON.stringify({
                query,
                variables
            })
        })
            .then(r => r.json())
            .then(json => {
            if (json.errors && json.errors.length > 0)
                throw json.errors;
            return json.data;
        })
            .then(json => {
            console.log(json);
            return json;
        });
    }
}
export default GraphQL;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGhxbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL1NjcmlwdHMvZ3JhcGhxbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLGdCQUFnQixHQUFXLFVBQVUsQ0FBQztBQUU1QyxNQUFNLE9BQU8sT0FBTztJQUNULE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBYSxFQUFFLFNBQXdCO1FBQ3ZELE9BQU8sS0FBSyxDQUNSLGdCQUFnQixFQUNoQjtZQUNJLE9BQU8sRUFBRTtnQkFDTCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixjQUFjLEVBQUUsa0JBQWtCO2FBQ3JDO1lBQ0QsTUFBTSxFQUFFLE1BQU07WUFDZCxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztnQkFDakIsS0FBSztnQkFDTCxTQUFTO2FBQ1osQ0FBQztTQUNMLENBQ0o7YUFDQSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ1QsSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUM7Z0JBQ3JDLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUN0QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDckIsQ0FBQyxDQUFDO2FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ1QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUNqQixPQUFPLElBQUksQ0FBQztRQUNoQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7Q0FDSjtBQUVELGVBQWUsT0FBTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgR1JBUEhRTF9FTkRQT0lOVDogc3RyaW5nID0gXCIvZ3JhcGhxbFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdyYXBoUUwge1xyXG4gICAgcHVibGljIHN0YXRpYyBxdWVyeShxdWVyeTogc3RyaW5nLCB2YXJpYWJsZXM6IG9iamVjdCB8IG51bGwpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChcclxuICAgICAgICAgICAgR1JBUEhRTF9FTkRQT0lOVCxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiQWNjZXB0XCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgICAgICBxdWVyeSxcclxuICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZXNcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICApXHJcbiAgICAgICAgLnRoZW4ociA9PiByLmpzb24oKSlcclxuICAgICAgICAudGhlbihqc29uID0+IHtcclxuICAgICAgICAgICAgaWYgKGpzb24uZXJyb3JzICYmIGpzb24uZXJyb3JzLmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgICAgICB0aHJvdyBqc29uLmVycm9ycztcclxuICAgICAgICAgICAgcmV0dXJuIGpzb24uZGF0YTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKGpzb24gPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhqc29uKVxyXG4gICAgICAgICAgICByZXR1cm4ganNvbjtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgR3JhcGhRTDsiXX0=