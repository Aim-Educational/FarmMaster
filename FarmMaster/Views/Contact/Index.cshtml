@model ContactIndexViewModel
@{
    ViewData["Title"] = "Index - Contacts";
}

<h1>Index</h1>

<partial name="_ViewModelWithMessagePartial" model="@Model" />

<section id="modalReason" class="ui modal">
    <section class="content">
        <section class="ui visible warning message">
            <p class="ui header">Warning!</p>
            <p>
                Accessing the contact information of a user or individual will fire off an email alerting them to
                your action. This is to deter people from mis-using their permissions to view data they shouldn't.
            </p>
        </section>
        <h4>Reason</h4>
        <div class="ui labeled fluid input">
            <input id="txtReasonForEdit" placeholder="Reason for edit" />
            <div class="ui corner label">
                <i class="asterisk icon"></i>
            </div>
        </div>
    </section>
    <section class="actions">
        <div class="ui black deny button">
            Cancel
        </div>
        <div class="ui positive button">
            Continue
        </div>
    </section>
</section>

<section id="modalConfirm" class="ui modal">
    <section class="content">
        <section class="ui visible error message">
            <p class="ui header">Are you sure?</p>
            <p>
                This action cannot be undone. Are you sure you want to delete this contact?
            </p>
        </section>
    </section>
    <section class="actions">
        <div class="ui black deny button">
            Cancel
        </div>
        <div class="ui positive button">
            Continue
        </div>
    </section>
</section>

<a class="ui primary button" asp-action="Create">
    Create New Contact
</a>

<table class="ui celled table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var contact in Model.Contacts)
        {
            <tr>
                <td>@contact.ShortName</td>
                <td>@contact.ContactType</td>
                <td class="ui two buttons">
                    <a class="ui inverted tiny secondary left button" onclick="showEditModal(@contact.ContactId)">
                        Edit
                    </a>
                    <div class="or divide hide mobile"></div>
                    <a class="ui inverted tiny secondary right button" onclick="showDeleteModal(@contact.ContactId)">
                        Delete
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function showEditModal(contactId) {
            $("#modalReason")
                .modal({
                    onApprove: function () {
                        let reasonForEdit = document.querySelector("#txtReasonForEdit").value;
                        window.location = "/Contact/Edit/" + contactId + "?reason=" + reasonForEdit;
                    }
                })
                .modal('show');
        }

        function showDeleteModal(contactId) {
            $("#modalConfirm")
                .modal({
                    onApprove: function () {
                        window.location = "/Contact/Delete/" + contactId;
                    }
                })
                .modal('show');
        }
    </script>
}