@model ContactEditViewModel
@using Business.Model
@{
    ViewData["Title"] = "Edit - Contact";

    var dbContext = Context.RequestServices.GetRequiredService<FarmMasterContext>();
}

<h1>Edit</h1>

<partial name="_ComponentModalContactActionReason" />

@if (Model.Contact.ContactType == Business.Model.Contact.Type.Individual)
{
    <div class="ui visible warning message">
        <div class="header">Attention about GDPR!</div>

        When adding in new data about an individual, <strong>ensure you have their consent!</strong>
    </div>
}

@if (Model.Contact.ContactType == Business.Model.Contact.Type.Entity)
{
    <div class="ui visible warning message">
        <div class="header">Attention about GDPR!</div>

        When adding in new data about an entity, if that data belongs to an individual person
        instead of the entity as a whole, then you must <strong>ensure you have that individual's consent!</strong>
    </div>
}

<partial name="_ViewModelWithMessagePartial" model="Model" />

<form class="ui form" method="post" asp-action="Edit">
    <input type="hidden" asp-for="Contact.ContactId" />
    <input type="hidden" asp-for="Contact.ContactType" />
    <input type="hidden" asp-for="Contact.Timestamp" />

    <h4 class="ui top attached header">
        General Info
    </h4>
    <section class="ui attached segment">
        <section class="field">
            <label>Full Name</label>
            <input asp-for="Contact.FullName" />
            <span class="@GlobalConstants.FormErrorClasses" asp-validation-for="Contact.FullName"></span>
        </section>
    </section>
    <section class="ui bottom attached segment">
        <button type="submit" class="ui fluid primary button">
            Update Information
        </button>
    </section>
</form>

<partial name="_ComponentTable" model='@{
    new ComponentTableViewModel
    {
        Header = "Phone Numbers",
        Name = "Phone",
        NameValues = Model.Contact.PhoneNumbers.Select(p => new ComponentTableNameValue
        {
            Name = p.Name,
            Value = p.Number
        }),
        NameInput = new ComponentTableTextInput(),
        ValueInput = new ComponentTableTextInput(),
        AjaxAdd = "/Contact/AjaxAddPhoneNumber",
        AjaxRemove = "/Contact/AjaxRemovePhoneNumberByName",
        DataId = Model.Contact.ContactId
    }
}' />

<partial name="_ComponentTable" model='@{
    new ComponentTableViewModel
    {
        Header = "Email Addresses",
        Name = "Email",
        NameValues = Model.Contact.EmailAddresses.Select(e => new ComponentTableNameValue
        {
            Name = e.Name,
            Value =  e.Address
        }),
        NameInput = new ComponentTableTextInput(),
        ValueInput = new ComponentTableTextInput(),
        AjaxAdd = "/Contact/AjaxAddEmailAddress",
        AjaxRemove = "/Contact/AjaxRemoveEmailAddressByName",
        DataId = Model.Contact.ContactId
    }
}' />

<partial name="_ComponentTable" model='@{
    new ComponentTableViewModel
    {
        Header = "Relationships",
        Name = "Relation",
        NameValues = Model.Contact.GetRelationships(dbContext).Select(r => new ComponentTableNameValue
        {
            AjaxName = r.MapContactRelationshipId,
            Name = r.Description,
            Value = r.GetContactNotMe(Model.Contact).ShortName
        }),
        NameInput = new ComponentTableTextInput(),
        ValueInput = new ComponentTableSelectInput
        {
            SelectValues = dbContext.Contacts.Where(c => !c.IsAnonymous).ToDictionary(c => c.ShortName, c => Convert.ToString(c.ContactId))
        },
        AjaxAdd = "/Contact/AjaxAddRelation",
        AjaxRemove = "/Contact/AjaxRemoveRelationById",
        DataId = Model.Contact.ContactId
    }
}' />