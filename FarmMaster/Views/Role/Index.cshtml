@model RoleIndexViewModel
@{
    Layout = "_GenericEditorLayout";
    ViewData["Title"] = "Roles";
    ViewData["Breadcrumb"] = new Dictionary<string, string>
{
        { "Home", "/Home/Index" },
        { "Roles", "/Role/Index" }
    };
}

<section class="editor section">
    <section>
        <partial name="_ViewModelWithMessagePartial" model="@Model" />

        <div class="content">
            <div class="top padded items">
                <a class="ui primary button" asp-action="Create">Create New Role</a>
                <a class="ui primary button" asp-action="Assign">Assign Roles to Users</a>
            </div>
            <vc:paged-table table-id="tableIndex"
                            headers="Name,Description,Hierarchy Order"
                            page-name="roles"
                            controller="Role"
                            action-delete="Delete"
                            action-edit="Edit" />
        </div>
    </section>
</section>

@section Scripts {
    <script type="module">
        import { PagedTable } from "/js/index.js"

        new PagedTable(
            "tableIndex",
            `query GetRoles($skip: Int, $take: Int) {
                    roles(skip: $skip, take: $take) {
                        id
                        name
                        description
                        order
                    }
                }`,
            data => data.roles.map(r => { return { id: r.id, items: [r.name, r.description, r.order] }; })
        );
    </script>
}