@{
    ViewData["Title"] = "[Dev] Control Test";
}

<div id="app">
    <window title="Inline input-wrapper test">
        <div class="input-wrapper inline">
            <label>This is inline</label>
            <textbox placeholder="Enter text..." />
        </div>
        <div class="input-wrapper inline">
            <label>This is inline</label>
            <textbox placeholder="Enter text..." />
        </div>
    </window>

    <window title="Not-inline input-wrapper test">
        <div class="input-wrapper">
            <label>This is not inline</label>
            <textbox placeholder="Enter text..." />
        </div>
        <div class="input-wrapper">
            <label>This is not inline</label>
            <textbox placeholder="Enter text..." />
        </div>
    </window>

    <div style="display: flex; width: 100%;">
        <div style="display:flex; flex-direction:column; width:50%; padding-right:5em;">
            <window title="1st column">
                <div class="input-wrapper">
                    <label>This is not inline</label>
                    <textbox placeholder="Enter text..." />
                </div>
            </window>
        </div>
        <div style="display:flex; flex-direction:column; width:50%;">
            <window title="2nd column">
                <div class="input-wrapper inline">
                    <label>This is inline</label>
                    <textbox placeholder="Enter text..." />
                </div>
            </window>
        </div>
    </div>

    <window title="Alert boxes">
        <alert type="error" ref="alert1" show>
            <header>Invalid password</header>
            <p>
                Your password is incorrect, it must contain a number.
            </p>
        </alert>
        <alert type="info" ref="alert2" show>
            <header>Did you know?</header>
            <p>
                90% of headaches are caused by Andy.
            </p>
        </alert>
        <button class="top margined"
                @@click="showAlerts">
            Toggle alerts
        </button>
    </window>

    <window title="Multiselect">
        <a href="https://vue-multiselect.js.org/">Documentation</a>
        <div class="input-wrapper inline">
            <label>Single select</label>
            <vue-multiselect v-model="singleselectData" :options="['a', 'b']"></vue-multiselect>
        </div>
        <div class="input-wrapper">
            <label>Multi select</label>
            <vue-multiselect multiple hide-selected v-model="multiselectData" :options="['Andy', 'smells']"></vue-multiselect>
        </div>
    </window>

    <window title="Table">
        <farm-table selection="multiple"
                    :rows="[{name: 'Username', bind: 'username', sort: true}, {name: 'Age', bind: 'age', sort:true}]"
                    :values="[{ username: { href: '#', value: 'Bradley' }, age: 20 }, { username: 'Andy', age: 200 }, { username: 'Debby', age: 120 }]"
                    ref="table"
                    @@selected="onTableSelectionChange">
            <template v-slot:tfoot>
                <button :disabled="tableButtonDisabled" @@click="freeGoat">Click me for a free goat</button>
            </template>
        </farm-table>
    </window>
</div>

@section Scripts {
    <script>
        new Vue({
            el: "#app",
            data: {
                singleselectData: "",
                multiselectData: null,
                tableButtonDisabled: true
            },
            methods: {
                showAlerts() {
                    this.$refs.alert1.toggle();
                    this.$refs.alert2.toggle();
                },

                freeGoat() {
                    alert("Row being sorted " + JSON.stringify(this.$refs.table.sortedRow));
                },

                onTableSelectionChange(event) {
                    this.tableButtonDisabled = event.selectedValues.length === 0;
                }
            }
        });
    </script>
}