### YamlMime:ManagedReference
items:
- uid: FarmMaster.Services.IViewRenderService
  commentId: T:FarmMaster.Services.IViewRenderService
  id: IViewRenderService
  parent: FarmMaster.Services
  children:
  - FarmMaster.Services.IViewRenderService.RenderToStringAsync(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: IViewRenderService
  nameWithType: IViewRenderService
  fullName: FarmMaster.Services.IViewRenderService
  type: Interface
  source:
    remote:
      path: FarmMaster/Services/IViewRenderService.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: IViewRenderService
    path: Services/IViewRenderService.cs
    startLine: 24
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  summary: "\nA service for rendering views as HTML strings.\n\nThis service is included due to the need for this functionality inside of emails.\n"
  example: []
  syntax:
    content: public interface IViewRenderService
    content.vb: Public Interface IViewRenderService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: FarmMaster.Services.IViewRenderService.RenderToStringAsync(System.String,System.Object)
  commentId: M:FarmMaster.Services.IViewRenderService.RenderToStringAsync(System.String,System.Object)
  id: RenderToStringAsync(System.String,System.Object)
  parent: FarmMaster.Services.IViewRenderService
  langs:
  - csharp
  - vb
  name: RenderToStringAsync(String, Object)
  nameWithType: IViewRenderService.RenderToStringAsync(String, Object)
  fullName: FarmMaster.Services.IViewRenderService.RenderToStringAsync(System.String, System.Object)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IViewRenderService.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: RenderToStringAsync
    path: Services/IViewRenderService.cs
    startLine: 26
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: Task<string> RenderToStringAsync(string viewName, object model)
    parameters:
    - id: viewName
      type: System.String
    - id: model
      type: System.Object
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function RenderToStringAsync(viewName As String, model As Object) As Task(Of String)
  overload: FarmMaster.Services.IViewRenderService.RenderToStringAsync*
references:
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: FarmMaster.Services.IViewRenderService.RenderToStringAsync*
  commentId: Overload:FarmMaster.Services.IViewRenderService.RenderToStringAsync
  name: RenderToStringAsync
  nameWithType: IViewRenderService.RenderToStringAsync
  fullName: FarmMaster.Services.IViewRenderService.RenderToStringAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
