### YamlMime:ManagedReference
items:
- uid: FarmMaster.Services.ServiceSmtpClient
  commentId: T:FarmMaster.Services.ServiceSmtpClient
  id: ServiceSmtpClient
  parent: FarmMaster.Services
  children:
  - FarmMaster.Services.ServiceSmtpClient.#ctor(Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpClientConfig},Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpTemplateConfig},FarmMaster.Services.IViewRenderService)
  - FarmMaster.Services.ServiceSmtpClient.ContainsTemplate(System.String)
  - FarmMaster.Services.ServiceSmtpClient.Dispose
  - FarmMaster.Services.ServiceSmtpClient.Dispose(System.Boolean)
  - FarmMaster.Services.ServiceSmtpClient.SendToAsync(Business.Model.User,System.Net.Mail.MailMessage)
  - FarmMaster.Services.ServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable{System.String},System.Net.Mail.MailMessage)
  - FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User,System.String,System.String,System.Object)
  - FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object)
  langs:
  - csharp
  - vb
  name: ServiceSmtpClient
  nameWithType: ServiceSmtpClient
  fullName: FarmMaster.Services.ServiceSmtpClient
  type: Class
  source:
    remote:
      path: FarmMaster/Services/IServiceSmtpClient.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ServiceSmtpClient
    path: Services/IServiceSmtpClient.cs
    startLine: 110
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: 'public class ServiceSmtpClient : IServiceSmtpClient, IDisposable'
    content.vb: >-
      Public Class ServiceSmtpClient

          Implements IServiceSmtpClient, IDisposable
  inheritance:
  - System.Object
  implements:
  - FarmMaster.Services.IServiceSmtpClient
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FarmMaster.Services.ServiceSmtpClient.#ctor(Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpClientConfig},Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpTemplateConfig},FarmMaster.Services.IViewRenderService)
  commentId: M:FarmMaster.Services.ServiceSmtpClient.#ctor(Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpClientConfig},Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpTemplateConfig},FarmMaster.Services.IViewRenderService)
  id: '#ctor(Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpClientConfig},Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpTemplateConfig},FarmMaster.Services.IViewRenderService)'
  parent: FarmMaster.Services.ServiceSmtpClient
  langs:
  - csharp
  - vb
  name: ServiceSmtpClient(IOptions<IServiceSmtpClientConfig>, IOptions<IServiceSmtpTemplateConfig>, IViewRenderService)
  nameWithType: ServiceSmtpClient.ServiceSmtpClient(IOptions<IServiceSmtpClientConfig>, IOptions<IServiceSmtpTemplateConfig>, IViewRenderService)
  fullName: FarmMaster.Services.ServiceSmtpClient.ServiceSmtpClient(Microsoft.Extensions.Options.IOptions<FarmMaster.Services.IServiceSmtpClientConfig>, Microsoft.Extensions.Options.IOptions<FarmMaster.Services.IServiceSmtpTemplateConfig>, FarmMaster.Services.IViewRenderService)
  type: Constructor
  source:
    remote:
      path: FarmMaster/Services/IServiceSmtpClient.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: Services/IServiceSmtpClient.cs
    startLine: 137
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public ServiceSmtpClient(IOptions<IServiceSmtpClientConfig> config, IOptions<IServiceSmtpTemplateConfig> templates, IViewRenderService viewRenderer)
    parameters:
    - id: config
      type: Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpClientConfig}
    - id: templates
      type: Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpTemplateConfig}
    - id: viewRenderer
      type: FarmMaster.Services.IViewRenderService
    content.vb: Public Sub New(config As IOptions(Of IServiceSmtpClientConfig), templates As IOptions(Of IServiceSmtpTemplateConfig), viewRenderer As IViewRenderService)
  overload: FarmMaster.Services.ServiceSmtpClient.#ctor*
  nameWithType.vb: ServiceSmtpClient.ServiceSmtpClient(IOptions(Of IServiceSmtpClientConfig), IOptions(Of IServiceSmtpTemplateConfig), IViewRenderService)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FarmMaster.Services.ServiceSmtpClient.ServiceSmtpClient(Microsoft.Extensions.Options.IOptions(Of FarmMaster.Services.IServiceSmtpClientConfig), Microsoft.Extensions.Options.IOptions(Of FarmMaster.Services.IServiceSmtpTemplateConfig), FarmMaster.Services.IViewRenderService)
  name.vb: ServiceSmtpClient(IOptions(Of IServiceSmtpClientConfig), IOptions(Of IServiceSmtpTemplateConfig), IViewRenderService)
- uid: FarmMaster.Services.ServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable{System.String},System.Net.Mail.MailMessage)
  commentId: M:FarmMaster.Services.ServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable{System.String},System.Net.Mail.MailMessage)
  id: SendToAsync(System.Collections.Generic.IEnumerable{System.String},System.Net.Mail.MailMessage)
  parent: FarmMaster.Services.ServiceSmtpClient
  langs:
  - csharp
  - vb
  name: SendToAsync(IEnumerable<String>, MailMessage)
  nameWithType: ServiceSmtpClient.SendToAsync(IEnumerable<String>, MailMessage)
  fullName: FarmMaster.Services.ServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable<System.String>, System.Net.Mail.MailMessage)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceSmtpClient.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: SendToAsync
    path: Services/IServiceSmtpClient.cs
    startLine: 146
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public Task SendToAsync(IEnumerable<string> emails, MailMessage message)
    parameters:
    - id: emails
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: message
      type: System.Net.Mail.MailMessage
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendToAsync(emails As IEnumerable(Of String), message As MailMessage) As Task
  overload: FarmMaster.Services.ServiceSmtpClient.SendToAsync*
  implements:
  - FarmMaster.Services.IServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable{System.String},System.Net.Mail.MailMessage)
  nameWithType.vb: ServiceSmtpClient.SendToAsync(IEnumerable(Of String), MailMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FarmMaster.Services.ServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable(Of System.String), System.Net.Mail.MailMessage)
  name.vb: SendToAsync(IEnumerable(Of String), MailMessage)
- uid: FarmMaster.Services.ServiceSmtpClient.SendToAsync(Business.Model.User,System.Net.Mail.MailMessage)
  commentId: M:FarmMaster.Services.ServiceSmtpClient.SendToAsync(Business.Model.User,System.Net.Mail.MailMessage)
  id: SendToAsync(Business.Model.User,System.Net.Mail.MailMessage)
  parent: FarmMaster.Services.ServiceSmtpClient
  langs:
  - csharp
  - vb
  name: SendToAsync(User, MailMessage)
  nameWithType: ServiceSmtpClient.SendToAsync(User, MailMessage)
  fullName: FarmMaster.Services.ServiceSmtpClient.SendToAsync(Business.Model.User, System.Net.Mail.MailMessage)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceSmtpClient.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: SendToAsync
    path: Services/IServiceSmtpClient.cs
    startLine: 157
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public Task SendToAsync(User user, MailMessage message)
    parameters:
    - id: user
      type: Business.Model.User
    - id: message
      type: System.Net.Mail.MailMessage
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendToAsync(user As User, message As MailMessage) As Task
  overload: FarmMaster.Services.ServiceSmtpClient.SendToAsync*
  implements:
  - FarmMaster.Services.IServiceSmtpClient.SendToAsync(Business.Model.User,System.Net.Mail.MailMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object)
  commentId: M:FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object)
  id: SendToWithTemplateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object)
  parent: FarmMaster.Services.ServiceSmtpClient
  langs:
  - csharp
  - vb
  name: SendToWithTemplateAsync(IEnumerable<String>, String, String, Object)
  nameWithType: ServiceSmtpClient.SendToWithTemplateAsync(IEnumerable<String>, String, String, Object)
  fullName: FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable<System.String>, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceSmtpClient.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: SendToWithTemplateAsync
    path: Services/IServiceSmtpClient.cs
    startLine: 162
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public Task SendToWithTemplateAsync(IEnumerable<string> emails, string templateName, string subject, object model)
    parameters:
    - id: emails
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: templateName
      type: System.String
    - id: subject
      type: System.String
    - id: model
      type: System.Object
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendToWithTemplateAsync(emails As IEnumerable(Of String), templateName As String, subject As String, model As Object) As Task
  overload: FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync*
  implements:
  - FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object)
  nameWithType.vb: ServiceSmtpClient.SendToWithTemplateAsync(IEnumerable(Of String), String, String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.String, System.Object)
  name.vb: SendToWithTemplateAsync(IEnumerable(Of String), String, String, Object)
- uid: FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User,System.String,System.String,System.Object)
  commentId: M:FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User,System.String,System.String,System.Object)
  id: SendToWithTemplateAsync(Business.Model.User,System.String,System.String,System.Object)
  parent: FarmMaster.Services.ServiceSmtpClient
  langs:
  - csharp
  - vb
  name: SendToWithTemplateAsync(User, String, String, Object)
  nameWithType: ServiceSmtpClient.SendToWithTemplateAsync(User, String, String, Object)
  fullName: FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User, System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceSmtpClient.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: SendToWithTemplateAsync
    path: Services/IServiceSmtpClient.cs
    startLine: 183
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public Task SendToWithTemplateAsync(User user, string templateName, string subject, object model)
    parameters:
    - id: user
      type: Business.Model.User
    - id: templateName
      type: System.String
    - id: subject
      type: System.String
    - id: model
      type: System.Object
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendToWithTemplateAsync(user As User, templateName As String, subject As String, model As Object) As Task
  overload: FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync*
  implements:
  - FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User,System.String,System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceSmtpClient.ContainsTemplate(System.String)
  commentId: M:FarmMaster.Services.ServiceSmtpClient.ContainsTemplate(System.String)
  id: ContainsTemplate(System.String)
  parent: FarmMaster.Services.ServiceSmtpClient
  langs:
  - csharp
  - vb
  name: ContainsTemplate(String)
  nameWithType: ServiceSmtpClient.ContainsTemplate(String)
  fullName: FarmMaster.Services.ServiceSmtpClient.ContainsTemplate(System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceSmtpClient.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ContainsTemplate
    path: Services/IServiceSmtpClient.cs
    startLine: 194
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public bool ContainsTemplate(string templateName)
    parameters:
    - id: templateName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ContainsTemplate(templateName As String) As Boolean
  overload: FarmMaster.Services.ServiceSmtpClient.ContainsTemplate*
  implements:
  - FarmMaster.Services.IServiceSmtpClient.ContainsTemplate(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceSmtpClient.Dispose(System.Boolean)
  commentId: M:FarmMaster.Services.ServiceSmtpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: FarmMaster.Services.ServiceSmtpClient
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ServiceSmtpClient.Dispose(Boolean)
  fullName: FarmMaster.Services.ServiceSmtpClient.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceSmtpClient.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Dispose
    path: Services/IServiceSmtpClient.cs
    startLine: 199
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: protected virtual void Dispose(bool disposeAll)
    parameters:
    - id: disposeAll
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposeAll As Boolean)
  overload: FarmMaster.Services.ServiceSmtpClient.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: FarmMaster.Services.ServiceSmtpClient.Dispose
  commentId: M:FarmMaster.Services.ServiceSmtpClient.Dispose
  id: Dispose
  parent: FarmMaster.Services.ServiceSmtpClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ServiceSmtpClient.Dispose()
  fullName: FarmMaster.Services.ServiceSmtpClient.Dispose()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceSmtpClient.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Dispose
    path: Services/IServiceSmtpClient.cs
    startLine: 205
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: FarmMaster.Services.ServiceSmtpClient.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FarmMaster.Services.IServiceSmtpClient
  commentId: T:FarmMaster.Services.IServiceSmtpClient
  parent: FarmMaster.Services
  name: IServiceSmtpClient
  nameWithType: IServiceSmtpClient
  fullName: FarmMaster.Services.IServiceSmtpClient
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.Services.ServiceSmtpClient.#ctor*
  commentId: Overload:FarmMaster.Services.ServiceSmtpClient.#ctor
  name: ServiceSmtpClient
  nameWithType: ServiceSmtpClient.ServiceSmtpClient
  fullName: FarmMaster.Services.ServiceSmtpClient.ServiceSmtpClient
- uid: Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpClientConfig}
  commentId: T:Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpClientConfig}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<IServiceSmtpClientConfig>
  nameWithType: IOptions<IServiceSmtpClientConfig>
  fullName: Microsoft.Extensions.Options.IOptions<FarmMaster.Services.IServiceSmtpClientConfig>
  nameWithType.vb: IOptions(Of IServiceSmtpClientConfig)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of FarmMaster.Services.IServiceSmtpClientConfig)
  name.vb: IOptions(Of IServiceSmtpClientConfig)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FarmMaster.Services.IServiceSmtpClientConfig
    name: IServiceSmtpClientConfig
    nameWithType: IServiceSmtpClientConfig
    fullName: FarmMaster.Services.IServiceSmtpClientConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FarmMaster.Services.IServiceSmtpClientConfig
    name: IServiceSmtpClientConfig
    nameWithType: IServiceSmtpClientConfig
    fullName: FarmMaster.Services.IServiceSmtpClientConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpTemplateConfig}
  commentId: T:Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpTemplateConfig}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<IServiceSmtpTemplateConfig>
  nameWithType: IOptions<IServiceSmtpTemplateConfig>
  fullName: Microsoft.Extensions.Options.IOptions<FarmMaster.Services.IServiceSmtpTemplateConfig>
  nameWithType.vb: IOptions(Of IServiceSmtpTemplateConfig)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of FarmMaster.Services.IServiceSmtpTemplateConfig)
  name.vb: IOptions(Of IServiceSmtpTemplateConfig)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FarmMaster.Services.IServiceSmtpTemplateConfig
    name: IServiceSmtpTemplateConfig
    nameWithType: IServiceSmtpTemplateConfig
    fullName: FarmMaster.Services.IServiceSmtpTemplateConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FarmMaster.Services.IServiceSmtpTemplateConfig
    name: IServiceSmtpTemplateConfig
    nameWithType: IServiceSmtpTemplateConfig
    fullName: FarmMaster.Services.IServiceSmtpTemplateConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IViewRenderService
  commentId: T:FarmMaster.Services.IViewRenderService
  parent: FarmMaster.Services
  name: IViewRenderService
  nameWithType: IViewRenderService
  fullName: FarmMaster.Services.IViewRenderService
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: FarmMaster.Services.ServiceSmtpClient.SendToAsync*
  commentId: Overload:FarmMaster.Services.ServiceSmtpClient.SendToAsync
  name: SendToAsync
  nameWithType: ServiceSmtpClient.SendToAsync
  fullName: FarmMaster.Services.ServiceSmtpClient.SendToAsync
- uid: FarmMaster.Services.IServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable{System.String},System.Net.Mail.MailMessage)
  commentId: M:FarmMaster.Services.IServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable{System.String},System.Net.Mail.MailMessage)
  parent: FarmMaster.Services.IServiceSmtpClient
  isExternal: true
  name: SendToAsync(IEnumerable<String>, MailMessage)
  nameWithType: IServiceSmtpClient.SendToAsync(IEnumerable<String>, MailMessage)
  fullName: FarmMaster.Services.IServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable<System.String>, System.Net.Mail.MailMessage)
  nameWithType.vb: IServiceSmtpClient.SendToAsync(IEnumerable(Of String), MailMessage)
  fullName.vb: FarmMaster.Services.IServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable(Of System.String), System.Net.Mail.MailMessage)
  name.vb: SendToAsync(IEnumerable(Of String), MailMessage)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable{System.String},System.Net.Mail.MailMessage)
    name: SendToAsync
    nameWithType: IServiceSmtpClient.SendToAsync
    fullName: FarmMaster.Services.IServiceSmtpClient.SendToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Mail.MailMessage
    name: MailMessage
    nameWithType: MailMessage
    fullName: System.Net.Mail.MailMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceSmtpClient.SendToAsync(System.Collections.Generic.IEnumerable{System.String},System.Net.Mail.MailMessage)
    name: SendToAsync
    nameWithType: IServiceSmtpClient.SendToAsync
    fullName: FarmMaster.Services.IServiceSmtpClient.SendToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Mail.MailMessage
    name: MailMessage
    nameWithType: MailMessage
    fullName: System.Net.Mail.MailMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Mail.MailMessage
  commentId: T:System.Net.Mail.MailMessage
  parent: System.Net.Mail
  isExternal: true
  name: MailMessage
  nameWithType: MailMessage
  fullName: System.Net.Mail.MailMessage
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Net.Mail
  commentId: N:System.Net.Mail
  isExternal: true
  name: System.Net.Mail
  nameWithType: System.Net.Mail
  fullName: System.Net.Mail
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FarmMaster.Services.IServiceSmtpClient.SendToAsync(Business.Model.User,System.Net.Mail.MailMessage)
  commentId: M:FarmMaster.Services.IServiceSmtpClient.SendToAsync(Business.Model.User,System.Net.Mail.MailMessage)
  parent: FarmMaster.Services.IServiceSmtpClient
  isExternal: true
  name: SendToAsync(User, MailMessage)
  nameWithType: IServiceSmtpClient.SendToAsync(User, MailMessage)
  fullName: FarmMaster.Services.IServiceSmtpClient.SendToAsync(Business.Model.User, System.Net.Mail.MailMessage)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceSmtpClient.SendToAsync(Business.Model.User,System.Net.Mail.MailMessage)
    name: SendToAsync
    nameWithType: IServiceSmtpClient.SendToAsync
    fullName: FarmMaster.Services.IServiceSmtpClient.SendToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Mail.MailMessage
    name: MailMessage
    nameWithType: MailMessage
    fullName: System.Net.Mail.MailMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceSmtpClient.SendToAsync(Business.Model.User,System.Net.Mail.MailMessage)
    name: SendToAsync
    nameWithType: IServiceSmtpClient.SendToAsync
    fullName: FarmMaster.Services.IServiceSmtpClient.SendToAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.Mail.MailMessage
    name: MailMessage
    nameWithType: MailMessage
    fullName: System.Net.Mail.MailMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.User
  commentId: T:Business.Model.User
  parent: Business.Model
  name: User
  nameWithType: User
  fullName: Business.Model.User
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync*
  commentId: Overload:FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync
  name: SendToWithTemplateAsync
  nameWithType: ServiceSmtpClient.SendToWithTemplateAsync
  fullName: FarmMaster.Services.ServiceSmtpClient.SendToWithTemplateAsync
- uid: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object)
  commentId: M:FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object)
  parent: FarmMaster.Services.IServiceSmtpClient
  isExternal: true
  name: SendToWithTemplateAsync(IEnumerable<String>, String, String, Object)
  nameWithType: IServiceSmtpClient.SendToWithTemplateAsync(IEnumerable<String>, String, String, Object)
  fullName: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable<System.String>, System.String, System.String, System.Object)
  nameWithType.vb: IServiceSmtpClient.SendToWithTemplateAsync(IEnumerable(Of String), String, String, Object)
  fullName.vb: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.String, System.Object)
  name.vb: SendToWithTemplateAsync(IEnumerable(Of String), String, String, Object)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object)
    name: SendToWithTemplateAsync
    nameWithType: IServiceSmtpClient.SendToWithTemplateAsync
    fullName: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Object)
    name: SendToWithTemplateAsync
    nameWithType: IServiceSmtpClient.SendToWithTemplateAsync
    fullName: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User,System.String,System.String,System.Object)
  commentId: M:FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User,System.String,System.String,System.Object)
  parent: FarmMaster.Services.IServiceSmtpClient
  isExternal: true
  name: SendToWithTemplateAsync(User, String, String, Object)
  nameWithType: IServiceSmtpClient.SendToWithTemplateAsync(User, String, String, Object)
  fullName: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User, System.String, System.String, System.Object)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User,System.String,System.String,System.Object)
    name: SendToWithTemplateAsync
    nameWithType: IServiceSmtpClient.SendToWithTemplateAsync
    fullName: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync(Business.Model.User,System.String,System.String,System.Object)
    name: SendToWithTemplateAsync
    nameWithType: IServiceSmtpClient.SendToWithTemplateAsync
    fullName: FarmMaster.Services.IServiceSmtpClient.SendToWithTemplateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceSmtpClient.ContainsTemplate*
  commentId: Overload:FarmMaster.Services.ServiceSmtpClient.ContainsTemplate
  name: ContainsTemplate
  nameWithType: ServiceSmtpClient.ContainsTemplate
  fullName: FarmMaster.Services.ServiceSmtpClient.ContainsTemplate
- uid: FarmMaster.Services.IServiceSmtpClient.ContainsTemplate(System.String)
  commentId: M:FarmMaster.Services.IServiceSmtpClient.ContainsTemplate(System.String)
  parent: FarmMaster.Services.IServiceSmtpClient
  isExternal: true
  name: ContainsTemplate(String)
  nameWithType: IServiceSmtpClient.ContainsTemplate(String)
  fullName: FarmMaster.Services.IServiceSmtpClient.ContainsTemplate(System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceSmtpClient.ContainsTemplate(System.String)
    name: ContainsTemplate
    nameWithType: IServiceSmtpClient.ContainsTemplate
    fullName: FarmMaster.Services.IServiceSmtpClient.ContainsTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceSmtpClient.ContainsTemplate(System.String)
    name: ContainsTemplate
    nameWithType: IServiceSmtpClient.ContainsTemplate
    fullName: FarmMaster.Services.IServiceSmtpClient.ContainsTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: FarmMaster.Services.ServiceSmtpClient.Dispose*
  commentId: Overload:FarmMaster.Services.ServiceSmtpClient.Dispose
  name: Dispose
  nameWithType: ServiceSmtpClient.Dispose
  fullName: FarmMaster.Services.ServiceSmtpClient.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
