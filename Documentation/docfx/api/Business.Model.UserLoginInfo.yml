### YamlMime:ManagedReference
items:
- uid: Business.Model.UserLoginInfo
  commentId: T:Business.Model.UserLoginInfo
  id: UserLoginInfo
  parent: Business.Model
  children:
  - Business.Model.UserLoginInfo.PassHash
  - Business.Model.UserLoginInfo.Salt
  - Business.Model.UserLoginInfo.SessionToken
  - Business.Model.UserLoginInfo.SessionTokenExpiry
  - Business.Model.UserLoginInfo.Timestamp
  - Business.Model.UserLoginInfo.UserLoginInfoId
  - Business.Model.UserLoginInfo.Username
  langs:
  - csharp
  - vb
  name: UserLoginInfo
  nameWithType: UserLoginInfo
  fullName: Business.Model.UserLoginInfo
  type: Class
  source:
    remote:
      path: Business/Model/UserLoginInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserLoginInfo
    path: ../Business/Model/UserLoginInfo.cs
    startLine: 7
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public class UserLoginInfo
    content.vb: Public Class UserLoginInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Business.Model.UserLoginInfo.UserLoginInfoId
  commentId: P:Business.Model.UserLoginInfo.UserLoginInfoId
  id: UserLoginInfoId
  parent: Business.Model.UserLoginInfo
  langs:
  - csharp
  - vb
  name: UserLoginInfoId
  nameWithType: UserLoginInfo.UserLoginInfoId
  fullName: Business.Model.UserLoginInfo.UserLoginInfoId
  type: Property
  source:
    remote:
      path: Business/Model/UserLoginInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserLoginInfoId
    path: ../Business/Model/UserLoginInfo.cs
    startLine: 9
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Key]

      public int UserLoginInfoId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Key>

      Public Property UserLoginInfoId As Integer
  overload: Business.Model.UserLoginInfo.UserLoginInfoId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.UserLoginInfo.Username
  commentId: P:Business.Model.UserLoginInfo.Username
  id: Username
  parent: Business.Model.UserLoginInfo
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: UserLoginInfo.Username
  fullName: Business.Model.UserLoginInfo.Username
  type: Property
  source:
    remote:
      path: Business/Model/UserLoginInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Username
    path: ../Business/Model/UserLoginInfo.cs
    startLine: 12
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      [StringLength(75)]

      public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(75)>

      Public Property Username As String
  overload: Business.Model.UserLoginInfo.Username*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 75
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.UserLoginInfo.PassHash
  commentId: P:Business.Model.UserLoginInfo.PassHash
  id: PassHash
  parent: Business.Model.UserLoginInfo
  langs:
  - csharp
  - vb
  name: PassHash
  nameWithType: UserLoginInfo.PassHash
  fullName: Business.Model.UserLoginInfo.PassHash
  type: Property
  source:
    remote:
      path: Business/Model/UserLoginInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: PassHash
    path: ../Business/Model/UserLoginInfo.cs
    startLine: 16
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      [DataType(DataType.Password)]

      [StringLength(60)]

      public string PassHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <DataType(DataType.Password)>

      <StringLength(60)>

      Public Property PassHash As String
  overload: Business.Model.UserLoginInfo.PassHash*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 60
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.UserLoginInfo.Salt
  commentId: P:Business.Model.UserLoginInfo.Salt
  id: Salt
  parent: Business.Model.UserLoginInfo
  langs:
  - csharp
  - vb
  name: Salt
  nameWithType: UserLoginInfo.Salt
  fullName: Business.Model.UserLoginInfo.Salt
  type: Property
  source:
    remote:
      path: Business/Model/UserLoginInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Salt
    path: ../Business/Model/UserLoginInfo.cs
    startLine: 21
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      public string Salt { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Salt As String
  overload: Business.Model.UserLoginInfo.Salt*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.UserLoginInfo.SessionToken
  commentId: P:Business.Model.UserLoginInfo.SessionToken
  id: SessionToken
  parent: Business.Model.UserLoginInfo
  langs:
  - csharp
  - vb
  name: SessionToken
  nameWithType: UserLoginInfo.SessionToken
  fullName: Business.Model.UserLoginInfo.SessionToken
  type: Property
  source:
    remote:
      path: Business/Model/UserLoginInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: SessionToken
    path: ../Business/Model/UserLoginInfo.cs
    startLine: 24
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public string SessionToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SessionToken As String
  overload: Business.Model.UserLoginInfo.SessionToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.UserLoginInfo.SessionTokenExpiry
  commentId: P:Business.Model.UserLoginInfo.SessionTokenExpiry
  id: SessionTokenExpiry
  parent: Business.Model.UserLoginInfo
  langs:
  - csharp
  - vb
  name: SessionTokenExpiry
  nameWithType: UserLoginInfo.SessionTokenExpiry
  fullName: Business.Model.UserLoginInfo.SessionTokenExpiry
  type: Property
  source:
    remote:
      path: Business/Model/UserLoginInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: SessionTokenExpiry
    path: ../Business/Model/UserLoginInfo.cs
    startLine: 25
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DateTimeOffset SessionTokenExpiry { get; set; }
    parameters: []
    return:
      type: System.DateTimeOffset
    content.vb: Public Property SessionTokenExpiry As DateTimeOffset
  overload: Business.Model.UserLoginInfo.SessionTokenExpiry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.UserLoginInfo.Timestamp
  commentId: P:Business.Model.UserLoginInfo.Timestamp
  id: Timestamp
  parent: Business.Model.UserLoginInfo
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: UserLoginInfo.Timestamp
  fullName: Business.Model.UserLoginInfo.Timestamp
  type: Property
  source:
    remote:
      path: Business/Model/UserLoginInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Timestamp
    path: ../Business/Model/UserLoginInfo.cs
    startLine: 27
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Timestamp]

      public byte[] Timestamp { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: >-
      <Timestamp>

      Public Property Timestamp As Byte()
  overload: Business.Model.UserLoginInfo.Timestamp*
  attributes:
  - type: System.ComponentModel.DataAnnotations.TimestampAttribute
    ctor: System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Business.Model.UserLoginInfo.UserLoginInfoId*
  commentId: Overload:Business.Model.UserLoginInfo.UserLoginInfoId
  name: UserLoginInfoId
  nameWithType: UserLoginInfo.UserLoginInfoId
  fullName: Business.Model.UserLoginInfo.UserLoginInfoId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Business.Model.UserLoginInfo.Username*
  commentId: Overload:Business.Model.UserLoginInfo.Username
  name: Username
  nameWithType: UserLoginInfo.Username
  fullName: Business.Model.UserLoginInfo.Username
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Business.Model.UserLoginInfo.PassHash*
  commentId: Overload:Business.Model.UserLoginInfo.PassHash
  name: PassHash
  nameWithType: UserLoginInfo.PassHash
  fullName: Business.Model.UserLoginInfo.PassHash
- uid: Business.Model.UserLoginInfo.Salt*
  commentId: Overload:Business.Model.UserLoginInfo.Salt
  name: Salt
  nameWithType: UserLoginInfo.Salt
  fullName: Business.Model.UserLoginInfo.Salt
- uid: Business.Model.UserLoginInfo.SessionToken*
  commentId: Overload:Business.Model.UserLoginInfo.SessionToken
  name: SessionToken
  nameWithType: UserLoginInfo.SessionToken
  fullName: Business.Model.UserLoginInfo.SessionToken
- uid: Business.Model.UserLoginInfo.SessionTokenExpiry*
  commentId: Overload:Business.Model.UserLoginInfo.SessionTokenExpiry
  name: SessionTokenExpiry
  nameWithType: UserLoginInfo.SessionTokenExpiry
  fullName: Business.Model.UserLoginInfo.SessionTokenExpiry
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Business.Model.UserLoginInfo.Timestamp*
  commentId: Overload:Business.Model.UserLoginInfo.Timestamp
  name: Timestamp
  nameWithType: UserLoginInfo.Timestamp
  fullName: Business.Model.UserLoginInfo.Timestamp
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
