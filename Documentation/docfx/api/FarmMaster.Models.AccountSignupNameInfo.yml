### YamlMime:ManagedReference
items:
- uid: FarmMaster.Models.AccountSignupNameInfo
  commentId: T:FarmMaster.Models.AccountSignupNameInfo
  id: AccountSignupNameInfo
  parent: FarmMaster.Models
  children:
  - FarmMaster.Models.AccountSignupNameInfo.FirstName
  - FarmMaster.Models.AccountSignupNameInfo.LastName
  - FarmMaster.Models.AccountSignupNameInfo.MiddleNames
  langs:
  - csharp
  - vb
  name: AccountSignupNameInfo
  nameWithType: AccountSignupNameInfo
  fullName: FarmMaster.Models.AccountSignupNameInfo
  type: Class
  source:
    remote:
      path: FarmMaster/Models/AccountViewModels.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AccountSignupNameInfo
    path: Models/AccountViewModels.cs
    startLine: 53
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public class AccountSignupNameInfo
    content.vb: Public Class AccountSignupNameInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FarmMaster.Models.AccountSignupNameInfo.FirstName
  commentId: P:FarmMaster.Models.AccountSignupNameInfo.FirstName
  id: FirstName
  parent: FarmMaster.Models.AccountSignupNameInfo
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: AccountSignupNameInfo.FirstName
  fullName: FarmMaster.Models.AccountSignupNameInfo.FirstName
  type: Property
  source:
    remote:
      path: FarmMaster/Models/AccountViewModels.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: FirstName
    path: Models/AccountViewModels.cs
    startLine: 55
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: >-
      [Required]

      [RegularExpression("^[a-zA-Z-]+$")]

      public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <RegularExpression("^[a-zA-Z-]+$")>

      Public Property FirstName As String
  overload: FarmMaster.Models.AccountSignupNameInfo.FirstName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ^[a-zA-Z-]+$
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.AccountSignupNameInfo.MiddleNames
  commentId: P:FarmMaster.Models.AccountSignupNameInfo.MiddleNames
  id: MiddleNames
  parent: FarmMaster.Models.AccountSignupNameInfo
  langs:
  - csharp
  - vb
  name: MiddleNames
  nameWithType: AccountSignupNameInfo.MiddleNames
  fullName: FarmMaster.Models.AccountSignupNameInfo.MiddleNames
  type: Property
  source:
    remote:
      path: FarmMaster/Models/AccountViewModels.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MiddleNames
    path: Models/AccountViewModels.cs
    startLine: 59
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: >-
      [RegularExpression("^[a-zA-Z-\\s]+$")]

      public string MiddleNames { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RegularExpression("^[a-zA-Z-\s]+$")>

      Public Property MiddleNames As String
  overload: FarmMaster.Models.AccountSignupNameInfo.MiddleNames*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ^[a-zA-Z-\s]+$
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.AccountSignupNameInfo.LastName
  commentId: P:FarmMaster.Models.AccountSignupNameInfo.LastName
  id: LastName
  parent: FarmMaster.Models.AccountSignupNameInfo
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: AccountSignupNameInfo.LastName
  fullName: FarmMaster.Models.AccountSignupNameInfo.LastName
  type: Property
  source:
    remote:
      path: FarmMaster/Models/AccountViewModels.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: LastName
    path: Models/AccountViewModels.cs
    startLine: 62
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: >-
      [Required]

      [RegularExpression("^[a-zA-Z-]+$")]

      public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <RegularExpression("^[a-zA-Z-]+$")>

      Public Property LastName As String
  overload: FarmMaster.Models.AccountSignupNameInfo.LastName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ^[a-zA-Z-]+$
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: FarmMaster.Models
  commentId: N:FarmMaster.Models
  name: FarmMaster.Models
  nameWithType: FarmMaster.Models
  fullName: FarmMaster.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.Models.AccountSignupNameInfo.FirstName*
  commentId: Overload:FarmMaster.Models.AccountSignupNameInfo.FirstName
  name: FirstName
  nameWithType: AccountSignupNameInfo.FirstName
  fullName: FarmMaster.Models.AccountSignupNameInfo.FirstName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FarmMaster.Models.AccountSignupNameInfo.MiddleNames*
  commentId: Overload:FarmMaster.Models.AccountSignupNameInfo.MiddleNames
  name: MiddleNames
  nameWithType: AccountSignupNameInfo.MiddleNames
  fullName: FarmMaster.Models.AccountSignupNameInfo.MiddleNames
- uid: FarmMaster.Models.AccountSignupNameInfo.LastName*
  commentId: Overload:FarmMaster.Models.AccountSignupNameInfo.LastName
  name: LastName
  nameWithType: AccountSignupNameInfo.LastName
  fullName: FarmMaster.Models.AccountSignupNameInfo.LastName
