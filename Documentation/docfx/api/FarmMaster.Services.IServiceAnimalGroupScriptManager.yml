### YamlMime:ManagedReference
items:
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager
  commentId: T:FarmMaster.Services.IServiceAnimalGroupScriptManager
  id: IServiceAnimalGroupScriptManager
  parent: FarmMaster.Services
  children:
  - FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  - FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: IServiceAnimalGroupScriptManager
  nameWithType: IServiceAnimalGroupScriptManager
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager
  type: Interface
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: IServiceAnimalGroupScriptManager
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 11
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: 'public interface IServiceAnimalGroupScriptManager : IServiceEntityManager<AnimalGroupScript>'
    content.vb: >-
      Public Interface IServiceAnimalGroupScriptManager

          Inherits IServiceEntityManager(Of AnimalGroupScript)
  inheritedMembers:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Query
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.QueryAllIncluded
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.GetIdFor(Business.Model.AnimalGroupScript)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Update(Business.Model.AnimalGroupScript)
  extensionMethods:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  commentId: M:FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  id: CompileAndCreate(System.String)
  parent: FarmMaster.Services.IServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: CompileAndCreate(String)
  nameWithType: IServiceAnimalGroupScriptManager.CompileAndCreate(String)
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: CompileAndCreate
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 13
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: AnimalGroupScript CompileAndCreate(string code)
    parameters:
    - id: code
      type: System.String
    return:
      type: Business.Model.AnimalGroupScript
    content.vb: Function CompileAndCreate(code As String) As AnimalGroupScript
  overload: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate*
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: FarmMaster.Services.IServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: ExecuteScriptByName(String, IDictionary<String, Object>)
  nameWithType: IServiceAnimalGroupScriptManager.ExecuteScriptByName(String, IDictionary<String, Object>)
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ExecuteScriptByName
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 14
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: IQueryable<Animal> ExecuteScriptByName(string name, IDictionary<string, object> parameters = null)
    parameters:
    - id: name
      type: System.String
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: System.Linq.IQueryable{Business.Model.Animal}
    content.vb: Function ExecuteScriptByName(name As String, parameters As IDictionary(Of String, Object) = Nothing) As IQueryable(Of Animal)
  overload: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName*
  nameWithType.vb: IServiceAnimalGroupScriptManager.ExecuteScriptByName(String, IDictionary(Of String, Object))
  fullName.vb: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExecuteScriptByName(String, IDictionary(Of String, Object))
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: FarmMaster.Services.IServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: ExecuteSingleUseScript(String, IDictionary<String, Object>)
  nameWithType: IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(String, IDictionary<String, Object>)
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ExecuteSingleUseScript
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 15
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: IQueryable<Animal> ExecuteSingleUseScript(string code, IDictionary<string, object> parameters = null)
    parameters:
    - id: code
      type: System.String
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: System.Linq.IQueryable{Business.Model.Animal}
    content.vb: Function ExecuteSingleUseScript(code As String, parameters As IDictionary(Of String, Object) = Nothing) As IQueryable(Of Animal)
  overload: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript*
  nameWithType.vb: IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(String, IDictionary(Of String, Object))
  fullName.vb: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExecuteSingleUseScript(String, IDictionary(Of String, Object))
references:
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Query
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  definition: FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<AnimalGroupScript>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.Query()
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<AnimalGroupScript>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of AnimalGroupScript).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.QueryAllIncluded
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  definition: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<AnimalGroupScript>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<AnimalGroupScript>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of AnimalGroupScript).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.GetIdFor(Business.Model.AnimalGroupScript)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.GetIdFor(Business.Model.AnimalGroupScript)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  definition: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(AnimalGroupScript)
  nameWithType: IServiceEntityManager<AnimalGroupScript>.GetIdFor(AnimalGroupScript)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.GetIdFor(Business.Model.AnimalGroupScript)
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript).GetIdFor(AnimalGroupScript)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).GetIdFor(Business.Model.AnimalGroupScript)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<AnimalGroupScript>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of AnimalGroupScript).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Update(Business.Model.AnimalGroupScript)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Update(Business.Model.AnimalGroupScript)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  definition: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(AnimalGroupScript)
  nameWithType: IServiceEntityManager<AnimalGroupScript>.Update(AnimalGroupScript)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.Update(Business.Model.AnimalGroupScript)
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript).Update(AnimalGroupScript)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).Update(Business.Model.AnimalGroupScript)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<AnimalGroupScript>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of AnimalGroupScript).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromId<AnimalGroupScript>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<AnimalGroupScript>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalGroupScript>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of AnimalGroupScript)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalGroupScript)(System.Int32)
  name.vb: FromId(Of AnimalGroupScript)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId<AnimalGroupScript>
    nameWithType: IServiceEntityDataExtentions.FromId<AnimalGroupScript>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalGroupScript>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId(Of AnimalGroupScript)
    nameWithType: IServiceEntityDataExtentions.FromId(Of AnimalGroupScript)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalGroupScript)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromIdAllIncluded<AnimalGroupScript>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalGroupScript>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalGroupScript>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalGroupScript)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalGroupScript)(System.Int32)
  name.vb: FromIdAllIncluded(Of AnimalGroupScript)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded<AnimalGroupScript>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalGroupScript>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalGroupScript>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded(Of AnimalGroupScript)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalGroupScript)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalGroupScript)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<AnimalGroupScript>()
  nameWithType: IServiceEntityDataExtentions.For<AnimalGroupScript>()
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalGroupScript>()
  nameWithType.vb: IServiceEntityDataExtentions.For(Of AnimalGroupScript)()
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalGroupScript)()
  name.vb: For(Of AnimalGroupScript)()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For<AnimalGroupScript>
    nameWithType: IServiceEntityDataExtentions.For<AnimalGroupScript>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalGroupScript>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For(Of AnimalGroupScript)
    nameWithType: IServiceEntityDataExtentions.For(Of AnimalGroupScript)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalGroupScript)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<T>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Query()
  nameWithType.vb: IServiceEntityManager(Of T).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<T>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of T).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  commentId: T:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<AnimalGroupScript>
  nameWithType: IServiceEntityManager<AnimalGroupScript>
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript)
  name.vb: IServiceEntityManager(Of AnimalGroupScript)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<T>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of T).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<T>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of T).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(T)
  nameWithType: IServiceEntityManager<T>.GetIdFor(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor(T)
  nameWithType.vb: IServiceEntityManager(Of T).GetIdFor(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<T>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of T).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(T)
  nameWithType: IServiceEntityManager<T>.Update(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Update(T)
  nameWithType.vb: IServiceEntityManager(Of T).Update(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Update(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<T>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of T).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromId<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromId(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId<T>
    nameWithType: IServiceEntityDataExtentions.FromId<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId(Of T)
    nameWithType: IServiceEntityDataExtentions.FromId(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions
  commentId: T:FarmMaster.Services.IServiceEntityDataExtentions
  parent: FarmMaster.Services
  name: IServiceEntityDataExtentions
  nameWithType: IServiceEntityDataExtentions
  fullName: FarmMaster.Services.IServiceEntityDataExtentions
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded<T>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded(Of T)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<T>(IServiceEntityManager<T>)
  nameWithType: IServiceEntityDataExtentions.For<T>(IServiceEntityManager<T>)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>(FarmMaster.Services.IServiceEntityManager<T>)
  nameWithType.vb: IServiceEntityDataExtentions.For(Of T)(IServiceEntityManager(Of T))
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)(FarmMaster.Services.IServiceEntityManager(Of T))
  name.vb: For(Of T)(IServiceEntityManager(Of T))
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For<T>
    nameWithType: IServiceEntityDataExtentions.For<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For(Of T)
    nameWithType: IServiceEntityDataExtentions.For(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1
  commentId: T:FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<T>
  nameWithType: IServiceEntityManager<T>
  fullName: FarmMaster.Services.IServiceEntityManager<T>
  nameWithType.vb: IServiceEntityManager(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T)
  name.vb: IServiceEntityManager(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate*
  commentId: Overload:FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate
  name: CompileAndCreate
  nameWithType: IServiceAnimalGroupScriptManager.CompileAndCreate
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Business.Model.AnimalGroupScript
  commentId: T:Business.Model.AnimalGroupScript
  parent: Business.Model
  name: AnimalGroupScript
  nameWithType: AnimalGroupScript
  fullName: Business.Model.AnimalGroupScript
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName*
  commentId: Overload:FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName
  name: ExecuteScriptByName
  nameWithType: IServiceAnimalGroupScriptManager.ExecuteScriptByName
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{Business.Model.Animal}
  commentId: T:System.Linq.IQueryable{Business.Model.Animal}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<Animal>
  nameWithType: IQueryable<Animal>
  fullName: System.Linq.IQueryable<Business.Model.Animal>
  nameWithType.vb: IQueryable(Of Animal)
  fullName.vb: System.Linq.IQueryable(Of Business.Model.Animal)
  name.vb: IQueryable(Of Animal)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript*
  commentId: Overload:FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript
  name: ExecuteSingleUseScript
  nameWithType: IServiceAnimalGroupScriptManager.ExecuteSingleUseScript
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript
