### YamlMime:ManagedReference
items:
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager
  commentId: T:FarmMaster.Services.ServiceAnimalGroupScriptManager
  id: ServiceAnimalGroupScriptManager
  parent: FarmMaster.Services
  children:
  - FarmMaster.Services.ServiceAnimalGroupScriptManager.#ctor(Business.Model.FarmMasterContext)
  - FarmMaster.Services.ServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  - FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - FarmMaster.Services.ServiceAnimalGroupScriptManager.GetIdFor(Business.Model.AnimalGroupScript)
  - FarmMaster.Services.ServiceAnimalGroupScriptManager.Query
  - FarmMaster.Services.ServiceAnimalGroupScriptManager.QueryAllIncluded
  - FarmMaster.Services.ServiceAnimalGroupScriptManager.Update(Business.Model.AnimalGroupScript)
  langs:
  - csharp
  - vb
  name: ServiceAnimalGroupScriptManager
  nameWithType: ServiceAnimalGroupScriptManager
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager
  type: Class
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ServiceAnimalGroupScriptManager
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 18
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: 'public class ServiceAnimalGroupScriptManager : IServiceAnimalGroupScriptManager, IServiceEntityManager<AnimalGroupScript>'
    content.vb: >-
      Public Class ServiceAnimalGroupScriptManager

          Implements IServiceAnimalGroupScriptManager, IServiceEntityManager(Of AnimalGroupScript)
  inheritance:
  - System.Object
  implements:
  - FarmMaster.Services.IServiceAnimalGroupScriptManager
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.#ctor(Business.Model.FarmMasterContext)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupScriptManager.#ctor(Business.Model.FarmMasterContext)
  id: '#ctor(Business.Model.FarmMasterContext)'
  parent: FarmMaster.Services.ServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: ServiceAnimalGroupScriptManager(FarmMasterContext)
  nameWithType: ServiceAnimalGroupScriptManager.ServiceAnimalGroupScriptManager(FarmMasterContext)
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.ServiceAnimalGroupScriptManager(Business.Model.FarmMasterContext)
  type: Constructor
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 22
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public ServiceAnimalGroupScriptManager(FarmMasterContext db)
    parameters:
    - id: db
      type: Business.Model.FarmMasterContext
    content.vb: Public Sub New(db As FarmMasterContext)
  overload: FarmMaster.Services.ServiceAnimalGroupScriptManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  id: CompileAndCreate(System.String)
  parent: FarmMaster.Services.ServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: CompileAndCreate(String)
  nameWithType: ServiceAnimalGroupScriptManager.CompileAndCreate(String)
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: CompileAndCreate
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 27
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public AnimalGroupScript CompileAndCreate(string code)
    parameters:
    - id: code
      type: System.String
    return:
      type: Business.Model.AnimalGroupScript
    content.vb: Public Function CompileAndCreate(code As String) As AnimalGroupScript
  overload: FarmMaster.Services.ServiceAnimalGroupScriptManager.CompileAndCreate*
  implements:
  - FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: FarmMaster.Services.ServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: ExecuteScriptByName(String, IDictionary<String, Object>)
  nameWithType: ServiceAnimalGroupScriptManager.ExecuteScriptByName(String, IDictionary<String, Object>)
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ExecuteScriptByName
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 47
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<Animal> ExecuteScriptByName(string name, IDictionary<string, object> parameters = null)
    parameters:
    - id: name
      type: System.String
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: System.Linq.IQueryable{Business.Model.Animal}
    content.vb: Public Function ExecuteScriptByName(name As String, parameters As IDictionary(Of String, Object) = Nothing) As IQueryable(Of Animal)
  overload: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteScriptByName*
  implements:
  - FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: ServiceAnimalGroupScriptManager.ExecuteScriptByName(String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExecuteScriptByName(String, IDictionary(Of String, Object))
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: FarmMaster.Services.ServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: ExecuteSingleUseScript(String, IDictionary<String, Object>)
  nameWithType: ServiceAnimalGroupScriptManager.ExecuteSingleUseScript(String, IDictionary<String, Object>)
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ExecuteSingleUseScript
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 56
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<Animal> ExecuteSingleUseScript(string code, IDictionary<string, object> parameters = null)
    parameters:
    - id: code
      type: System.String
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: System.Linq.IQueryable{Business.Model.Animal}
    content.vb: Public Function ExecuteSingleUseScript(code As String, parameters As IDictionary(Of String, Object) = Nothing) As IQueryable(Of Animal)
  overload: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteSingleUseScript*
  implements:
  - FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: ServiceAnimalGroupScriptManager.ExecuteSingleUseScript(String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExecuteSingleUseScript(String, IDictionary(Of String, Object))
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.GetIdFor(Business.Model.AnimalGroupScript)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupScriptManager.GetIdFor(Business.Model.AnimalGroupScript)
  id: GetIdFor(Business.Model.AnimalGroupScript)
  parent: FarmMaster.Services.ServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: GetIdFor(AnimalGroupScript)
  nameWithType: ServiceAnimalGroupScriptManager.GetIdFor(AnimalGroupScript)
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.GetIdFor(Business.Model.AnimalGroupScript)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetIdFor
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 71
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public int GetIdFor(AnimalGroupScript entity)
    parameters:
    - id: entity
      type: Business.Model.AnimalGroupScript
    return:
      type: System.Int32
    content.vb: Public Function GetIdFor(entity As AnimalGroupScript) As Integer
  overload: FarmMaster.Services.ServiceAnimalGroupScriptManager.GetIdFor*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.GetIdFor(Business.Model.AnimalGroupScript)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.Query
  commentId: M:FarmMaster.Services.ServiceAnimalGroupScriptManager.Query
  id: Query
  parent: FarmMaster.Services.ServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: Query()
  nameWithType: ServiceAnimalGroupScriptManager.Query()
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.Query()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Query
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 76
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<AnimalGroupScript> Query()
    return:
      type: System.Linq.IQueryable{Business.Model.AnimalGroupScript}
    content.vb: Public Function Query As IQueryable(Of AnimalGroupScript)
  overload: FarmMaster.Services.ServiceAnimalGroupScriptManager.Query*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Query
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.QueryAllIncluded
  commentId: M:FarmMaster.Services.ServiceAnimalGroupScriptManager.QueryAllIncluded
  id: QueryAllIncluded
  parent: FarmMaster.Services.ServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: QueryAllIncluded()
  nameWithType: ServiceAnimalGroupScriptManager.QueryAllIncluded()
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.QueryAllIncluded()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: QueryAllIncluded
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 81
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<AnimalGroupScript> QueryAllIncluded()
    return:
      type: System.Linq.IQueryable{Business.Model.AnimalGroupScript}
    content.vb: Public Function QueryAllIncluded As IQueryable(Of AnimalGroupScript)
  overload: FarmMaster.Services.ServiceAnimalGroupScriptManager.QueryAllIncluded*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.QueryAllIncluded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.Update(Business.Model.AnimalGroupScript)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupScriptManager.Update(Business.Model.AnimalGroupScript)
  id: Update(Business.Model.AnimalGroupScript)
  parent: FarmMaster.Services.ServiceAnimalGroupScriptManager
  langs:
  - csharp
  - vb
  name: Update(AnimalGroupScript)
  nameWithType: ServiceAnimalGroupScriptManager.Update(AnimalGroupScript)
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.Update(Business.Model.AnimalGroupScript)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupScriptManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Update
    path: Services/IServiceAnimalGroupScriptManager.cs
    startLine: 86
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void Update(AnimalGroupScript entity)
    parameters:
    - id: entity
      type: Business.Model.AnimalGroupScript
    content.vb: Public Sub Update(entity As AnimalGroupScript)
  overload: FarmMaster.Services.ServiceAnimalGroupScriptManager.Update*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Update(Business.Model.AnimalGroupScript)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager
  commentId: T:FarmMaster.Services.IServiceAnimalGroupScriptManager
  parent: FarmMaster.Services
  name: IServiceAnimalGroupScriptManager
  nameWithType: IServiceAnimalGroupScriptManager
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  commentId: T:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<AnimalGroupScript>
  nameWithType: IServiceEntityManager<AnimalGroupScript>
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript)
  name.vb: IServiceEntityManager(Of AnimalGroupScript)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromId<AnimalGroupScript>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<AnimalGroupScript>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalGroupScript>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of AnimalGroupScript)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalGroupScript)(System.Int32)
  name.vb: FromId(Of AnimalGroupScript)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId<AnimalGroupScript>
    nameWithType: IServiceEntityDataExtentions.FromId<AnimalGroupScript>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalGroupScript>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId(Of AnimalGroupScript)
    nameWithType: IServiceEntityDataExtentions.FromId(Of AnimalGroupScript)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalGroupScript)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromIdAllIncluded<AnimalGroupScript>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalGroupScript>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalGroupScript>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalGroupScript)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalGroupScript)(System.Int32)
  name.vb: FromIdAllIncluded(Of AnimalGroupScript)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded<AnimalGroupScript>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalGroupScript>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalGroupScript>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded(Of AnimalGroupScript)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalGroupScript)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalGroupScript)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<AnimalGroupScript>()
  nameWithType: IServiceEntityDataExtentions.For<AnimalGroupScript>()
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalGroupScript>()
  nameWithType.vb: IServiceEntityDataExtentions.For(Of AnimalGroupScript)()
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalGroupScript)()
  name.vb: For(Of AnimalGroupScript)()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For<AnimalGroupScript>
    nameWithType: IServiceEntityDataExtentions.For<AnimalGroupScript>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalGroupScript>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For(Of AnimalGroupScript)
    nameWithType: IServiceEntityDataExtentions.For(Of AnimalGroupScript)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalGroupScript)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.Services.IServiceEntityManager`1
  commentId: T:FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<T>
  nameWithType: IServiceEntityManager<T>
  fullName: FarmMaster.Services.IServiceEntityManager<T>
  nameWithType.vb: IServiceEntityManager(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T)
  name.vb: IServiceEntityManager(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromId<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromId(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId<T>
    nameWithType: IServiceEntityDataExtentions.FromId<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId(Of T)
    nameWithType: IServiceEntityDataExtentions.FromId(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions
  commentId: T:FarmMaster.Services.IServiceEntityDataExtentions
  parent: FarmMaster.Services
  name: IServiceEntityDataExtentions
  nameWithType: IServiceEntityDataExtentions
  fullName: FarmMaster.Services.IServiceEntityDataExtentions
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded<T>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded(Of T)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<T>(IServiceEntityManager<T>)
  nameWithType: IServiceEntityDataExtentions.For<T>(IServiceEntityManager<T>)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>(FarmMaster.Services.IServiceEntityManager<T>)
  nameWithType.vb: IServiceEntityDataExtentions.For(Of T)(IServiceEntityManager(Of T))
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)(FarmMaster.Services.IServiceEntityManager(Of T))
  name.vb: For(Of T)(IServiceEntityManager(Of T))
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For<T>
    nameWithType: IServiceEntityDataExtentions.For<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For(Of T)
    nameWithType: IServiceEntityDataExtentions.For(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.#ctor*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupScriptManager.#ctor
  name: ServiceAnimalGroupScriptManager
  nameWithType: ServiceAnimalGroupScriptManager.ServiceAnimalGroupScriptManager
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.ServiceAnimalGroupScriptManager
- uid: Business.Model.FarmMasterContext
  commentId: T:Business.Model.FarmMasterContext
  parent: Business.Model
  name: FarmMasterContext
  nameWithType: FarmMasterContext
  fullName: Business.Model.FarmMasterContext
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.CompileAndCreate*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupScriptManager.CompileAndCreate
  name: CompileAndCreate
  nameWithType: ServiceAnimalGroupScriptManager.CompileAndCreate
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.CompileAndCreate
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  commentId: M:FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  parent: FarmMaster.Services.IServiceAnimalGroupScriptManager
  isExternal: true
  name: CompileAndCreate(String)
  nameWithType: IServiceAnimalGroupScriptManager.CompileAndCreate(String)
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
    name: CompileAndCreate
    nameWithType: IServiceAnimalGroupScriptManager.CompileAndCreate
    fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate(System.String)
    name: CompileAndCreate
    nameWithType: IServiceAnimalGroupScriptManager.CompileAndCreate
    fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.CompileAndCreate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Business.Model.AnimalGroupScript
  commentId: T:Business.Model.AnimalGroupScript
  parent: Business.Model
  name: AnimalGroupScript
  nameWithType: AnimalGroupScript
  fullName: Business.Model.AnimalGroupScript
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteScriptByName*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteScriptByName
  name: ExecuteScriptByName
  nameWithType: ServiceAnimalGroupScriptManager.ExecuteScriptByName
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteScriptByName
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: FarmMaster.Services.IServiceAnimalGroupScriptManager
  isExternal: true
  name: ExecuteScriptByName(String, IDictionary<String, Object>)
  nameWithType: IServiceAnimalGroupScriptManager.ExecuteScriptByName(String, IDictionary<String, Object>)
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IServiceAnimalGroupScriptManager.ExecuteScriptByName(String, IDictionary(Of String, Object))
  fullName.vb: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExecuteScriptByName(String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExecuteScriptByName
    nameWithType: IServiceAnimalGroupScriptManager.ExecuteScriptByName
    fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExecuteScriptByName
    nameWithType: IServiceAnimalGroupScriptManager.ExecuteScriptByName
    fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteScriptByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{Business.Model.Animal}
  commentId: T:System.Linq.IQueryable{Business.Model.Animal}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<Animal>
  nameWithType: IQueryable<Animal>
  fullName: System.Linq.IQueryable<Business.Model.Animal>
  nameWithType.vb: IQueryable(Of Animal)
  fullName.vb: System.Linq.IQueryable(Of Business.Model.Animal)
  name.vb: IQueryable(Of Animal)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteSingleUseScript*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteSingleUseScript
  name: ExecuteSingleUseScript
  nameWithType: ServiceAnimalGroupScriptManager.ExecuteSingleUseScript
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.ExecuteSingleUseScript
- uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: FarmMaster.Services.IServiceAnimalGroupScriptManager
  isExternal: true
  name: ExecuteSingleUseScript(String, IDictionary<String, Object>)
  nameWithType: IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(String, IDictionary<String, Object>)
  fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(String, IDictionary(Of String, Object))
  fullName.vb: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExecuteSingleUseScript(String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExecuteSingleUseScript
    nameWithType: IServiceAnimalGroupScriptManager.ExecuteSingleUseScript
    fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExecuteSingleUseScript
    nameWithType: IServiceAnimalGroupScriptManager.ExecuteSingleUseScript
    fullName: FarmMaster.Services.IServiceAnimalGroupScriptManager.ExecuteSingleUseScript
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.GetIdFor*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupScriptManager.GetIdFor
  name: GetIdFor
  nameWithType: ServiceAnimalGroupScriptManager.GetIdFor
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.GetIdFor
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.GetIdFor(Business.Model.AnimalGroupScript)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.GetIdFor(Business.Model.AnimalGroupScript)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  definition: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(AnimalGroupScript)
  nameWithType: IServiceEntityManager<AnimalGroupScript>.GetIdFor(AnimalGroupScript)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.GetIdFor(Business.Model.AnimalGroupScript)
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript).GetIdFor(AnimalGroupScript)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).GetIdFor(Business.Model.AnimalGroupScript)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<AnimalGroupScript>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of AnimalGroupScript).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(T)
  nameWithType: IServiceEntityManager<T>.GetIdFor(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor(T)
  nameWithType.vb: IServiceEntityManager(Of T).GetIdFor(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<T>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of T).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.Query*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupScriptManager.Query
  name: Query
  nameWithType: ServiceAnimalGroupScriptManager.Query
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.Query
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Query
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  definition: FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<AnimalGroupScript>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.Query()
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<AnimalGroupScript>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of AnimalGroupScript).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{Business.Model.AnimalGroupScript}
  commentId: T:System.Linq.IQueryable{Business.Model.AnimalGroupScript}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<AnimalGroupScript>
  nameWithType: IQueryable<AnimalGroupScript>
  fullName: System.Linq.IQueryable<Business.Model.AnimalGroupScript>
  nameWithType.vb: IQueryable(Of AnimalGroupScript)
  fullName.vb: System.Linq.IQueryable(Of Business.Model.AnimalGroupScript)
  name.vb: IQueryable(Of AnimalGroupScript)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<T>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Query()
  nameWithType.vb: IServiceEntityManager(Of T).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<T>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of T).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.QueryAllIncluded*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupScriptManager.QueryAllIncluded
  name: QueryAllIncluded
  nameWithType: ServiceAnimalGroupScriptManager.QueryAllIncluded
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.QueryAllIncluded
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.QueryAllIncluded
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  definition: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<AnimalGroupScript>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<AnimalGroupScript>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of AnimalGroupScript).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<T>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of T).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<T>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of T).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceAnimalGroupScriptManager.Update*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupScriptManager.Update
  name: Update
  nameWithType: ServiceAnimalGroupScriptManager.Update
  fullName: FarmMaster.Services.ServiceAnimalGroupScriptManager.Update
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Update(Business.Model.AnimalGroupScript)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}.Update(Business.Model.AnimalGroupScript)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroupScript}
  definition: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(AnimalGroupScript)
  nameWithType: IServiceEntityManager<AnimalGroupScript>.Update(AnimalGroupScript)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.Update(Business.Model.AnimalGroupScript)
  nameWithType.vb: IServiceEntityManager(Of AnimalGroupScript).Update(AnimalGroupScript)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).Update(Business.Model.AnimalGroupScript)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<AnimalGroupScript>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroupScript>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of AnimalGroupScript).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroupScript).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(T)
  nameWithType: IServiceEntityManager<T>.Update(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Update(T)
  nameWithType.vb: IServiceEntityManager(Of T).Update(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Update(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<T>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of T).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
