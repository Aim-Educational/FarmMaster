### YamlMime:ManagedReference
items:
- uid: Business.Model.AnimalCharacteristic
  commentId: T:Business.Model.AnimalCharacteristic
  id: AnimalCharacteristic
  parent: Business.Model
  children:
  - Business.Model.AnimalCharacteristic.AnimalCharacteristicId
  - Business.Model.AnimalCharacteristic.Data
  - Business.Model.AnimalCharacteristic.List
  - Business.Model.AnimalCharacteristic.ListId
  - Business.Model.AnimalCharacteristic.Name
  langs:
  - csharp
  - vb
  name: AnimalCharacteristic
  nameWithType: AnimalCharacteristic
  fullName: Business.Model.AnimalCharacteristic
  type: Class
  source:
    remote:
      path: Business/Model/AnimalCharacteristic.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AnimalCharacteristic
    path: ../Business/Model/AnimalCharacteristic.cs
    startLine: 9
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public class AnimalCharacteristic
    content.vb: Public Class AnimalCharacteristic
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Business.Model.AnimalCharacteristic.AnimalCharacteristicId
  commentId: P:Business.Model.AnimalCharacteristic.AnimalCharacteristicId
  id: AnimalCharacteristicId
  parent: Business.Model.AnimalCharacteristic
  langs:
  - csharp
  - vb
  name: AnimalCharacteristicId
  nameWithType: AnimalCharacteristic.AnimalCharacteristicId
  fullName: Business.Model.AnimalCharacteristic.AnimalCharacteristicId
  type: Property
  source:
    remote:
      path: Business/Model/AnimalCharacteristic.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AnimalCharacteristicId
    path: ../Business/Model/AnimalCharacteristic.cs
    startLine: 11
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Key]

      public int AnimalCharacteristicId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Key>

      Public Property AnimalCharacteristicId As Integer
  overload: Business.Model.AnimalCharacteristic.AnimalCharacteristicId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.AnimalCharacteristic.Name
  commentId: P:Business.Model.AnimalCharacteristic.Name
  id: Name
  parent: Business.Model.AnimalCharacteristic
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AnimalCharacteristic.Name
  fullName: Business.Model.AnimalCharacteristic.Name
  type: Property
  source:
    remote:
      path: Business/Model/AnimalCharacteristic.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Name
    path: ../Business/Model/AnimalCharacteristic.cs
    startLine: 14
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      [StringLength(75)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(75)>

      Public Property Name As String
  overload: Business.Model.AnimalCharacteristic.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 75
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.AnimalCharacteristic.Data
  commentId: P:Business.Model.AnimalCharacteristic.Data
  id: Data
  parent: Business.Model.AnimalCharacteristic
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: AnimalCharacteristic.Data
  fullName: Business.Model.AnimalCharacteristic.Data
  type: Property
  source:
    remote:
      path: Business/Model/AnimalCharacteristic.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Data
    path: ../Business/Model/AnimalCharacteristic.cs
    startLine: 18
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      [StringLength(65535)]

      public DynamicField Data { get; set; }
    parameters: []
    return:
      type: Business.Model.DynamicField
    content.vb: >-
      <Required>

      <StringLength(65535)>

      Public Property Data As DynamicField
  overload: Business.Model.AnimalCharacteristic.Data*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 65535
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.AnimalCharacteristic.ListId
  commentId: P:Business.Model.AnimalCharacteristic.ListId
  id: ListId
  parent: Business.Model.AnimalCharacteristic
  langs:
  - csharp
  - vb
  name: ListId
  nameWithType: AnimalCharacteristic.ListId
  fullName: Business.Model.AnimalCharacteristic.ListId
  type: Property
  source:
    remote:
      path: Business/Model/AnimalCharacteristic.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ListId
    path: ../Business/Model/AnimalCharacteristic.cs
    startLine: 22
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      public int ListId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      Public Property ListId As Integer
  overload: Business.Model.AnimalCharacteristic.ListId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.AnimalCharacteristic.List
  commentId: P:Business.Model.AnimalCharacteristic.List
  id: List
  parent: Business.Model.AnimalCharacteristic
  langs:
  - csharp
  - vb
  name: List
  nameWithType: AnimalCharacteristic.List
  fullName: Business.Model.AnimalCharacteristic.List
  type: Property
  source:
    remote:
      path: Business/Model/AnimalCharacteristic.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: List
    path: ../Business/Model/AnimalCharacteristic.cs
    startLine: 24
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public AnimalCharacteristicList List { get; set; }
    parameters: []
    return:
      type: Business.Model.AnimalCharacteristicList
    content.vb: Public Property List As AnimalCharacteristicList
  overload: Business.Model.AnimalCharacteristic.List*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Business.Model.AnimalCharacteristic.AnimalCharacteristicId*
  commentId: Overload:Business.Model.AnimalCharacteristic.AnimalCharacteristicId
  name: AnimalCharacteristicId
  nameWithType: AnimalCharacteristic.AnimalCharacteristicId
  fullName: Business.Model.AnimalCharacteristic.AnimalCharacteristicId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Business.Model.AnimalCharacteristic.Name*
  commentId: Overload:Business.Model.AnimalCharacteristic.Name
  name: Name
  nameWithType: AnimalCharacteristic.Name
  fullName: Business.Model.AnimalCharacteristic.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Business.Model.AnimalCharacteristic.Data*
  commentId: Overload:Business.Model.AnimalCharacteristic.Data
  name: Data
  nameWithType: AnimalCharacteristic.Data
  fullName: Business.Model.AnimalCharacteristic.Data
- uid: Business.Model.DynamicField
  commentId: T:Business.Model.DynamicField
  parent: Business.Model
  name: DynamicField
  nameWithType: DynamicField
  fullName: Business.Model.DynamicField
- uid: Business.Model.AnimalCharacteristic.ListId*
  commentId: Overload:Business.Model.AnimalCharacteristic.ListId
  name: ListId
  nameWithType: AnimalCharacteristic.ListId
  fullName: Business.Model.AnimalCharacteristic.ListId
- uid: Business.Model.AnimalCharacteristic.List*
  commentId: Overload:Business.Model.AnimalCharacteristic.List
  name: List
  nameWithType: AnimalCharacteristic.List
  fullName: Business.Model.AnimalCharacteristic.List
- uid: Business.Model.AnimalCharacteristicList
  commentId: T:Business.Model.AnimalCharacteristicList
  parent: Business.Model
  name: AnimalCharacteristicList
  nameWithType: AnimalCharacteristicList
  fullName: Business.Model.AnimalCharacteristicList
