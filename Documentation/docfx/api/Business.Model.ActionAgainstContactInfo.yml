### YamlMime:ManagedReference
items:
- uid: Business.Model.ActionAgainstContactInfo
  commentId: T:Business.Model.ActionAgainstContactInfo
  id: ActionAgainstContactInfo
  parent: Business.Model
  children:
  - Business.Model.ActionAgainstContactInfo.ActionAgainstContactInfoId
  - Business.Model.ActionAgainstContactInfo.ActionType
  - Business.Model.ActionAgainstContactInfo.AdditionalInfo
  - Business.Model.ActionAgainstContactInfo.ContactAffected
  - Business.Model.ActionAgainstContactInfo.ContactAffectedId
  - Business.Model.ActionAgainstContactInfo.DateTimeUtc
  - Business.Model.ActionAgainstContactInfo.HasContactBeenInformed
  - Business.Model.ActionAgainstContactInfo.Reason
  - Business.Model.ActionAgainstContactInfo.UserResponsible
  - Business.Model.ActionAgainstContactInfo.UserResponsibleId
  langs:
  - csharp
  - vb
  name: ActionAgainstContactInfo
  nameWithType: ActionAgainstContactInfo
  fullName: Business.Model.ActionAgainstContactInfo
  type: Class
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ActionAgainstContactInfo
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 7
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public class ActionAgainstContactInfo
    content.vb: Public Class ActionAgainstContactInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Business.Model.ActionAgainstContactInfo.ActionAgainstContactInfoId
  commentId: P:Business.Model.ActionAgainstContactInfo.ActionAgainstContactInfoId
  id: ActionAgainstContactInfoId
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: ActionAgainstContactInfoId
  nameWithType: ActionAgainstContactInfo.ActionAgainstContactInfoId
  fullName: Business.Model.ActionAgainstContactInfo.ActionAgainstContactInfoId
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ActionAgainstContactInfoId
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 30
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Key]

      public int ActionAgainstContactInfoId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Key>

      Public Property ActionAgainstContactInfoId As Integer
  overload: Business.Model.ActionAgainstContactInfo.ActionAgainstContactInfoId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.ActionAgainstContactInfo.UserResponsibleId
  commentId: P:Business.Model.ActionAgainstContactInfo.UserResponsibleId
  id: UserResponsibleId
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: UserResponsibleId
  nameWithType: ActionAgainstContactInfo.UserResponsibleId
  fullName: Business.Model.ActionAgainstContactInfo.UserResponsibleId
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserResponsibleId
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 33
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      public int UserResponsibleId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      Public Property UserResponsibleId As Integer
  overload: Business.Model.ActionAgainstContactInfo.UserResponsibleId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.ActionAgainstContactInfo.UserResponsible
  commentId: P:Business.Model.ActionAgainstContactInfo.UserResponsible
  id: UserResponsible
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: UserResponsible
  nameWithType: ActionAgainstContactInfo.UserResponsible
  fullName: Business.Model.ActionAgainstContactInfo.UserResponsible
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserResponsible
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 35
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public User UserResponsible { get; set; }
    parameters: []
    return:
      type: Business.Model.User
    content.vb: Public Property UserResponsible As User
  overload: Business.Model.ActionAgainstContactInfo.UserResponsible*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.ActionAgainstContactInfo.ContactAffectedId
  commentId: P:Business.Model.ActionAgainstContactInfo.ContactAffectedId
  id: ContactAffectedId
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: ContactAffectedId
  nameWithType: ActionAgainstContactInfo.ContactAffectedId
  fullName: Business.Model.ActionAgainstContactInfo.ContactAffectedId
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ContactAffectedId
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 37
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      public int ContactAffectedId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      Public Property ContactAffectedId As Integer
  overload: Business.Model.ActionAgainstContactInfo.ContactAffectedId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.ActionAgainstContactInfo.ContactAffected
  commentId: P:Business.Model.ActionAgainstContactInfo.ContactAffected
  id: ContactAffected
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: ContactAffected
  nameWithType: ActionAgainstContactInfo.ContactAffected
  fullName: Business.Model.ActionAgainstContactInfo.ContactAffected
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ContactAffected
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 39
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public Contact ContactAffected { get; set; }
    parameters: []
    return:
      type: Business.Model.Contact
    content.vb: Public Property ContactAffected As Contact
  overload: Business.Model.ActionAgainstContactInfo.ContactAffected*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.ActionAgainstContactInfo.ActionType
  commentId: P:Business.Model.ActionAgainstContactInfo.ActionType
  id: ActionType
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: ActionType
  nameWithType: ActionAgainstContactInfo.ActionType
  fullName: Business.Model.ActionAgainstContactInfo.ActionType
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ActionType
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 41
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      public ActionAgainstContactInfo.Type ActionType { get; set; }
    parameters: []
    return:
      type: Business.Model.ActionAgainstContactInfo.Type
    content.vb: >-
      <Required>

      Public Property ActionType As ActionAgainstContactInfo.Type
  overload: Business.Model.ActionAgainstContactInfo.ActionType*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.ActionAgainstContactInfo.Reason
  commentId: P:Business.Model.ActionAgainstContactInfo.Reason
  id: Reason
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: ActionAgainstContactInfo.Reason
  fullName: Business.Model.ActionAgainstContactInfo.Reason
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Reason
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 44
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      [StringLength(150)]

      public string Reason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(150)>

      Public Property Reason As String
  overload: Business.Model.ActionAgainstContactInfo.Reason*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 150
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.ActionAgainstContactInfo.AdditionalInfo
  commentId: P:Business.Model.ActionAgainstContactInfo.AdditionalInfo
  id: AdditionalInfo
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: AdditionalInfo
  nameWithType: ActionAgainstContactInfo.AdditionalInfo
  fullName: Business.Model.ActionAgainstContactInfo.AdditionalInfo
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AdditionalInfo
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 48
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [StringLength(150)]

      public string AdditionalInfo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(150)>

      Public Property AdditionalInfo As String
  overload: Business.Model.ActionAgainstContactInfo.AdditionalInfo*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 150
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.ActionAgainstContactInfo.DateTimeUtc
  commentId: P:Business.Model.ActionAgainstContactInfo.DateTimeUtc
  id: DateTimeUtc
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: DateTimeUtc
  nameWithType: ActionAgainstContactInfo.DateTimeUtc
  fullName: Business.Model.ActionAgainstContactInfo.DateTimeUtc
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: DateTimeUtc
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 51
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      public DateTimeOffset DateTimeUtc { get; set; }
    parameters: []
    return:
      type: System.DateTimeOffset
    content.vb: >-
      <Required>

      Public Property DateTimeUtc As DateTimeOffset
  overload: Business.Model.ActionAgainstContactInfo.DateTimeUtc*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.ActionAgainstContactInfo.HasContactBeenInformed
  commentId: P:Business.Model.ActionAgainstContactInfo.HasContactBeenInformed
  id: HasContactBeenInformed
  parent: Business.Model.ActionAgainstContactInfo
  langs:
  - csharp
  - vb
  name: HasContactBeenInformed
  nameWithType: ActionAgainstContactInfo.HasContactBeenInformed
  fullName: Business.Model.ActionAgainstContactInfo.HasContactBeenInformed
  type: Property
  source:
    remote:
      path: Business/Model/ActionAgainstContactInfo.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: HasContactBeenInformed
    path: ../Business/Model/ActionAgainstContactInfo.cs
    startLine: 54
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      public bool HasContactBeenInformed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Required>

      Public Property HasContactBeenInformed As Boolean
  overload: Business.Model.ActionAgainstContactInfo.HasContactBeenInformed*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Business.Model.ActionAgainstContactInfo.ActionAgainstContactInfoId*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.ActionAgainstContactInfoId
  name: ActionAgainstContactInfoId
  nameWithType: ActionAgainstContactInfo.ActionAgainstContactInfoId
  fullName: Business.Model.ActionAgainstContactInfo.ActionAgainstContactInfoId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Business.Model.ActionAgainstContactInfo.UserResponsibleId*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.UserResponsibleId
  name: UserResponsibleId
  nameWithType: ActionAgainstContactInfo.UserResponsibleId
  fullName: Business.Model.ActionAgainstContactInfo.UserResponsibleId
- uid: Business.Model.ActionAgainstContactInfo.UserResponsible*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.UserResponsible
  name: UserResponsible
  nameWithType: ActionAgainstContactInfo.UserResponsible
  fullName: Business.Model.ActionAgainstContactInfo.UserResponsible
- uid: Business.Model.User
  commentId: T:Business.Model.User
  parent: Business.Model
  name: User
  nameWithType: User
  fullName: Business.Model.User
- uid: Business.Model.ActionAgainstContactInfo.ContactAffectedId*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.ContactAffectedId
  name: ContactAffectedId
  nameWithType: ActionAgainstContactInfo.ContactAffectedId
  fullName: Business.Model.ActionAgainstContactInfo.ContactAffectedId
- uid: Business.Model.ActionAgainstContactInfo.ContactAffected*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.ContactAffected
  name: ContactAffected
  nameWithType: ActionAgainstContactInfo.ContactAffected
  fullName: Business.Model.ActionAgainstContactInfo.ContactAffected
- uid: Business.Model.Contact
  commentId: T:Business.Model.Contact
  parent: Business.Model
  name: Contact
  nameWithType: Contact
  fullName: Business.Model.Contact
- uid: Business.Model.ActionAgainstContactInfo.ActionType*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.ActionType
  name: ActionType
  nameWithType: ActionAgainstContactInfo.ActionType
  fullName: Business.Model.ActionAgainstContactInfo.ActionType
- uid: Business.Model.ActionAgainstContactInfo.Type
  commentId: T:Business.Model.ActionAgainstContactInfo.Type
  parent: Business.Model
  name: ActionAgainstContactInfo.Type
  nameWithType: ActionAgainstContactInfo.Type
  fullName: Business.Model.ActionAgainstContactInfo.Type
- uid: Business.Model.ActionAgainstContactInfo.Reason*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.Reason
  name: Reason
  nameWithType: ActionAgainstContactInfo.Reason
  fullName: Business.Model.ActionAgainstContactInfo.Reason
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Business.Model.ActionAgainstContactInfo.AdditionalInfo*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.AdditionalInfo
  name: AdditionalInfo
  nameWithType: ActionAgainstContactInfo.AdditionalInfo
  fullName: Business.Model.ActionAgainstContactInfo.AdditionalInfo
- uid: Business.Model.ActionAgainstContactInfo.DateTimeUtc*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.DateTimeUtc
  name: DateTimeUtc
  nameWithType: ActionAgainstContactInfo.DateTimeUtc
  fullName: Business.Model.ActionAgainstContactInfo.DateTimeUtc
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Business.Model.ActionAgainstContactInfo.HasContactBeenInformed*
  commentId: Overload:Business.Model.ActionAgainstContactInfo.HasContactBeenInformed
  name: HasContactBeenInformed
  nameWithType: ActionAgainstContactInfo.HasContactBeenInformed
  fullName: Business.Model.ActionAgainstContactInfo.HasContactBeenInformed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
