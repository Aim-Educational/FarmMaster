### YamlMime:ManagedReference
items:
- uid: GroupScript.GroupScriptParser
  commentId: T:GroupScript.GroupScriptParser
  id: GroupScriptParser
  parent: GroupScript
  children:
  - GroupScript.GroupScriptParser.#ctor(System.String)
  - GroupScript.GroupScriptParser.Code
  - GroupScript.GroupScriptParser.GetEnumerator
  - GroupScript.GroupScriptParser.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: GroupScriptParser
  nameWithType: GroupScriptParser
  fullName: GroupScript.GroupScriptParser
  type: Class
  source:
    remote:
      path: GroupScript/GroupScriptParser.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GroupScriptParser
    path: ../GroupScript/GroupScriptParser.cs
    startLine: 57
  assemblies:
  - GroupScript
  namespace: GroupScript
  syntax:
    content: 'public class GroupScriptParser : IEnumerable<GroupScriptToken>, IEnumerable'
    content.vb: >-
      Public Class GroupScriptParser

          Implements IEnumerable(Of GroupScriptToken), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{GroupScript.GroupScriptToken}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GroupScript.GroupScriptParser.Code
  commentId: F:GroupScript.GroupScriptParser.Code
  id: Code
  parent: GroupScript.GroupScriptParser
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: GroupScriptParser.Code
  fullName: GroupScript.GroupScriptParser.Code
  type: Field
  source:
    remote:
      path: GroupScript/GroupScriptParser.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Code
    path: ../GroupScript/GroupScriptParser.cs
    startLine: 59
  assemblies:
  - GroupScript
  namespace: GroupScript
  syntax:
    content: public readonly string Code
    return:
      type: System.String
    content.vb: Public ReadOnly Code As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GroupScript.GroupScriptParser.#ctor(System.String)
  commentId: M:GroupScript.GroupScriptParser.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: GroupScript.GroupScriptParser
  langs:
  - csharp
  - vb
  name: GroupScriptParser(String)
  nameWithType: GroupScriptParser.GroupScriptParser(String)
  fullName: GroupScript.GroupScriptParser.GroupScriptParser(System.String)
  type: Constructor
  source:
    remote:
      path: GroupScript/GroupScriptParser.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: ../GroupScript/GroupScriptParser.cs
    startLine: 61
  assemblies:
  - GroupScript
  namespace: GroupScript
  syntax:
    content: public GroupScriptParser(string code)
    parameters:
    - id: code
      type: System.String
    content.vb: Public Sub New(code As String)
  overload: GroupScript.GroupScriptParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GroupScript.GroupScriptParser.GetEnumerator
  commentId: M:GroupScript.GroupScriptParser.GetEnumerator
  id: GetEnumerator
  parent: GroupScript.GroupScriptParser
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: GroupScriptParser.GetEnumerator()
  fullName: GroupScript.GroupScriptParser.GetEnumerator()
  type: Method
  source:
    remote:
      path: GroupScript/GroupScriptParser.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetEnumerator
    path: ../GroupScript/GroupScriptParser.cs
    startLine: 66
  assemblies:
  - GroupScript
  namespace: GroupScript
  syntax:
    content: public IEnumerator<GroupScriptToken> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{GroupScript.GroupScriptToken}
    content.vb: Public Function GetEnumerator As IEnumerator(Of GroupScriptToken)
  overload: GroupScript.GroupScriptParser.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{GroupScript.GroupScriptToken}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GroupScript.GroupScriptParser.System#Collections#IEnumerable#GetEnumerator
  commentId: M:GroupScript.GroupScriptParser.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: GroupScript.GroupScriptParser
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: GroupScriptParser.IEnumerable.GetEnumerator()
  fullName: GroupScript.GroupScriptParser.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: GroupScript/GroupScriptParser.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../GroupScript/GroupScriptParser.cs
    startLine: 71
  assemblies:
  - GroupScript
  namespace: GroupScript
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: GroupScript.GroupScriptParser.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: GroupScriptParser.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: GroupScript
  commentId: N:GroupScript
  name: GroupScript
  nameWithType: GroupScript
  fullName: GroupScript
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{GroupScript.GroupScriptToken}
  commentId: T:System.Collections.Generic.IEnumerable{GroupScript.GroupScriptToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<GroupScriptToken>
  nameWithType: IEnumerable<GroupScriptToken>
  fullName: System.Collections.Generic.IEnumerable<GroupScript.GroupScriptToken>
  nameWithType.vb: IEnumerable(Of GroupScriptToken)
  fullName.vb: System.Collections.Generic.IEnumerable(Of GroupScript.GroupScriptToken)
  name.vb: IEnumerable(Of GroupScriptToken)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GroupScript.GroupScriptToken
    name: GroupScriptToken
    nameWithType: GroupScriptToken
    fullName: GroupScript.GroupScriptToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GroupScript.GroupScriptToken
    name: GroupScriptToken
    nameWithType: GroupScriptToken
    fullName: GroupScript.GroupScriptToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GroupScript.GroupScriptParser.#ctor*
  commentId: Overload:GroupScript.GroupScriptParser.#ctor
  name: GroupScriptParser
  nameWithType: GroupScriptParser.GroupScriptParser
  fullName: GroupScript.GroupScriptParser.GroupScriptParser
- uid: GroupScript.GroupScriptParser.GetEnumerator*
  commentId: Overload:GroupScript.GroupScriptParser.GetEnumerator
  name: GetEnumerator
  nameWithType: GroupScriptParser.GetEnumerator
  fullName: GroupScript.GroupScriptParser.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{GroupScript.GroupScriptToken}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{GroupScript.GroupScriptToken}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{GroupScript.GroupScriptToken}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<GroupScriptToken>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<GroupScript.GroupScriptToken>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of GroupScriptToken).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of GroupScript.GroupScriptToken).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<GroupScriptToken>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<GroupScript.GroupScriptToken>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of GroupScriptToken).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of GroupScript.GroupScriptToken).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{GroupScript.GroupScriptToken}
  commentId: T:System.Collections.Generic.IEnumerator{GroupScript.GroupScriptToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<GroupScriptToken>
  nameWithType: IEnumerator<GroupScriptToken>
  fullName: System.Collections.Generic.IEnumerator<GroupScript.GroupScriptToken>
  nameWithType.vb: IEnumerator(Of GroupScriptToken)
  fullName.vb: System.Collections.Generic.IEnumerator(Of GroupScript.GroupScriptToken)
  name.vb: IEnumerator(Of GroupScriptToken)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GroupScript.GroupScriptToken
    name: GroupScriptToken
    nameWithType: GroupScriptToken
    fullName: GroupScript.GroupScriptToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GroupScript.GroupScriptToken
    name: GroupScriptToken
    nameWithType: GroupScriptToken
    fullName: GroupScript.GroupScriptToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GroupScript.GroupScriptParser.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:GroupScript.GroupScriptParser.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: GroupScriptParser.IEnumerable.GetEnumerator
  fullName: GroupScript.GroupScriptParser.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: GroupScriptParser.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
