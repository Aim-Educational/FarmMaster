### YamlMime:ManagedReference
items:
- uid: FarmMaster.GraphQL.Extentions
  commentId: T:FarmMaster.GraphQL.Extentions
  id: Extentions
  parent: FarmMaster.GraphQL
  children:
  - FarmMaster.GraphQL.Extentions.AddFarmQLSchema(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - FarmMaster.GraphQL.Extentions.GetValueOrNull``1(GraphQL.Types.ResolveFieldContext{System.Object},System.String)
  langs:
  - csharp
  - vb
  name: Extentions
  nameWithType: Extentions
  fullName: FarmMaster.GraphQL.Extentions
  type: Class
  source:
    remote:
      path: FarmMaster/GraphQL/Core.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Extentions
    path: GraphQL/Core.cs
    startLine: 244
  assemblies:
  - FarmMaster
  namespace: FarmMaster.GraphQL
  syntax:
    content: public static class Extentions
    content.vb: Public Module Extentions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FarmMaster.GraphQL.Extentions.AddFarmQLSchema(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:FarmMaster.GraphQL.Extentions.AddFarmQLSchema(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddFarmQLSchema(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: FarmMaster.GraphQL.Extentions
  langs:
  - csharp
  - vb
  name: AddFarmQLSchema(IServiceCollection)
  nameWithType: Extentions.AddFarmQLSchema(IServiceCollection)
  fullName: FarmMaster.GraphQL.Extentions.AddFarmQLSchema(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: FarmMaster/GraphQL/Core.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AddFarmQLSchema
    path: GraphQL/Core.cs
    startLine: 246
  assemblies:
  - FarmMaster
  namespace: FarmMaster.GraphQL
  syntax:
    content: public static IServiceCollection AddFarmQLSchema(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddFarmQLSchema(services As IServiceCollection) As IServiceCollection
  overload: FarmMaster.GraphQL.Extentions.AddFarmQLSchema*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FarmMaster.GraphQL.Extentions.GetValueOrNull``1(GraphQL.Types.ResolveFieldContext{System.Object},System.String)
  commentId: M:FarmMaster.GraphQL.Extentions.GetValueOrNull``1(GraphQL.Types.ResolveFieldContext{System.Object},System.String)
  id: GetValueOrNull``1(GraphQL.Types.ResolveFieldContext{System.Object},System.String)
  isExtensionMethod: true
  parent: FarmMaster.GraphQL.Extentions
  langs:
  - csharp
  - vb
  name: GetValueOrNull<T>(ResolveFieldContext<Object>, String)
  nameWithType: Extentions.GetValueOrNull<T>(ResolveFieldContext<Object>, String)
  fullName: FarmMaster.GraphQL.Extentions.GetValueOrNull<T>(GraphQL.Types.ResolveFieldContext<System.Object>, System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/GraphQL/Core.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetValueOrNull
    path: GraphQL/Core.cs
    startLine: 267
  assemblies:
  - FarmMaster
  namespace: FarmMaster.GraphQL
  syntax:
    content: >-
      public static T? GetValueOrNull<T>(this ResolveFieldContext<object> graphql, string name)

          where T : struct
    parameters:
    - id: graphql
      type: GraphQL.Types.ResolveFieldContext{System.Object}
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Nullable{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetValueOrNull(Of T As Structure)(graphql As ResolveFieldContext(Of Object), name As String) As T?
  overload: FarmMaster.GraphQL.Extentions.GetValueOrNull*
  nameWithType.vb: Extentions.GetValueOrNull(Of T)(ResolveFieldContext(Of Object), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FarmMaster.GraphQL.Extentions.GetValueOrNull(Of T)(GraphQL.Types.ResolveFieldContext(Of System.Object), System.String)
  name.vb: GetValueOrNull(Of T)(ResolveFieldContext(Of Object), String)
references:
- uid: FarmMaster.GraphQL
  commentId: N:FarmMaster.GraphQL
  name: FarmMaster.GraphQL
  nameWithType: FarmMaster.GraphQL
  fullName: FarmMaster.GraphQL
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.GraphQL.Extentions.AddFarmQLSchema*
  commentId: Overload:FarmMaster.GraphQL.Extentions.AddFarmQLSchema
  name: AddFarmQLSchema
  nameWithType: Extentions.AddFarmQLSchema
  fullName: FarmMaster.GraphQL.Extentions.AddFarmQLSchema
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: FarmMaster.GraphQL.Extentions.GetValueOrNull*
  commentId: Overload:FarmMaster.GraphQL.Extentions.GetValueOrNull
  name: GetValueOrNull
  nameWithType: Extentions.GetValueOrNull
  fullName: FarmMaster.GraphQL.Extentions.GetValueOrNull
- uid: GraphQL.Types.ResolveFieldContext{System.Object}
  commentId: T:GraphQL.Types.ResolveFieldContext{System.Object}
  parent: GraphQL.Types
  definition: GraphQL.Types.ResolveFieldContext`1
  name: ResolveFieldContext<Object>
  nameWithType: ResolveFieldContext<Object>
  fullName: GraphQL.Types.ResolveFieldContext<System.Object>
  nameWithType.vb: ResolveFieldContext(Of Object)
  fullName.vb: GraphQL.Types.ResolveFieldContext(Of System.Object)
  name.vb: ResolveFieldContext(Of Object)
  spec.csharp:
  - uid: GraphQL.Types.ResolveFieldContext`1
    name: ResolveFieldContext
    nameWithType: ResolveFieldContext
    fullName: GraphQL.Types.ResolveFieldContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GraphQL.Types.ResolveFieldContext`1
    name: ResolveFieldContext
    nameWithType: ResolveFieldContext
    fullName: GraphQL.Types.ResolveFieldContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{{T}}
  commentId: T:System.Nullable{``0}
  parent: System
  definition: System.Nullable`1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GraphQL.Types.ResolveFieldContext`1
  commentId: T:GraphQL.Types.ResolveFieldContext`1
  isExternal: true
  name: ResolveFieldContext<TSource>
  nameWithType: ResolveFieldContext<TSource>
  fullName: GraphQL.Types.ResolveFieldContext<TSource>
  nameWithType.vb: ResolveFieldContext(Of TSource)
  fullName.vb: GraphQL.Types.ResolveFieldContext(Of TSource)
  name.vb: ResolveFieldContext(Of TSource)
  spec.csharp:
  - uid: GraphQL.Types.ResolveFieldContext`1
    name: ResolveFieldContext
    nameWithType: ResolveFieldContext
    fullName: GraphQL.Types.ResolveFieldContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GraphQL.Types.ResolveFieldContext`1
    name: ResolveFieldContext
    nameWithType: ResolveFieldContext
    fullName: GraphQL.Types.ResolveFieldContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: GraphQL.Types
  commentId: N:GraphQL.Types
  isExternal: true
  name: GraphQL.Types
  nameWithType: GraphQL.Types
  fullName: GraphQL.Types
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
