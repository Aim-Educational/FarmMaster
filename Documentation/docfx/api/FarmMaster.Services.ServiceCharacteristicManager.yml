### YamlMime:ManagedReference
items:
- uid: FarmMaster.Services.ServiceCharacteristicManager
  commentId: T:FarmMaster.Services.ServiceCharacteristicManager
  id: ServiceCharacteristicManager
  parent: FarmMaster.Services
  children:
  - FarmMaster.Services.ServiceCharacteristicManager.#ctor(Business.Model.FarmMasterContext)
  - FarmMaster.Services.ServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList,System.String,Business.Model.DynamicField.Type,System.String)
  - FarmMaster.Services.ServiceCharacteristicManager.FullDelete(Business.Model.AnimalCharacteristic)
  - FarmMaster.Services.ServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList,System.Int32)
  - FarmMaster.Services.ServiceCharacteristicManager.GetIdFor(Business.Model.AnimalCharacteristic)
  - FarmMaster.Services.ServiceCharacteristicManager.Query
  - FarmMaster.Services.ServiceCharacteristicManager.QueryAllIncluded
  - FarmMaster.Services.ServiceCharacteristicManager.Update(Business.Model.AnimalCharacteristic)
  langs:
  - csharp
  - vb
  name: ServiceCharacteristicManager
  nameWithType: ServiceCharacteristicManager
  fullName: FarmMaster.Services.ServiceCharacteristicManager
  type: Class
  source:
    remote:
      path: FarmMaster/Services/IServiceCharacteristicManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ServiceCharacteristicManager
    path: Services/IServiceCharacteristicManager.cs
    startLine: 14
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: 'public class ServiceCharacteristicManager : IServiceCharacteristicManager, IServiceEntityManager<AnimalCharacteristic>, IServiceEntityManagerFullDeletion<AnimalCharacteristic>'
    content.vb: >-
      Public Class ServiceCharacteristicManager

          Implements IServiceCharacteristicManager, IServiceEntityManager(Of AnimalCharacteristic), IServiceEntityManagerFullDeletion(Of AnimalCharacteristic)
  inheritance:
  - System.Object
  implements:
  - FarmMaster.Services.IServiceCharacteristicManager
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}
  - FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalCharacteristic}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FarmMaster.Services.ServiceCharacteristicManager.#ctor(Business.Model.FarmMasterContext)
  commentId: M:FarmMaster.Services.ServiceCharacteristicManager.#ctor(Business.Model.FarmMasterContext)
  id: '#ctor(Business.Model.FarmMasterContext)'
  parent: FarmMaster.Services.ServiceCharacteristicManager
  langs:
  - csharp
  - vb
  name: ServiceCharacteristicManager(FarmMasterContext)
  nameWithType: ServiceCharacteristicManager.ServiceCharacteristicManager(FarmMasterContext)
  fullName: FarmMaster.Services.ServiceCharacteristicManager.ServiceCharacteristicManager(Business.Model.FarmMasterContext)
  type: Constructor
  source:
    remote:
      path: FarmMaster/Services/IServiceCharacteristicManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: Services/IServiceCharacteristicManager.cs
    startLine: 18
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public ServiceCharacteristicManager(FarmMasterContext context)
    parameters:
    - id: context
      type: Business.Model.FarmMasterContext
    content.vb: Public Sub New(context As FarmMasterContext)
  overload: FarmMaster.Services.ServiceCharacteristicManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList,System.String,Business.Model.DynamicField.Type,System.String)
  commentId: M:FarmMaster.Services.ServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList,System.String,Business.Model.DynamicField.Type,System.String)
  id: CreateFromHtmlString(Business.Model.AnimalCharacteristicList,System.String,Business.Model.DynamicField.Type,System.String)
  parent: FarmMaster.Services.ServiceCharacteristicManager
  langs:
  - csharp
  - vb
  name: CreateFromHtmlString(AnimalCharacteristicList, String, DynamicField.Type, String)
  nameWithType: ServiceCharacteristicManager.CreateFromHtmlString(AnimalCharacteristicList, String, DynamicField.Type, String)
  fullName: FarmMaster.Services.ServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList, System.String, Business.Model.DynamicField.Type, System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceCharacteristicManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: CreateFromHtmlString
    path: Services/IServiceCharacteristicManager.cs
    startLine: 23
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public AnimalCharacteristic CreateFromHtmlString(AnimalCharacteristicList list, string name, DynamicField.Type type, string htmlString)
    parameters:
    - id: list
      type: Business.Model.AnimalCharacteristicList
    - id: name
      type: System.String
    - id: type
      type: Business.Model.DynamicField.Type
    - id: htmlString
      type: System.String
    return:
      type: Business.Model.AnimalCharacteristic
    content.vb: Public Function CreateFromHtmlString(list As AnimalCharacteristicList, name As String, type As DynamicField.Type, htmlString As String) As AnimalCharacteristic
  overload: FarmMaster.Services.ServiceCharacteristicManager.CreateFromHtmlString*
  implements:
  - FarmMaster.Services.IServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList,System.String,Business.Model.DynamicField.Type,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceCharacteristicManager.FullDelete(Business.Model.AnimalCharacteristic)
  commentId: M:FarmMaster.Services.ServiceCharacteristicManager.FullDelete(Business.Model.AnimalCharacteristic)
  id: FullDelete(Business.Model.AnimalCharacteristic)
  parent: FarmMaster.Services.ServiceCharacteristicManager
  langs:
  - csharp
  - vb
  name: FullDelete(AnimalCharacteristic)
  nameWithType: ServiceCharacteristicManager.FullDelete(AnimalCharacteristic)
  fullName: FarmMaster.Services.ServiceCharacteristicManager.FullDelete(Business.Model.AnimalCharacteristic)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceCharacteristicManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: FullDelete
    path: Services/IServiceCharacteristicManager.cs
    startLine: 44
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void FullDelete(AnimalCharacteristic entity)
    parameters:
    - id: entity
      type: Business.Model.AnimalCharacteristic
    content.vb: Public Sub FullDelete(entity As AnimalCharacteristic)
  overload: FarmMaster.Services.ServiceCharacteristicManager.FullDelete*
  implements:
  - FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalCharacteristic}.FullDelete(Business.Model.AnimalCharacteristic)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList,System.Int32)
  commentId: M:FarmMaster.Services.ServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList,System.Int32)
  id: FullDeleteById(Business.Model.AnimalCharacteristicList,System.Int32)
  parent: FarmMaster.Services.ServiceCharacteristicManager
  langs:
  - csharp
  - vb
  name: FullDeleteById(AnimalCharacteristicList, Int32)
  nameWithType: ServiceCharacteristicManager.FullDeleteById(AnimalCharacteristicList, Int32)
  fullName: FarmMaster.Services.ServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList, System.Int32)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceCharacteristicManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: FullDeleteById
    path: Services/IServiceCharacteristicManager.cs
    startLine: 50
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void FullDeleteById(AnimalCharacteristicList list, int id)
    parameters:
    - id: list
      type: Business.Model.AnimalCharacteristicList
    - id: id
      type: System.Int32
    content.vb: Public Sub FullDeleteById(list As AnimalCharacteristicList, id As Integer)
  overload: FarmMaster.Services.ServiceCharacteristicManager.FullDeleteById*
  implements:
  - FarmMaster.Services.IServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceCharacteristicManager.GetIdFor(Business.Model.AnimalCharacteristic)
  commentId: M:FarmMaster.Services.ServiceCharacteristicManager.GetIdFor(Business.Model.AnimalCharacteristic)
  id: GetIdFor(Business.Model.AnimalCharacteristic)
  parent: FarmMaster.Services.ServiceCharacteristicManager
  langs:
  - csharp
  - vb
  name: GetIdFor(AnimalCharacteristic)
  nameWithType: ServiceCharacteristicManager.GetIdFor(AnimalCharacteristic)
  fullName: FarmMaster.Services.ServiceCharacteristicManager.GetIdFor(Business.Model.AnimalCharacteristic)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceCharacteristicManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetIdFor
    path: Services/IServiceCharacteristicManager.cs
    startLine: 59
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public int GetIdFor(AnimalCharacteristic entity)
    parameters:
    - id: entity
      type: Business.Model.AnimalCharacteristic
    return:
      type: System.Int32
    content.vb: Public Function GetIdFor(entity As AnimalCharacteristic) As Integer
  overload: FarmMaster.Services.ServiceCharacteristicManager.GetIdFor*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.GetIdFor(Business.Model.AnimalCharacteristic)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceCharacteristicManager.Query
  commentId: M:FarmMaster.Services.ServiceCharacteristicManager.Query
  id: Query
  parent: FarmMaster.Services.ServiceCharacteristicManager
  langs:
  - csharp
  - vb
  name: Query()
  nameWithType: ServiceCharacteristicManager.Query()
  fullName: FarmMaster.Services.ServiceCharacteristicManager.Query()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceCharacteristicManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Query
    path: Services/IServiceCharacteristicManager.cs
    startLine: 64
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<AnimalCharacteristic> Query()
    return:
      type: System.Linq.IQueryable{Business.Model.AnimalCharacteristic}
    content.vb: Public Function Query As IQueryable(Of AnimalCharacteristic)
  overload: FarmMaster.Services.ServiceCharacteristicManager.Query*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.Query
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceCharacteristicManager.QueryAllIncluded
  commentId: M:FarmMaster.Services.ServiceCharacteristicManager.QueryAllIncluded
  id: QueryAllIncluded
  parent: FarmMaster.Services.ServiceCharacteristicManager
  langs:
  - csharp
  - vb
  name: QueryAllIncluded()
  nameWithType: ServiceCharacteristicManager.QueryAllIncluded()
  fullName: FarmMaster.Services.ServiceCharacteristicManager.QueryAllIncluded()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceCharacteristicManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: QueryAllIncluded
    path: Services/IServiceCharacteristicManager.cs
    startLine: 70
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<AnimalCharacteristic> QueryAllIncluded()
    return:
      type: System.Linq.IQueryable{Business.Model.AnimalCharacteristic}
    content.vb: Public Function QueryAllIncluded As IQueryable(Of AnimalCharacteristic)
  overload: FarmMaster.Services.ServiceCharacteristicManager.QueryAllIncluded*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.QueryAllIncluded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceCharacteristicManager.Update(Business.Model.AnimalCharacteristic)
  commentId: M:FarmMaster.Services.ServiceCharacteristicManager.Update(Business.Model.AnimalCharacteristic)
  id: Update(Business.Model.AnimalCharacteristic)
  parent: FarmMaster.Services.ServiceCharacteristicManager
  langs:
  - csharp
  - vb
  name: Update(AnimalCharacteristic)
  nameWithType: ServiceCharacteristicManager.Update(AnimalCharacteristic)
  fullName: FarmMaster.Services.ServiceCharacteristicManager.Update(Business.Model.AnimalCharacteristic)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceCharacteristicManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Update
    path: Services/IServiceCharacteristicManager.cs
    startLine: 76
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void Update(AnimalCharacteristic entity)
    parameters:
    - id: entity
      type: Business.Model.AnimalCharacteristic
    content.vb: Public Sub Update(entity As AnimalCharacteristic)
  overload: FarmMaster.Services.ServiceCharacteristicManager.Update*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.Update(Business.Model.AnimalCharacteristic)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FarmMaster.Services.IServiceCharacteristicManager
  commentId: T:FarmMaster.Services.IServiceCharacteristicManager
  parent: FarmMaster.Services
  name: IServiceCharacteristicManager
  nameWithType: IServiceCharacteristicManager
  fullName: FarmMaster.Services.IServiceCharacteristicManager
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}
  commentId: T:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<AnimalCharacteristic>
  nameWithType: IServiceEntityManager<AnimalCharacteristic>
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalCharacteristic>
  nameWithType.vb: IServiceEntityManager(Of AnimalCharacteristic)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalCharacteristic)
  name.vb: IServiceEntityManager(Of AnimalCharacteristic)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalCharacteristic}
  commentId: T:FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalCharacteristic}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
  name: IServiceEntityManagerFullDeletion<AnimalCharacteristic>
  nameWithType: IServiceEntityManagerFullDeletion<AnimalCharacteristic>
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<Business.Model.AnimalCharacteristic>
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of AnimalCharacteristic)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of Business.Model.AnimalCharacteristic)
  name.vb: IServiceEntityManagerFullDeletion(Of AnimalCharacteristic)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromId<AnimalCharacteristic>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<AnimalCharacteristic>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalCharacteristic>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of AnimalCharacteristic)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalCharacteristic)(System.Int32)
  name.vb: FromId(Of AnimalCharacteristic)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId<AnimalCharacteristic>
    nameWithType: IServiceEntityDataExtentions.FromId<AnimalCharacteristic>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalCharacteristic>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId(Of AnimalCharacteristic)
    nameWithType: IServiceEntityDataExtentions.FromId(Of AnimalCharacteristic)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalCharacteristic)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromIdAllIncluded<AnimalCharacteristic>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalCharacteristic>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalCharacteristic>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalCharacteristic)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalCharacteristic)(System.Int32)
  name.vb: FromIdAllIncluded(Of AnimalCharacteristic)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded<AnimalCharacteristic>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalCharacteristic>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalCharacteristic>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded(Of AnimalCharacteristic)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalCharacteristic)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalCharacteristic)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<AnimalCharacteristic>()
  nameWithType: IServiceEntityDataExtentions.For<AnimalCharacteristic>()
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalCharacteristic>()
  nameWithType.vb: IServiceEntityDataExtentions.For(Of AnimalCharacteristic)()
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalCharacteristic)()
  name.vb: For(Of AnimalCharacteristic)()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For<AnimalCharacteristic>
    nameWithType: IServiceEntityDataExtentions.For<AnimalCharacteristic>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalCharacteristic>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For(Of AnimalCharacteristic)
    nameWithType: IServiceEntityDataExtentions.For(Of AnimalCharacteristic)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalCharacteristic)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.Services.IServiceEntityManager`1
  commentId: T:FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<T>
  nameWithType: IServiceEntityManager<T>
  fullName: FarmMaster.Services.IServiceEntityManager<T>
  nameWithType.vb: IServiceEntityManager(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T)
  name.vb: IServiceEntityManager(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
  commentId: T:FarmMaster.Services.IServiceEntityManagerFullDeletion`1
  name: IServiceEntityManagerFullDeletion<T>
  nameWithType: IServiceEntityManagerFullDeletion<T>
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<T>
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of T)
  name.vb: IServiceEntityManagerFullDeletion(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromId<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromId(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId<T>
    nameWithType: IServiceEntityDataExtentions.FromId<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId(Of T)
    nameWithType: IServiceEntityDataExtentions.FromId(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions
  commentId: T:FarmMaster.Services.IServiceEntityDataExtentions
  parent: FarmMaster.Services
  name: IServiceEntityDataExtentions
  nameWithType: IServiceEntityDataExtentions
  fullName: FarmMaster.Services.IServiceEntityDataExtentions
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded<T>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded(Of T)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<T>(IServiceEntityManager<T>)
  nameWithType: IServiceEntityDataExtentions.For<T>(IServiceEntityManager<T>)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>(FarmMaster.Services.IServiceEntityManager<T>)
  nameWithType.vb: IServiceEntityDataExtentions.For(Of T)(IServiceEntityManager(Of T))
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)(FarmMaster.Services.IServiceEntityManager(Of T))
  name.vb: For(Of T)(IServiceEntityManager(Of T))
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For<T>
    nameWithType: IServiceEntityDataExtentions.For<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For(Of T)
    nameWithType: IServiceEntityDataExtentions.For(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceCharacteristicManager.#ctor*
  commentId: Overload:FarmMaster.Services.ServiceCharacteristicManager.#ctor
  name: ServiceCharacteristicManager
  nameWithType: ServiceCharacteristicManager.ServiceCharacteristicManager
  fullName: FarmMaster.Services.ServiceCharacteristicManager.ServiceCharacteristicManager
- uid: Business.Model.FarmMasterContext
  commentId: T:Business.Model.FarmMasterContext
  parent: Business.Model
  name: FarmMasterContext
  nameWithType: FarmMasterContext
  fullName: Business.Model.FarmMasterContext
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: FarmMaster.Services.ServiceCharacteristicManager.CreateFromHtmlString*
  commentId: Overload:FarmMaster.Services.ServiceCharacteristicManager.CreateFromHtmlString
  name: CreateFromHtmlString
  nameWithType: ServiceCharacteristicManager.CreateFromHtmlString
  fullName: FarmMaster.Services.ServiceCharacteristicManager.CreateFromHtmlString
- uid: FarmMaster.Services.IServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList,System.String,Business.Model.DynamicField.Type,System.String)
  commentId: M:FarmMaster.Services.IServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList,System.String,Business.Model.DynamicField.Type,System.String)
  parent: FarmMaster.Services.IServiceCharacteristicManager
  isExternal: true
  name: CreateFromHtmlString(AnimalCharacteristicList, String, DynamicField.Type, String)
  nameWithType: IServiceCharacteristicManager.CreateFromHtmlString(AnimalCharacteristicList, String, DynamicField.Type, String)
  fullName: FarmMaster.Services.IServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList, System.String, Business.Model.DynamicField.Type, System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList,System.String,Business.Model.DynamicField.Type,System.String)
    name: CreateFromHtmlString
    nameWithType: IServiceCharacteristicManager.CreateFromHtmlString
    fullName: FarmMaster.Services.IServiceCharacteristicManager.CreateFromHtmlString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristicList
    name: AnimalCharacteristicList
    nameWithType: AnimalCharacteristicList
    fullName: Business.Model.AnimalCharacteristicList
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Business.Model.DynamicField.Type
    name: DynamicField.Type
    nameWithType: DynamicField.Type
    fullName: Business.Model.DynamicField.Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceCharacteristicManager.CreateFromHtmlString(Business.Model.AnimalCharacteristicList,System.String,Business.Model.DynamicField.Type,System.String)
    name: CreateFromHtmlString
    nameWithType: IServiceCharacteristicManager.CreateFromHtmlString
    fullName: FarmMaster.Services.IServiceCharacteristicManager.CreateFromHtmlString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristicList
    name: AnimalCharacteristicList
    nameWithType: AnimalCharacteristicList
    fullName: Business.Model.AnimalCharacteristicList
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Business.Model.DynamicField.Type
    name: DynamicField.Type
    nameWithType: DynamicField.Type
    fullName: Business.Model.DynamicField.Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.AnimalCharacteristicList
  commentId: T:Business.Model.AnimalCharacteristicList
  parent: Business.Model
  name: AnimalCharacteristicList
  nameWithType: AnimalCharacteristicList
  fullName: Business.Model.AnimalCharacteristicList
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Business.Model.DynamicField.Type
  commentId: T:Business.Model.DynamicField.Type
  parent: Business.Model
  name: DynamicField.Type
  nameWithType: DynamicField.Type
  fullName: Business.Model.DynamicField.Type
- uid: Business.Model.AnimalCharacteristic
  commentId: T:Business.Model.AnimalCharacteristic
  parent: Business.Model
  name: AnimalCharacteristic
  nameWithType: AnimalCharacteristic
  fullName: Business.Model.AnimalCharacteristic
- uid: FarmMaster.Services.ServiceCharacteristicManager.FullDelete*
  commentId: Overload:FarmMaster.Services.ServiceCharacteristicManager.FullDelete
  name: FullDelete
  nameWithType: ServiceCharacteristicManager.FullDelete
  fullName: FarmMaster.Services.ServiceCharacteristicManager.FullDelete
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalCharacteristic}.FullDelete(Business.Model.AnimalCharacteristic)
  commentId: M:FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalCharacteristic}.FullDelete(Business.Model.AnimalCharacteristic)
  parent: FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalCharacteristic}
  definition: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
  name: FullDelete(AnimalCharacteristic)
  nameWithType: IServiceEntityManagerFullDeletion<AnimalCharacteristic>.FullDelete(AnimalCharacteristic)
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<Business.Model.AnimalCharacteristic>.FullDelete(Business.Model.AnimalCharacteristic)
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of AnimalCharacteristic).FullDelete(AnimalCharacteristic)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of Business.Model.AnimalCharacteristic).FullDelete(Business.Model.AnimalCharacteristic)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion<AnimalCharacteristic>.FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<Business.Model.AnimalCharacteristic>.FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion(Of AnimalCharacteristic).FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of Business.Model.AnimalCharacteristic).FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
  name: FullDelete(T)
  nameWithType: IServiceEntityManagerFullDeletion<T>.FullDelete(T)
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<T>.FullDelete(T)
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of T).FullDelete(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of T).FullDelete(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion<T>.FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<T>.FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion(Of T).FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of T).FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceCharacteristicManager.FullDeleteById*
  commentId: Overload:FarmMaster.Services.ServiceCharacteristicManager.FullDeleteById
  name: FullDeleteById
  nameWithType: ServiceCharacteristicManager.FullDeleteById
  fullName: FarmMaster.Services.ServiceCharacteristicManager.FullDeleteById
- uid: FarmMaster.Services.IServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList,System.Int32)
  commentId: M:FarmMaster.Services.IServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList,System.Int32)
  parent: FarmMaster.Services.IServiceCharacteristicManager
  isExternal: true
  name: FullDeleteById(AnimalCharacteristicList, Int32)
  nameWithType: IServiceCharacteristicManager.FullDeleteById(AnimalCharacteristicList, Int32)
  fullName: FarmMaster.Services.IServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList, System.Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList,System.Int32)
    name: FullDeleteById
    nameWithType: IServiceCharacteristicManager.FullDeleteById
    fullName: FarmMaster.Services.IServiceCharacteristicManager.FullDeleteById
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristicList
    name: AnimalCharacteristicList
    nameWithType: AnimalCharacteristicList
    fullName: Business.Model.AnimalCharacteristicList
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceCharacteristicManager.FullDeleteById(Business.Model.AnimalCharacteristicList,System.Int32)
    name: FullDeleteById
    nameWithType: IServiceCharacteristicManager.FullDeleteById
    fullName: FarmMaster.Services.IServiceCharacteristicManager.FullDeleteById
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristicList
    name: AnimalCharacteristicList
    nameWithType: AnimalCharacteristicList
    fullName: Business.Model.AnimalCharacteristicList
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FarmMaster.Services.ServiceCharacteristicManager.GetIdFor*
  commentId: Overload:FarmMaster.Services.ServiceCharacteristicManager.GetIdFor
  name: GetIdFor
  nameWithType: ServiceCharacteristicManager.GetIdFor
  fullName: FarmMaster.Services.ServiceCharacteristicManager.GetIdFor
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.GetIdFor(Business.Model.AnimalCharacteristic)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.GetIdFor(Business.Model.AnimalCharacteristic)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}
  definition: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(AnimalCharacteristic)
  nameWithType: IServiceEntityManager<AnimalCharacteristic>.GetIdFor(AnimalCharacteristic)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalCharacteristic>.GetIdFor(Business.Model.AnimalCharacteristic)
  nameWithType.vb: IServiceEntityManager(Of AnimalCharacteristic).GetIdFor(AnimalCharacteristic)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalCharacteristic).GetIdFor(Business.Model.AnimalCharacteristic)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<AnimalCharacteristic>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalCharacteristic>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of AnimalCharacteristic).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalCharacteristic).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(T)
  nameWithType: IServiceEntityManager<T>.GetIdFor(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor(T)
  nameWithType.vb: IServiceEntityManager(Of T).GetIdFor(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<T>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of T).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceCharacteristicManager.Query*
  commentId: Overload:FarmMaster.Services.ServiceCharacteristicManager.Query
  name: Query
  nameWithType: ServiceCharacteristicManager.Query
  fullName: FarmMaster.Services.ServiceCharacteristicManager.Query
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.Query
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}
  definition: FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<AnimalCharacteristic>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalCharacteristic>.Query()
  nameWithType.vb: IServiceEntityManager(Of AnimalCharacteristic).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalCharacteristic).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<AnimalCharacteristic>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalCharacteristic>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of AnimalCharacteristic).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalCharacteristic).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{Business.Model.AnimalCharacteristic}
  commentId: T:System.Linq.IQueryable{Business.Model.AnimalCharacteristic}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<AnimalCharacteristic>
  nameWithType: IQueryable<AnimalCharacteristic>
  fullName: System.Linq.IQueryable<Business.Model.AnimalCharacteristic>
  nameWithType.vb: IQueryable(Of AnimalCharacteristic)
  fullName.vb: System.Linq.IQueryable(Of Business.Model.AnimalCharacteristic)
  name.vb: IQueryable(Of AnimalCharacteristic)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<T>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Query()
  nameWithType.vb: IServiceEntityManager(Of T).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<T>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of T).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: FarmMaster.Services.ServiceCharacteristicManager.QueryAllIncluded*
  commentId: Overload:FarmMaster.Services.ServiceCharacteristicManager.QueryAllIncluded
  name: QueryAllIncluded
  nameWithType: ServiceCharacteristicManager.QueryAllIncluded
  fullName: FarmMaster.Services.ServiceCharacteristicManager.QueryAllIncluded
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.QueryAllIncluded
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}
  definition: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<AnimalCharacteristic>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalCharacteristic>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of AnimalCharacteristic).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalCharacteristic).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<AnimalCharacteristic>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalCharacteristic>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of AnimalCharacteristic).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalCharacteristic).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<T>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of T).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<T>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of T).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceCharacteristicManager.Update*
  commentId: Overload:FarmMaster.Services.ServiceCharacteristicManager.Update
  name: Update
  nameWithType: ServiceCharacteristicManager.Update
  fullName: FarmMaster.Services.ServiceCharacteristicManager.Update
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.Update(Business.Model.AnimalCharacteristic)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}.Update(Business.Model.AnimalCharacteristic)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalCharacteristic}
  definition: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(AnimalCharacteristic)
  nameWithType: IServiceEntityManager<AnimalCharacteristic>.Update(AnimalCharacteristic)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalCharacteristic>.Update(Business.Model.AnimalCharacteristic)
  nameWithType.vb: IServiceEntityManager(Of AnimalCharacteristic).Update(AnimalCharacteristic)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalCharacteristic).Update(Business.Model.AnimalCharacteristic)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<AnimalCharacteristic>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalCharacteristic>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of AnimalCharacteristic).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalCharacteristic).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(T)
  nameWithType: IServiceEntityManager<T>.Update(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Update(T)
  nameWithType.vb: IServiceEntityManager(Of T).Update(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Update(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<T>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of T).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
