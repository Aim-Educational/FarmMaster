### YamlMime:ManagedReference
items:
- uid: FarmMaster.Models.ViewModelWithMessage
  commentId: T:FarmMaster.Models.ViewModelWithMessage
  id: ViewModelWithMessage
  parent: FarmMaster.Models
  children:
  - FarmMaster.Models.ViewModelWithMessage.CreateErrorQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  - FarmMaster.Models.ViewModelWithMessage.CreateInfoQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  - FarmMaster.Models.ViewModelWithMessage.CreateMessageQueryString(FarmMaster.Models.ViewModelWithMessage.Type,System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  - FarmMaster.Models.ViewModelWithMessage.CreateQueryString(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - FarmMaster.Models.ViewModelWithMessage.CreateWarningQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  - FarmMaster.Models.ViewModelWithMessage.HasMessage
  - FarmMaster.Models.ViewModelWithMessage.Message
  - FarmMaster.Models.ViewModelWithMessage.MessageFormat
  - FarmMaster.Models.ViewModelWithMessage.MessageType
  - FarmMaster.Models.ViewModelWithMessage.ParseInvalidModelState(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  - FarmMaster.Models.ViewModelWithMessage.ParseMessageQueryString(System.String)
  langs:
  - csharp
  - vb
  name: ViewModelWithMessage
  nameWithType: ViewModelWithMessage
  fullName: FarmMaster.Models.ViewModelWithMessage
  type: Class
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ViewModelWithMessage
    path: Models/Common.cs
    startLine: 9
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public abstract class ViewModelWithMessage
    content.vb: Public MustInherit Class ViewModelWithMessage
  inheritance:
  - System.Object
  derivedClasses:
  - FarmMaster.Models.AccountForgotPasswordViewModel
  - FarmMaster.Models.AccountResetPasswordViewModel
  - FarmMaster.Models.AccountSignupViewModel
  - FarmMaster.Models.AjaxResponseWithMessageModel
  - FarmMaster.Models.AnimalCreateEditViewModel
  - FarmMaster.Models.AnimalGroupCreateEditViewModel
  - FarmMaster.Models.AnimalIndexViewModel
  - FarmMaster.Models.BreedCreateViewModel
  - FarmMaster.Models.BreedEditViewModel
  - FarmMaster.Models.ContactCreateViewModel
  - FarmMaster.Models.ContactEditViewModel
  - FarmMaster.Models.ContactIndexViewModel
  - FarmMaster.Models.EmptyViewModelWithMessage
  - FarmMaster.Models.HoldingCreateEditViewModel
  - FarmMaster.Models.HoldingIndexViewModel
  - FarmMaster.Models.LifeEventCreateViewModel
  - FarmMaster.Models.LifeEventEntryEditorViewModel
  - FarmMaster.Models.LifeEventIndexViewModel
  - FarmMaster.Models.RoleCreateViewModel
  - FarmMaster.Models.RoleIndexViewModel
  - FarmMaster.Models.SpeciesBreedIndexViewModel
  - FarmMaster.Models.SpeciesCreateViewModel
  - FarmMaster.Models.SpeciesEditViewModel
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: FarmMaster.Models.ViewModelWithMessage.MessageType
  commentId: F:FarmMaster.Models.ViewModelWithMessage.MessageType
  id: MessageType
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: MessageType
  nameWithType: ViewModelWithMessage.MessageType
  fullName: FarmMaster.Models.ViewModelWithMessage.MessageType
  type: Field
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MessageType
    path: Models/Common.cs
    startLine: 27
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public ViewModelWithMessage.Type MessageType
    return:
      type: FarmMaster.Models.ViewModelWithMessage.Type
    content.vb: Public MessageType As ViewModelWithMessage.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.ViewModelWithMessage.MessageFormat
  commentId: F:FarmMaster.Models.ViewModelWithMessage.MessageFormat
  id: MessageFormat
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: MessageFormat
  nameWithType: ViewModelWithMessage.MessageFormat
  fullName: FarmMaster.Models.ViewModelWithMessage.MessageFormat
  type: Field
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MessageFormat
    path: Models/Common.cs
    startLine: 28
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public ViewModelWithMessage.Format MessageFormat
    return:
      type: FarmMaster.Models.ViewModelWithMessage.Format
    content.vb: Public MessageFormat As ViewModelWithMessage.Format
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.ViewModelWithMessage.Message
  commentId: F:FarmMaster.Models.ViewModelWithMessage.Message
  id: Message
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ViewModelWithMessage.Message
  fullName: FarmMaster.Models.ViewModelWithMessage.Message
  type: Field
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Message
    path: Models/Common.cs
    startLine: 29
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public string Message
    return:
      type: System.String
    content.vb: Public Message As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.ViewModelWithMessage.HasMessage
  commentId: P:FarmMaster.Models.ViewModelWithMessage.HasMessage
  id: HasMessage
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: HasMessage
  nameWithType: ViewModelWithMessage.HasMessage
  fullName: FarmMaster.Models.ViewModelWithMessage.HasMessage
  type: Property
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: HasMessage
    path: Models/Common.cs
    startLine: 31
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public bool HasMessage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasMessage As Boolean
  overload: FarmMaster.Models.ViewModelWithMessage.HasMessage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: FarmMaster.Models.ViewModelWithMessage.ParseMessageQueryString(System.String)
  commentId: M:FarmMaster.Models.ViewModelWithMessage.ParseMessageQueryString(System.String)
  id: ParseMessageQueryString(System.String)
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: ParseMessageQueryString(String)
  nameWithType: ViewModelWithMessage.ParseMessageQueryString(String)
  fullName: FarmMaster.Models.ViewModelWithMessage.ParseMessageQueryString(System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ParseMessageQueryString
    path: Models/Common.cs
    startLine: 33
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public void ParseMessageQueryString(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub ParseMessageQueryString(message As String)
  overload: FarmMaster.Models.ViewModelWithMessage.ParseMessageQueryString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.ViewModelWithMessage.ParseInvalidModelState(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:FarmMaster.Models.ViewModelWithMessage.ParseInvalidModelState(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  id: ParseInvalidModelState(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: ParseInvalidModelState(ModelStateDictionary)
  nameWithType: ViewModelWithMessage.ParseInvalidModelState(ModelStateDictionary)
  fullName: FarmMaster.Models.ViewModelWithMessage.ParseInvalidModelState(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  type: Method
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ParseInvalidModelState
    path: Models/Common.cs
    startLine: 54
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public void ParseInvalidModelState(ModelStateDictionary modelState)
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    content.vb: Public Sub ParseInvalidModelState(modelState As ModelStateDictionary)
  overload: FarmMaster.Models.ViewModelWithMessage.ParseInvalidModelState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.ViewModelWithMessage.CreateMessageQueryString(FarmMaster.Models.ViewModelWithMessage.Type,System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  commentId: M:FarmMaster.Models.ViewModelWithMessage.CreateMessageQueryString(FarmMaster.Models.ViewModelWithMessage.Type,System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  id: CreateMessageQueryString(FarmMaster.Models.ViewModelWithMessage.Type,System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: CreateMessageQueryString(ViewModelWithMessage.Type, String, ViewModelWithMessage.Format)
  nameWithType: ViewModelWithMessage.CreateMessageQueryString(ViewModelWithMessage.Type, String, ViewModelWithMessage.Format)
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateMessageQueryString(FarmMaster.Models.ViewModelWithMessage.Type, System.String, FarmMaster.Models.ViewModelWithMessage.Format)
  type: Method
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: CreateMessageQueryString
    path: Models/Common.cs
    startLine: 59
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public static string CreateMessageQueryString(ViewModelWithMessage.Type type, string message, ViewModelWithMessage.Format format = ViewModelWithMessage.Format.Default)
    parameters:
    - id: type
      type: FarmMaster.Models.ViewModelWithMessage.Type
    - id: message
      type: System.String
    - id: format
      type: FarmMaster.Models.ViewModelWithMessage.Format
    return:
      type: System.String
    content.vb: Public Shared Function CreateMessageQueryString(type As ViewModelWithMessage.Type, message As String, format As ViewModelWithMessage.Format = ViewModelWithMessage.Format.Default) As String
  overload: FarmMaster.Models.ViewModelWithMessage.CreateMessageQueryString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FarmMaster.Models.ViewModelWithMessage.CreateQueryString(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  commentId: M:FarmMaster.Models.ViewModelWithMessage.CreateQueryString(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  id: CreateQueryString(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: CreateQueryString(ModelStateDictionary)
  nameWithType: ViewModelWithMessage.CreateQueryString(ModelStateDictionary)
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateQueryString(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)
  type: Method
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: CreateQueryString
    path: Models/Common.cs
    startLine: 67
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public static string CreateQueryString(ModelStateDictionary modelState)
    parameters:
    - id: modelState
      type: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
    return:
      type: System.String
    content.vb: Public Shared Function CreateQueryString(modelState As ModelStateDictionary) As String
  overload: FarmMaster.Models.ViewModelWithMessage.CreateQueryString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FarmMaster.Models.ViewModelWithMessage.CreateErrorQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  commentId: M:FarmMaster.Models.ViewModelWithMessage.CreateErrorQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  id: CreateErrorQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: CreateErrorQueryString(String, ViewModelWithMessage.Format)
  nameWithType: ViewModelWithMessage.CreateErrorQueryString(String, ViewModelWithMessage.Format)
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateErrorQueryString(System.String, FarmMaster.Models.ViewModelWithMessage.Format)
  type: Method
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: CreateErrorQueryString
    path: Models/Common.cs
    startLine: 80
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public static string CreateErrorQueryString(string message, ViewModelWithMessage.Format format = ViewModelWithMessage.Format.Default)
    parameters:
    - id: message
      type: System.String
    - id: format
      type: FarmMaster.Models.ViewModelWithMessage.Format
    return:
      type: System.String
    content.vb: Public Shared Function CreateErrorQueryString(message As String, format As ViewModelWithMessage.Format = ViewModelWithMessage.Format.Default) As String
  overload: FarmMaster.Models.ViewModelWithMessage.CreateErrorQueryString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FarmMaster.Models.ViewModelWithMessage.CreateWarningQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  commentId: M:FarmMaster.Models.ViewModelWithMessage.CreateWarningQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  id: CreateWarningQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: CreateWarningQueryString(String, ViewModelWithMessage.Format)
  nameWithType: ViewModelWithMessage.CreateWarningQueryString(String, ViewModelWithMessage.Format)
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateWarningQueryString(System.String, FarmMaster.Models.ViewModelWithMessage.Format)
  type: Method
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: CreateWarningQueryString
    path: Models/Common.cs
    startLine: 85
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public static string CreateWarningQueryString(string message, ViewModelWithMessage.Format format = ViewModelWithMessage.Format.Default)
    parameters:
    - id: message
      type: System.String
    - id: format
      type: FarmMaster.Models.ViewModelWithMessage.Format
    return:
      type: System.String
    content.vb: Public Shared Function CreateWarningQueryString(message As String, format As ViewModelWithMessage.Format = ViewModelWithMessage.Format.Default) As String
  overload: FarmMaster.Models.ViewModelWithMessage.CreateWarningQueryString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FarmMaster.Models.ViewModelWithMessage.CreateInfoQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  commentId: M:FarmMaster.Models.ViewModelWithMessage.CreateInfoQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  id: CreateInfoQueryString(System.String,FarmMaster.Models.ViewModelWithMessage.Format)
  parent: FarmMaster.Models.ViewModelWithMessage
  langs:
  - csharp
  - vb
  name: CreateInfoQueryString(String, ViewModelWithMessage.Format)
  nameWithType: ViewModelWithMessage.CreateInfoQueryString(String, ViewModelWithMessage.Format)
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateInfoQueryString(System.String, FarmMaster.Models.ViewModelWithMessage.Format)
  type: Method
  source:
    remote:
      path: FarmMaster/Models/Common.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: CreateInfoQueryString
    path: Models/Common.cs
    startLine: 90
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: public static string CreateInfoQueryString(string message, ViewModelWithMessage.Format format = ViewModelWithMessage.Format.Default)
    parameters:
    - id: message
      type: System.String
    - id: format
      type: FarmMaster.Models.ViewModelWithMessage.Format
    return:
      type: System.String
    content.vb: Public Shared Function CreateInfoQueryString(message As String, format As ViewModelWithMessage.Format = ViewModelWithMessage.Format.Default) As String
  overload: FarmMaster.Models.ViewModelWithMessage.CreateInfoQueryString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: FarmMaster.Models
  commentId: N:FarmMaster.Models
  name: FarmMaster.Models
  nameWithType: FarmMaster.Models
  fullName: FarmMaster.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.Models.ViewModelWithMessage.Type
  commentId: T:FarmMaster.Models.ViewModelWithMessage.Type
  parent: FarmMaster.Models
  name: ViewModelWithMessage.Type
  nameWithType: ViewModelWithMessage.Type
  fullName: FarmMaster.Models.ViewModelWithMessage.Type
- uid: FarmMaster.Models.ViewModelWithMessage.Format
  commentId: T:FarmMaster.Models.ViewModelWithMessage.Format
  parent: FarmMaster.Models
  name: ViewModelWithMessage.Format
  nameWithType: ViewModelWithMessage.Format
  fullName: FarmMaster.Models.ViewModelWithMessage.Format
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FarmMaster.Models.ViewModelWithMessage.HasMessage*
  commentId: Overload:FarmMaster.Models.ViewModelWithMessage.HasMessage
  name: HasMessage
  nameWithType: ViewModelWithMessage.HasMessage
  fullName: FarmMaster.Models.ViewModelWithMessage.HasMessage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: FarmMaster.Models.ViewModelWithMessage.ParseMessageQueryString*
  commentId: Overload:FarmMaster.Models.ViewModelWithMessage.ParseMessageQueryString
  name: ParseMessageQueryString
  nameWithType: ViewModelWithMessage.ParseMessageQueryString
  fullName: FarmMaster.Models.ViewModelWithMessage.ParseMessageQueryString
- uid: FarmMaster.Models.ViewModelWithMessage.ParseInvalidModelState*
  commentId: Overload:FarmMaster.Models.ViewModelWithMessage.ParseInvalidModelState
  name: ParseInvalidModelState
  nameWithType: ViewModelWithMessage.ParseInvalidModelState
  fullName: FarmMaster.Models.ViewModelWithMessage.ParseInvalidModelState
- uid: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  commentId: T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
  parent: Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: true
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary
- uid: Microsoft.AspNetCore.Mvc.ModelBinding
  commentId: N:Microsoft.AspNetCore.Mvc.ModelBinding
  isExternal: true
  name: Microsoft.AspNetCore.Mvc.ModelBinding
  nameWithType: Microsoft.AspNetCore.Mvc.ModelBinding
  fullName: Microsoft.AspNetCore.Mvc.ModelBinding
- uid: FarmMaster.Models.ViewModelWithMessage.CreateMessageQueryString*
  commentId: Overload:FarmMaster.Models.ViewModelWithMessage.CreateMessageQueryString
  name: CreateMessageQueryString
  nameWithType: ViewModelWithMessage.CreateMessageQueryString
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateMessageQueryString
- uid: FarmMaster.Models.ViewModelWithMessage.CreateQueryString*
  commentId: Overload:FarmMaster.Models.ViewModelWithMessage.CreateQueryString
  name: CreateQueryString
  nameWithType: ViewModelWithMessage.CreateQueryString
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateQueryString
- uid: FarmMaster.Models.ViewModelWithMessage.CreateErrorQueryString*
  commentId: Overload:FarmMaster.Models.ViewModelWithMessage.CreateErrorQueryString
  name: CreateErrorQueryString
  nameWithType: ViewModelWithMessage.CreateErrorQueryString
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateErrorQueryString
- uid: FarmMaster.Models.ViewModelWithMessage.CreateWarningQueryString*
  commentId: Overload:FarmMaster.Models.ViewModelWithMessage.CreateWarningQueryString
  name: CreateWarningQueryString
  nameWithType: ViewModelWithMessage.CreateWarningQueryString
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateWarningQueryString
- uid: FarmMaster.Models.ViewModelWithMessage.CreateInfoQueryString*
  commentId: Overload:FarmMaster.Models.ViewModelWithMessage.CreateInfoQueryString
  name: CreateInfoQueryString
  nameWithType: ViewModelWithMessage.CreateInfoQueryString
  fullName: FarmMaster.Models.ViewModelWithMessage.CreateInfoQueryString
