### YamlMime:ManagedReference
items:
- uid: FarmMaster.Services.ServiceAnimalGroupManager
  commentId: T:FarmMaster.Services.ServiceAnimalGroupManager
  id: ServiceAnimalGroupManager
  parent: FarmMaster.Services
  children:
  - FarmMaster.Services.ServiceAnimalGroupManager.#ctor(Business.Model.FarmMasterContext)
  - FarmMaster.Services.ServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  - FarmMaster.Services.ServiceAnimalGroupManager.Create(System.String,System.String)
  - FarmMaster.Services.ServiceAnimalGroupManager.FullDelete(Business.Model.AnimalGroup)
  - FarmMaster.Services.ServiceAnimalGroupManager.GetIdFor(Business.Model.AnimalGroup)
  - FarmMaster.Services.ServiceAnimalGroupManager.Query
  - FarmMaster.Services.ServiceAnimalGroupManager.QueryAllIncluded
  - FarmMaster.Services.ServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  - FarmMaster.Services.ServiceAnimalGroupManager.Update(Business.Model.AnimalGroup)
  langs:
  - csharp
  - vb
  name: ServiceAnimalGroupManager
  nameWithType: ServiceAnimalGroupManager
  fullName: FarmMaster.Services.ServiceAnimalGroupManager
  type: Class
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ServiceAnimalGroupManager
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 22
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: 'public class ServiceAnimalGroupManager : IServiceAnimalGroupManager, IServiceEntityManager<AnimalGroup>, IServiceEntityManagerFullDeletion<AnimalGroup>'
    content.vb: >-
      Public Class ServiceAnimalGroupManager

          Implements IServiceAnimalGroupManager, IServiceEntityManager(Of AnimalGroup), IServiceEntityManagerFullDeletion(Of AnimalGroup)
  inheritance:
  - System.Object
  implements:
  - FarmMaster.Services.IServiceAnimalGroupManager
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  - FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FarmMaster.Services.ServiceAnimalGroupManager.#ctor(Business.Model.FarmMasterContext)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupManager.#ctor(Business.Model.FarmMasterContext)
  id: '#ctor(Business.Model.FarmMasterContext)'
  parent: FarmMaster.Services.ServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: ServiceAnimalGroupManager(FarmMasterContext)
  nameWithType: ServiceAnimalGroupManager.ServiceAnimalGroupManager(FarmMasterContext)
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.ServiceAnimalGroupManager(Business.Model.FarmMasterContext)
  type: Constructor
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 26
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public ServiceAnimalGroupManager(FarmMasterContext context)
    parameters:
    - id: context
      type: Business.Model.FarmMasterContext
    content.vb: Public Sub New(context As FarmMasterContext)
  overload: FarmMaster.Services.ServiceAnimalGroupManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  id: AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  parent: FarmMaster.Services.ServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: AssignAnimal(AnimalGroup, Animal)
  nameWithType: ServiceAnimalGroupManager.AssignAnimal(AnimalGroup, Animal)
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup, Business.Model.Animal)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AssignAnimal
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 31
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public MapAnimalToAnimalGroup AssignAnimal(AnimalGroup group, Animal animal)
    parameters:
    - id: group
      type: Business.Model.AnimalGroup
    - id: animal
      type: Business.Model.Animal
    return:
      type: Business.Model.MapAnimalToAnimalGroup
    content.vb: Public Function AssignAnimal(group As AnimalGroup, animal As Animal) As MapAnimalToAnimalGroup
  overload: FarmMaster.Services.ServiceAnimalGroupManager.AssignAnimal*
  implements:
  - FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  id: RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  parent: FarmMaster.Services.ServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: RemoveFromGroup(AnimalGroup, Animal)
  nameWithType: ServiceAnimalGroupManager.RemoveFromGroup(AnimalGroup, Animal)
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup, Business.Model.Animal)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: RemoveFromGroup
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 55
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public CouldDelete RemoveFromGroup(AnimalGroup group, Animal animal)
    parameters:
    - id: group
      type: Business.Model.AnimalGroup
    - id: animal
      type: Business.Model.Animal
    return:
      type: FarmMaster.Misc.CouldDelete
    content.vb: Public Function RemoveFromGroup(group As AnimalGroup, animal As Animal) As CouldDelete
  overload: FarmMaster.Services.ServiceAnimalGroupManager.RemoveFromGroup*
  implements:
  - FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupManager.Create(System.String,System.String)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupManager.Create(System.String,System.String)
  id: Create(System.String,System.String)
  parent: FarmMaster.Services.ServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: Create(String, String)
  nameWithType: ServiceAnimalGroupManager.Create(String, String)
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.Create(System.String, System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Create
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 70
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public AnimalGroup Create(string name, string description)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    return:
      type: Business.Model.AnimalGroup
    content.vb: Public Function Create(name As String, description As String) As AnimalGroup
  overload: FarmMaster.Services.ServiceAnimalGroupManager.Create*
  implements:
  - FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupManager.FullDelete(Business.Model.AnimalGroup)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupManager.FullDelete(Business.Model.AnimalGroup)
  id: FullDelete(Business.Model.AnimalGroup)
  parent: FarmMaster.Services.ServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: FullDelete(AnimalGroup)
  nameWithType: ServiceAnimalGroupManager.FullDelete(AnimalGroup)
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.FullDelete(Business.Model.AnimalGroup)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: FullDelete
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 84
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void FullDelete(AnimalGroup entity)
    parameters:
    - id: entity
      type: Business.Model.AnimalGroup
    content.vb: Public Sub FullDelete(entity As AnimalGroup)
  overload: FarmMaster.Services.ServiceAnimalGroupManager.FullDelete*
  implements:
  - FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}.FullDelete(Business.Model.AnimalGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupManager.GetIdFor(Business.Model.AnimalGroup)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupManager.GetIdFor(Business.Model.AnimalGroup)
  id: GetIdFor(Business.Model.AnimalGroup)
  parent: FarmMaster.Services.ServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: GetIdFor(AnimalGroup)
  nameWithType: ServiceAnimalGroupManager.GetIdFor(AnimalGroup)
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.GetIdFor(Business.Model.AnimalGroup)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetIdFor
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 93
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public int GetIdFor(AnimalGroup entity)
    parameters:
    - id: entity
      type: Business.Model.AnimalGroup
    return:
      type: System.Int32
    content.vb: Public Function GetIdFor(entity As AnimalGroup) As Integer
  overload: FarmMaster.Services.ServiceAnimalGroupManager.GetIdFor*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.GetIdFor(Business.Model.AnimalGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupManager.Query
  commentId: M:FarmMaster.Services.ServiceAnimalGroupManager.Query
  id: Query
  parent: FarmMaster.Services.ServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: Query()
  nameWithType: ServiceAnimalGroupManager.Query()
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.Query()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Query
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 99
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<AnimalGroup> Query()
    return:
      type: System.Linq.IQueryable{Business.Model.AnimalGroup}
    content.vb: Public Function Query As IQueryable(Of AnimalGroup)
  overload: FarmMaster.Services.ServiceAnimalGroupManager.Query*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Query
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupManager.QueryAllIncluded
  commentId: M:FarmMaster.Services.ServiceAnimalGroupManager.QueryAllIncluded
  id: QueryAllIncluded
  parent: FarmMaster.Services.ServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: QueryAllIncluded()
  nameWithType: ServiceAnimalGroupManager.QueryAllIncluded()
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.QueryAllIncluded()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: QueryAllIncluded
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 104
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: >-
      [Obsolete("Use .Query and manual .Includes instead.", true)]

      public IQueryable<AnimalGroup> QueryAllIncluded()
    return:
      type: System.Linq.IQueryable{Business.Model.AnimalGroup}
    content.vb: >-
      <Obsolete("Use .Query and manual .Includes instead.", True)>

      Public Function QueryAllIncluded As IQueryable(Of AnimalGroup)
  overload: FarmMaster.Services.ServiceAnimalGroupManager.QueryAllIncluded*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.QueryAllIncluded
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use .Query and manual .Includes instead.
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceAnimalGroupManager.Update(Business.Model.AnimalGroup)
  commentId: M:FarmMaster.Services.ServiceAnimalGroupManager.Update(Business.Model.AnimalGroup)
  id: Update(Business.Model.AnimalGroup)
  parent: FarmMaster.Services.ServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: Update(AnimalGroup)
  nameWithType: ServiceAnimalGroupManager.Update(AnimalGroup)
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.Update(Business.Model.AnimalGroup)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Update
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 110
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void Update(AnimalGroup entity)
    parameters:
    - id: entity
      type: Business.Model.AnimalGroup
    content.vb: Public Sub Update(entity As AnimalGroup)
  overload: FarmMaster.Services.ServiceAnimalGroupManager.Update*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Update(Business.Model.AnimalGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FarmMaster.Services.IServiceAnimalGroupManager
  commentId: T:FarmMaster.Services.IServiceAnimalGroupManager
  parent: FarmMaster.Services
  name: IServiceAnimalGroupManager
  nameWithType: IServiceAnimalGroupManager
  fullName: FarmMaster.Services.IServiceAnimalGroupManager
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  commentId: T:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<AnimalGroup>
  nameWithType: IServiceEntityManager<AnimalGroup>
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup)
  name.vb: IServiceEntityManager(Of AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}
  commentId: T:FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
  name: IServiceEntityManagerFullDeletion<AnimalGroup>
  nameWithType: IServiceEntityManagerFullDeletion<AnimalGroup>
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<Business.Model.AnimalGroup>
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of Business.Model.AnimalGroup)
  name.vb: IServiceEntityManagerFullDeletion(Of AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromId<AnimalGroup>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<AnimalGroup>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalGroup>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of AnimalGroup)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalGroup)(System.Int32)
  name.vb: FromId(Of AnimalGroup)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId<AnimalGroup>
    nameWithType: IServiceEntityDataExtentions.FromId<AnimalGroup>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalGroup>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId(Of AnimalGroup)
    nameWithType: IServiceEntityDataExtentions.FromId(Of AnimalGroup)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalGroup)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromIdAllIncluded<AnimalGroup>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalGroup>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalGroup>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalGroup)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalGroup)(System.Int32)
  name.vb: FromIdAllIncluded(Of AnimalGroup)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded<AnimalGroup>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalGroup>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalGroup>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded(Of AnimalGroup)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalGroup)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalGroup)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<AnimalGroup>()
  nameWithType: IServiceEntityDataExtentions.For<AnimalGroup>()
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalGroup>()
  nameWithType.vb: IServiceEntityDataExtentions.For(Of AnimalGroup)()
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalGroup)()
  name.vb: For(Of AnimalGroup)()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For<AnimalGroup>
    nameWithType: IServiceEntityDataExtentions.For<AnimalGroup>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalGroup>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For(Of AnimalGroup)
    nameWithType: IServiceEntityDataExtentions.For(Of AnimalGroup)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalGroup)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.Services.IServiceEntityManager`1
  commentId: T:FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<T>
  nameWithType: IServiceEntityManager<T>
  fullName: FarmMaster.Services.IServiceEntityManager<T>
  nameWithType.vb: IServiceEntityManager(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T)
  name.vb: IServiceEntityManager(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
  commentId: T:FarmMaster.Services.IServiceEntityManagerFullDeletion`1
  name: IServiceEntityManagerFullDeletion<T>
  nameWithType: IServiceEntityManagerFullDeletion<T>
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<T>
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of T)
  name.vb: IServiceEntityManagerFullDeletion(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromId<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromId(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId<T>
    nameWithType: IServiceEntityDataExtentions.FromId<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId(Of T)
    nameWithType: IServiceEntityDataExtentions.FromId(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions
  commentId: T:FarmMaster.Services.IServiceEntityDataExtentions
  parent: FarmMaster.Services
  name: IServiceEntityDataExtentions
  nameWithType: IServiceEntityDataExtentions
  fullName: FarmMaster.Services.IServiceEntityDataExtentions
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded<T>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded(Of T)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<T>(IServiceEntityManager<T>)
  nameWithType: IServiceEntityDataExtentions.For<T>(IServiceEntityManager<T>)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>(FarmMaster.Services.IServiceEntityManager<T>)
  nameWithType.vb: IServiceEntityDataExtentions.For(Of T)(IServiceEntityManager(Of T))
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)(FarmMaster.Services.IServiceEntityManager(Of T))
  name.vb: For(Of T)(IServiceEntityManager(Of T))
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For<T>
    nameWithType: IServiceEntityDataExtentions.For<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For(Of T)
    nameWithType: IServiceEntityDataExtentions.For(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceAnimalGroupManager.#ctor*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupManager.#ctor
  name: ServiceAnimalGroupManager
  nameWithType: ServiceAnimalGroupManager.ServiceAnimalGroupManager
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.ServiceAnimalGroupManager
- uid: Business.Model.FarmMasterContext
  commentId: T:Business.Model.FarmMasterContext
  parent: Business.Model
  name: FarmMasterContext
  nameWithType: FarmMasterContext
  fullName: Business.Model.FarmMasterContext
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: FarmMaster.Services.ServiceAnimalGroupManager.AssignAnimal*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupManager.AssignAnimal
  name: AssignAnimal
  nameWithType: ServiceAnimalGroupManager.AssignAnimal
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.AssignAnimal
- uid: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  commentId: M:FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  parent: FarmMaster.Services.IServiceAnimalGroupManager
  name: AssignAnimal(AnimalGroup, Animal)
  nameWithType: IServiceAnimalGroupManager.AssignAnimal(AnimalGroup, Animal)
  fullName: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup, Business.Model.Animal)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
    name: AssignAnimal
    nameWithType: IServiceAnimalGroupManager.AssignAnimal
    fullName: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
    name: AssignAnimal
    nameWithType: IServiceAnimalGroupManager.AssignAnimal
    fullName: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.AnimalGroup
  commentId: T:Business.Model.AnimalGroup
  parent: Business.Model
  name: AnimalGroup
  nameWithType: AnimalGroup
  fullName: Business.Model.AnimalGroup
- uid: Business.Model.Animal
  commentId: T:Business.Model.Animal
  parent: Business.Model
  name: Animal
  nameWithType: Animal
  fullName: Business.Model.Animal
- uid: Business.Model.MapAnimalToAnimalGroup
  commentId: T:Business.Model.MapAnimalToAnimalGroup
  parent: Business.Model
  name: MapAnimalToAnimalGroup
  nameWithType: MapAnimalToAnimalGroup
  fullName: Business.Model.MapAnimalToAnimalGroup
- uid: FarmMaster.Services.ServiceAnimalGroupManager.RemoveFromGroup*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupManager.RemoveFromGroup
  name: RemoveFromGroup
  nameWithType: ServiceAnimalGroupManager.RemoveFromGroup
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.RemoveFromGroup
- uid: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  commentId: M:FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  parent: FarmMaster.Services.IServiceAnimalGroupManager
  name: RemoveFromGroup(AnimalGroup, Animal)
  nameWithType: IServiceAnimalGroupManager.RemoveFromGroup(AnimalGroup, Animal)
  fullName: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup, Business.Model.Animal)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
    name: RemoveFromGroup
    nameWithType: IServiceAnimalGroupManager.RemoveFromGroup
    fullName: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
    name: RemoveFromGroup
    nameWithType: IServiceAnimalGroupManager.RemoveFromGroup
    fullName: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Misc.CouldDelete
  commentId: T:FarmMaster.Misc.CouldDelete
  parent: FarmMaster.Misc
  name: CouldDelete
  nameWithType: CouldDelete
  fullName: FarmMaster.Misc.CouldDelete
- uid: FarmMaster.Misc
  commentId: N:FarmMaster.Misc
  name: FarmMaster.Misc
  nameWithType: FarmMaster.Misc
  fullName: FarmMaster.Misc
- uid: FarmMaster.Services.ServiceAnimalGroupManager.Create*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupManager.Create
  name: Create
  nameWithType: ServiceAnimalGroupManager.Create
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.Create
- uid: FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String,System.String)
  commentId: M:FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String,System.String)
  parent: FarmMaster.Services.IServiceAnimalGroupManager
  isExternal: true
  name: Create(String, String)
  nameWithType: IServiceAnimalGroupManager.Create(String, String)
  fullName: FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String, System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String,System.String)
    name: Create
    nameWithType: IServiceAnimalGroupManager.Create
    fullName: FarmMaster.Services.IServiceAnimalGroupManager.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String,System.String)
    name: Create
    nameWithType: IServiceAnimalGroupManager.Create
    fullName: FarmMaster.Services.IServiceAnimalGroupManager.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FarmMaster.Services.ServiceAnimalGroupManager.FullDelete*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupManager.FullDelete
  name: FullDelete
  nameWithType: ServiceAnimalGroupManager.FullDelete
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.FullDelete
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}.FullDelete(Business.Model.AnimalGroup)
  commentId: M:FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}.FullDelete(Business.Model.AnimalGroup)
  parent: FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
  name: FullDelete(AnimalGroup)
  nameWithType: IServiceEntityManagerFullDeletion<AnimalGroup>.FullDelete(AnimalGroup)
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<Business.Model.AnimalGroup>.FullDelete(Business.Model.AnimalGroup)
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of AnimalGroup).FullDelete(AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of Business.Model.AnimalGroup).FullDelete(Business.Model.AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion<AnimalGroup>.FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<Business.Model.AnimalGroup>.FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion(Of AnimalGroup).FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of Business.Model.AnimalGroup).FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
  name: FullDelete(T)
  nameWithType: IServiceEntityManagerFullDeletion<T>.FullDelete(T)
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<T>.FullDelete(T)
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of T).FullDelete(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of T).FullDelete(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion<T>.FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<T>.FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion(Of T).FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of T).FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceAnimalGroupManager.GetIdFor*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupManager.GetIdFor
  name: GetIdFor
  nameWithType: ServiceAnimalGroupManager.GetIdFor
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.GetIdFor
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.GetIdFor(Business.Model.AnimalGroup)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.GetIdFor(Business.Model.AnimalGroup)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(AnimalGroup)
  nameWithType: IServiceEntityManager<AnimalGroup>.GetIdFor(AnimalGroup)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.GetIdFor(Business.Model.AnimalGroup)
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup).GetIdFor(AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).GetIdFor(Business.Model.AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<AnimalGroup>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of AnimalGroup).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(T)
  nameWithType: IServiceEntityManager<T>.GetIdFor(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor(T)
  nameWithType.vb: IServiceEntityManager(Of T).GetIdFor(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<T>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of T).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceAnimalGroupManager.Query*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupManager.Query
  name: Query
  nameWithType: ServiceAnimalGroupManager.Query
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.Query
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Query
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<AnimalGroup>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.Query()
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<AnimalGroup>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of AnimalGroup).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{Business.Model.AnimalGroup}
  commentId: T:System.Linq.IQueryable{Business.Model.AnimalGroup}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<AnimalGroup>
  nameWithType: IQueryable<AnimalGroup>
  fullName: System.Linq.IQueryable<Business.Model.AnimalGroup>
  nameWithType.vb: IQueryable(Of AnimalGroup)
  fullName.vb: System.Linq.IQueryable(Of Business.Model.AnimalGroup)
  name.vb: IQueryable(Of AnimalGroup)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<T>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Query()
  nameWithType.vb: IServiceEntityManager(Of T).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<T>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of T).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: FarmMaster.Services.ServiceAnimalGroupManager.QueryAllIncluded*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupManager.QueryAllIncluded
  name: QueryAllIncluded
  nameWithType: ServiceAnimalGroupManager.QueryAllIncluded
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.QueryAllIncluded
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.QueryAllIncluded
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<AnimalGroup>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<AnimalGroup>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of AnimalGroup).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<T>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of T).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<T>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of T).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceAnimalGroupManager.Update*
  commentId: Overload:FarmMaster.Services.ServiceAnimalGroupManager.Update
  name: Update
  nameWithType: ServiceAnimalGroupManager.Update
  fullName: FarmMaster.Services.ServiceAnimalGroupManager.Update
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Update(Business.Model.AnimalGroup)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Update(Business.Model.AnimalGroup)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(AnimalGroup)
  nameWithType: IServiceEntityManager<AnimalGroup>.Update(AnimalGroup)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.Update(Business.Model.AnimalGroup)
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup).Update(AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).Update(Business.Model.AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<AnimalGroup>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of AnimalGroup).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(T)
  nameWithType: IServiceEntityManager<T>.Update(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Update(T)
  nameWithType.vb: IServiceEntityManager(Of T).Update(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Update(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<T>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of T).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
