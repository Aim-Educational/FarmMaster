### YamlMime:ManagedReference
items:
- uid: FarmMaster.Services.ServiceImageManager
  commentId: T:FarmMaster.Services.ServiceImageManager
  id: ServiceImageManager
  parent: FarmMaster.Services
  children:
  - FarmMaster.Services.ServiceImageManager.#ctor(Business.Model.FarmMasterContext,Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  - FarmMaster.Services.ServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image,System.UInt16,System.UInt16)
  - FarmMaster.Services.ServiceImageManager.GetIdFor(Business.Model.Image)
  - FarmMaster.Services.ServiceImageManager.Query
  - FarmMaster.Services.ServiceImageManager.QueryAllIncluded
  - FarmMaster.Services.ServiceImageManager.ResizeToPhysicalFile(Business.Model.Image,System.UInt16,System.UInt16)
  - FarmMaster.Services.ServiceImageManager.Update(Business.Model.Image)
  - FarmMaster.Services.ServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
  langs:
  - csharp
  - vb
  name: ServiceImageManager
  nameWithType: ServiceImageManager
  fullName: FarmMaster.Services.ServiceImageManager
  type: Class
  source:
    remote:
      path: FarmMaster/Services/IServiceImageManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ServiceImageManager
    path: Services/IServiceImageManager.cs
    startLine: 26
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: 'public class ServiceImageManager : IServiceImageManager, IServiceEntityManager<Image>'
    content.vb: >-
      Public Class ServiceImageManager

          Implements IServiceImageManager, IServiceEntityManager(Of Image)
  inheritance:
  - System.Object
  implements:
  - FarmMaster.Services.IServiceImageManager
  - FarmMaster.Services.IServiceEntityManager{Business.Model.Image}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FarmMaster.Services.ServiceImageManager.#ctor(Business.Model.FarmMasterContext,Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  commentId: M:FarmMaster.Services.ServiceImageManager.#ctor(Business.Model.FarmMasterContext,Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  id: '#ctor(Business.Model.FarmMasterContext,Microsoft.AspNetCore.Hosting.IHostingEnvironment)'
  parent: FarmMaster.Services.ServiceImageManager
  langs:
  - csharp
  - vb
  name: ServiceImageManager(FarmMasterContext, IHostingEnvironment)
  nameWithType: ServiceImageManager.ServiceImageManager(FarmMasterContext, IHostingEnvironment)
  fullName: FarmMaster.Services.ServiceImageManager.ServiceImageManager(Business.Model.FarmMasterContext, Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  type: Constructor
  source:
    remote:
      path: FarmMaster/Services/IServiceImageManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: Services/IServiceImageManager.cs
    startLine: 32
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public ServiceImageManager(FarmMasterContext context, IHostingEnvironment env)
    parameters:
    - id: context
      type: Business.Model.FarmMasterContext
    - id: env
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
    content.vb: Public Sub New(context As FarmMasterContext, env As IHostingEnvironment)
  overload: FarmMaster.Services.ServiceImageManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
  commentId: M:FarmMaster.Services.ServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
  id: UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
  parent: FarmMaster.Services.ServiceImageManager
  langs:
  - csharp
  - vb
  name: UploadFromForm(IFormFile)
  nameWithType: ServiceImageManager.UploadFromForm(IFormFile)
  fullName: FarmMaster.Services.ServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceImageManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UploadFromForm
    path: Services/IServiceImageManager.cs
    startLine: 38
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public Task<Image> UploadFromForm(IFormFile file)
    parameters:
    - id: file
      type: Microsoft.AspNetCore.Http.IFormFile
    return:
      type: System.Threading.Tasks.Task{Business.Model.Image}
    content.vb: Public Function UploadFromForm(file As IFormFile) As Task(Of Image)
  overload: FarmMaster.Services.ServiceImageManager.UploadFromForm*
  implements:
  - FarmMaster.Services.IServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image,System.UInt16,System.UInt16)
  commentId: M:FarmMaster.Services.ServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image,System.UInt16,System.UInt16)
  id: GetFileNameForImageAndSize(Business.Model.Image,System.UInt16,System.UInt16)
  parent: FarmMaster.Services.ServiceImageManager
  langs:
  - csharp
  - vb
  name: GetFileNameForImageAndSize(Image, UInt16, UInt16)
  nameWithType: ServiceImageManager.GetFileNameForImageAndSize(Image, UInt16, UInt16)
  fullName: FarmMaster.Services.ServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image, System.UInt16, System.UInt16)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceImageManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetFileNameForImageAndSize
    path: Services/IServiceImageManager.cs
    startLine: 78
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public string GetFileNameForImageAndSize(Image image, ushort width, ushort height)
    parameters:
    - id: image
      type: Business.Model.Image
    - id: width
      type: System.UInt16
    - id: height
      type: System.UInt16
    return:
      type: System.String
    content.vb: Public Function GetFileNameForImageAndSize(image As Image, width As UShort, height As UShort) As String
  overload: FarmMaster.Services.ServiceImageManager.GetFileNameForImageAndSize*
  implements:
  - FarmMaster.Services.IServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image,System.UInt16,System.UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceImageManager.ResizeToPhysicalFile(Business.Model.Image,System.UInt16,System.UInt16)
  commentId: M:FarmMaster.Services.ServiceImageManager.ResizeToPhysicalFile(Business.Model.Image,System.UInt16,System.UInt16)
  id: ResizeToPhysicalFile(Business.Model.Image,System.UInt16,System.UInt16)
  parent: FarmMaster.Services.ServiceImageManager
  langs:
  - csharp
  - vb
  name: ResizeToPhysicalFile(Image, UInt16, UInt16)
  nameWithType: ServiceImageManager.ResizeToPhysicalFile(Image, UInt16, UInt16)
  fullName: FarmMaster.Services.ServiceImageManager.ResizeToPhysicalFile(Business.Model.Image, System.UInt16, System.UInt16)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceImageManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ResizeToPhysicalFile
    path: Services/IServiceImageManager.cs
    startLine: 83
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public Task<string> ResizeToPhysicalFile(Image image, ushort width, ushort height)
    parameters:
    - id: image
      type: Business.Model.Image
    - id: width
      type: System.UInt16
    - id: height
      type: System.UInt16
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function ResizeToPhysicalFile(image As Image, width As UShort, height As UShort) As Task(Of String)
  overload: FarmMaster.Services.ServiceImageManager.ResizeToPhysicalFile*
  implements:
  - FarmMaster.Services.IServiceImageManager.ResizeToPhysicalFile(Business.Model.Image,System.UInt16,System.UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceImageManager.GetIdFor(Business.Model.Image)
  commentId: M:FarmMaster.Services.ServiceImageManager.GetIdFor(Business.Model.Image)
  id: GetIdFor(Business.Model.Image)
  parent: FarmMaster.Services.ServiceImageManager
  langs:
  - csharp
  - vb
  name: GetIdFor(Image)
  nameWithType: ServiceImageManager.GetIdFor(Image)
  fullName: FarmMaster.Services.ServiceImageManager.GetIdFor(Business.Model.Image)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceImageManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetIdFor
    path: Services/IServiceImageManager.cs
    startLine: 117
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public int GetIdFor(Image entity)
    parameters:
    - id: entity
      type: Business.Model.Image
    return:
      type: System.Int32
    content.vb: Public Function GetIdFor(entity As Image) As Integer
  overload: FarmMaster.Services.ServiceImageManager.GetIdFor*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.GetIdFor(Business.Model.Image)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceImageManager.Query
  commentId: M:FarmMaster.Services.ServiceImageManager.Query
  id: Query
  parent: FarmMaster.Services.ServiceImageManager
  langs:
  - csharp
  - vb
  name: Query()
  nameWithType: ServiceImageManager.Query()
  fullName: FarmMaster.Services.ServiceImageManager.Query()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceImageManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Query
    path: Services/IServiceImageManager.cs
    startLine: 122
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<Image> Query()
    return:
      type: System.Linq.IQueryable{Business.Model.Image}
    content.vb: Public Function Query As IQueryable(Of Image)
  overload: FarmMaster.Services.ServiceImageManager.Query*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.Query
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceImageManager.QueryAllIncluded
  commentId: M:FarmMaster.Services.ServiceImageManager.QueryAllIncluded
  id: QueryAllIncluded
  parent: FarmMaster.Services.ServiceImageManager
  langs:
  - csharp
  - vb
  name: QueryAllIncluded()
  nameWithType: ServiceImageManager.QueryAllIncluded()
  fullName: FarmMaster.Services.ServiceImageManager.QueryAllIncluded()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceImageManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: QueryAllIncluded
    path: Services/IServiceImageManager.cs
    startLine: 127
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<Image> QueryAllIncluded()
    return:
      type: System.Linq.IQueryable{Business.Model.Image}
    content.vb: Public Function QueryAllIncluded As IQueryable(Of Image)
  overload: FarmMaster.Services.ServiceImageManager.QueryAllIncluded*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.QueryAllIncluded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceImageManager.Update(Business.Model.Image)
  commentId: M:FarmMaster.Services.ServiceImageManager.Update(Business.Model.Image)
  id: Update(Business.Model.Image)
  parent: FarmMaster.Services.ServiceImageManager
  langs:
  - csharp
  - vb
  name: Update(Image)
  nameWithType: ServiceImageManager.Update(Image)
  fullName: FarmMaster.Services.ServiceImageManager.Update(Business.Model.Image)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceImageManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Update
    path: Services/IServiceImageManager.cs
    startLine: 134
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void Update(Image entity)
    parameters:
    - id: entity
      type: Business.Model.Image
    content.vb: Public Sub Update(entity As Image)
  overload: FarmMaster.Services.ServiceImageManager.Update*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.Update(Business.Model.Image)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FarmMaster.Services.IServiceImageManager
  commentId: T:FarmMaster.Services.IServiceImageManager
  parent: FarmMaster.Services
  name: IServiceImageManager
  nameWithType: IServiceImageManager
  fullName: FarmMaster.Services.IServiceImageManager
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}
  commentId: T:FarmMaster.Services.IServiceEntityManager{Business.Model.Image}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<Image>
  nameWithType: IServiceEntityManager<Image>
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.Image>
  nameWithType.vb: IServiceEntityManager(Of Image)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.Image)
  name.vb: IServiceEntityManager(Of Image)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromId<Image>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<Image>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.Image>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of Image)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.Image)(System.Int32)
  name.vb: FromId(Of Image)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId<Image>
    nameWithType: IServiceEntityDataExtentions.FromId<Image>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.Image>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId(Of Image)
    nameWithType: IServiceEntityDataExtentions.FromId(Of Image)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.Image)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromIdAllIncluded<Image>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<Image>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.Image>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of Image)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.Image)(System.Int32)
  name.vb: FromIdAllIncluded(Of Image)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded<Image>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<Image>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.Image>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded(Of Image)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of Image)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.Image)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<Image>()
  nameWithType: IServiceEntityDataExtentions.For<Image>()
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.Image>()
  nameWithType.vb: IServiceEntityDataExtentions.For(Of Image)()
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.Image)()
  name.vb: For(Of Image)()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For<Image>
    nameWithType: IServiceEntityDataExtentions.For<Image>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.Image>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For(Of Image)
    nameWithType: IServiceEntityDataExtentions.For(Of Image)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.Image)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.Services.IServiceEntityManager`1
  commentId: T:FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<T>
  nameWithType: IServiceEntityManager<T>
  fullName: FarmMaster.Services.IServiceEntityManager<T>
  nameWithType.vb: IServiceEntityManager(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T)
  name.vb: IServiceEntityManager(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromId<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromId(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId<T>
    nameWithType: IServiceEntityDataExtentions.FromId<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId(Of T)
    nameWithType: IServiceEntityDataExtentions.FromId(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions
  commentId: T:FarmMaster.Services.IServiceEntityDataExtentions
  parent: FarmMaster.Services
  name: IServiceEntityDataExtentions
  nameWithType: IServiceEntityDataExtentions
  fullName: FarmMaster.Services.IServiceEntityDataExtentions
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded<T>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded(Of T)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<T>(IServiceEntityManager<T>)
  nameWithType: IServiceEntityDataExtentions.For<T>(IServiceEntityManager<T>)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>(FarmMaster.Services.IServiceEntityManager<T>)
  nameWithType.vb: IServiceEntityDataExtentions.For(Of T)(IServiceEntityManager(Of T))
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)(FarmMaster.Services.IServiceEntityManager(Of T))
  name.vb: For(Of T)(IServiceEntityManager(Of T))
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For<T>
    nameWithType: IServiceEntityDataExtentions.For<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For(Of T)
    nameWithType: IServiceEntityDataExtentions.For(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceImageManager.#ctor*
  commentId: Overload:FarmMaster.Services.ServiceImageManager.#ctor
  name: ServiceImageManager
  nameWithType: ServiceImageManager.ServiceImageManager
  fullName: FarmMaster.Services.ServiceImageManager.ServiceImageManager
- uid: Business.Model.FarmMasterContext
  commentId: T:Business.Model.FarmMasterContext
  parent: Business.Model
  name: FarmMasterContext
  nameWithType: FarmMasterContext
  fullName: Business.Model.FarmMasterContext
- uid: Microsoft.AspNetCore.Hosting.IHostingEnvironment
  commentId: T:Microsoft.AspNetCore.Hosting.IHostingEnvironment
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IHostingEnvironment
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: FarmMaster.Services.ServiceImageManager.UploadFromForm*
  commentId: Overload:FarmMaster.Services.ServiceImageManager.UploadFromForm
  name: UploadFromForm
  nameWithType: ServiceImageManager.UploadFromForm
  fullName: FarmMaster.Services.ServiceImageManager.UploadFromForm
- uid: FarmMaster.Services.IServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
  commentId: M:FarmMaster.Services.IServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
  parent: FarmMaster.Services.IServiceImageManager
  isExternal: true
  name: UploadFromForm(IFormFile)
  nameWithType: IServiceImageManager.UploadFromForm(IFormFile)
  fullName: FarmMaster.Services.IServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
    name: UploadFromForm
    nameWithType: IServiceImageManager.UploadFromForm
    fullName: FarmMaster.Services.IServiceImageManager.UploadFromForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceImageManager.UploadFromForm(Microsoft.AspNetCore.Http.IFormFile)
    name: UploadFromForm
    nameWithType: IServiceImageManager.UploadFromForm
    fullName: FarmMaster.Services.IServiceImageManager.UploadFromForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.IFormFile
    name: IFormFile
    nameWithType: IFormFile
    fullName: Microsoft.AspNetCore.Http.IFormFile
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.IFormFile
  commentId: T:Microsoft.AspNetCore.Http.IFormFile
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IFormFile
  nameWithType: IFormFile
  fullName: Microsoft.AspNetCore.Http.IFormFile
- uid: System.Threading.Tasks.Task{Business.Model.Image}
  commentId: T:System.Threading.Tasks.Task{Business.Model.Image}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Image>
  nameWithType: Task<Image>
  fullName: System.Threading.Tasks.Task<Business.Model.Image>
  nameWithType.vb: Task(Of Image)
  fullName.vb: System.Threading.Tasks.Task(Of Business.Model.Image)
  name.vb: Task(Of Image)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FarmMaster.Services.ServiceImageManager.GetFileNameForImageAndSize*
  commentId: Overload:FarmMaster.Services.ServiceImageManager.GetFileNameForImageAndSize
  name: GetFileNameForImageAndSize
  nameWithType: ServiceImageManager.GetFileNameForImageAndSize
  fullName: FarmMaster.Services.ServiceImageManager.GetFileNameForImageAndSize
- uid: FarmMaster.Services.IServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image,System.UInt16,System.UInt16)
  commentId: M:FarmMaster.Services.IServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image,System.UInt16,System.UInt16)
  parent: FarmMaster.Services.IServiceImageManager
  isExternal: true
  name: GetFileNameForImageAndSize(Image, UInt16, UInt16)
  nameWithType: IServiceImageManager.GetFileNameForImageAndSize(Image, UInt16, UInt16)
  fullName: FarmMaster.Services.IServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image, System.UInt16, System.UInt16)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image,System.UInt16,System.UInt16)
    name: GetFileNameForImageAndSize
    nameWithType: IServiceImageManager.GetFileNameForImageAndSize
    fullName: FarmMaster.Services.IServiceImageManager.GetFileNameForImageAndSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceImageManager.GetFileNameForImageAndSize(Business.Model.Image,System.UInt16,System.UInt16)
    name: GetFileNameForImageAndSize
    nameWithType: IServiceImageManager.GetFileNameForImageAndSize
    fullName: FarmMaster.Services.IServiceImageManager.GetFileNameForImageAndSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.Image
  commentId: T:Business.Model.Image
  parent: Business.Model
  name: Image
  nameWithType: Image
  fullName: Business.Model.Image
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FarmMaster.Services.ServiceImageManager.ResizeToPhysicalFile*
  commentId: Overload:FarmMaster.Services.ServiceImageManager.ResizeToPhysicalFile
  name: ResizeToPhysicalFile
  nameWithType: ServiceImageManager.ResizeToPhysicalFile
  fullName: FarmMaster.Services.ServiceImageManager.ResizeToPhysicalFile
- uid: FarmMaster.Services.IServiceImageManager.ResizeToPhysicalFile(Business.Model.Image,System.UInt16,System.UInt16)
  commentId: M:FarmMaster.Services.IServiceImageManager.ResizeToPhysicalFile(Business.Model.Image,System.UInt16,System.UInt16)
  parent: FarmMaster.Services.IServiceImageManager
  isExternal: true
  name: ResizeToPhysicalFile(Image, UInt16, UInt16)
  nameWithType: IServiceImageManager.ResizeToPhysicalFile(Image, UInt16, UInt16)
  fullName: FarmMaster.Services.IServiceImageManager.ResizeToPhysicalFile(Business.Model.Image, System.UInt16, System.UInt16)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceImageManager.ResizeToPhysicalFile(Business.Model.Image,System.UInt16,System.UInt16)
    name: ResizeToPhysicalFile
    nameWithType: IServiceImageManager.ResizeToPhysicalFile
    fullName: FarmMaster.Services.IServiceImageManager.ResizeToPhysicalFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceImageManager.ResizeToPhysicalFile(Business.Model.Image,System.UInt16,System.UInt16)
    name: ResizeToPhysicalFile
    nameWithType: IServiceImageManager.ResizeToPhysicalFile
    fullName: FarmMaster.Services.IServiceImageManager.ResizeToPhysicalFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceImageManager.GetIdFor*
  commentId: Overload:FarmMaster.Services.ServiceImageManager.GetIdFor
  name: GetIdFor
  nameWithType: ServiceImageManager.GetIdFor
  fullName: FarmMaster.Services.ServiceImageManager.GetIdFor
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.GetIdFor(Business.Model.Image)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.GetIdFor(Business.Model.Image)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}
  definition: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(Image)
  nameWithType: IServiceEntityManager<Image>.GetIdFor(Image)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.Image>.GetIdFor(Business.Model.Image)
  nameWithType.vb: IServiceEntityManager(Of Image).GetIdFor(Image)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.Image).GetIdFor(Business.Model.Image)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<Image>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.Image>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of Image).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.Image).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(T)
  nameWithType: IServiceEntityManager<T>.GetIdFor(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor(T)
  nameWithType.vb: IServiceEntityManager(Of T).GetIdFor(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<T>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of T).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceImageManager.Query*
  commentId: Overload:FarmMaster.Services.ServiceImageManager.Query
  name: Query
  nameWithType: ServiceImageManager.Query
  fullName: FarmMaster.Services.ServiceImageManager.Query
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.Query
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}
  definition: FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<Image>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.Image>.Query()
  nameWithType.vb: IServiceEntityManager(Of Image).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.Image).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<Image>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.Image>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of Image).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.Image).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{Business.Model.Image}
  commentId: T:System.Linq.IQueryable{Business.Model.Image}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<Image>
  nameWithType: IQueryable<Image>
  fullName: System.Linq.IQueryable<Business.Model.Image>
  nameWithType.vb: IQueryable(Of Image)
  fullName.vb: System.Linq.IQueryable(Of Business.Model.Image)
  name.vb: IQueryable(Of Image)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<T>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Query()
  nameWithType.vb: IServiceEntityManager(Of T).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<T>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of T).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: FarmMaster.Services.ServiceImageManager.QueryAllIncluded*
  commentId: Overload:FarmMaster.Services.ServiceImageManager.QueryAllIncluded
  name: QueryAllIncluded
  nameWithType: ServiceImageManager.QueryAllIncluded
  fullName: FarmMaster.Services.ServiceImageManager.QueryAllIncluded
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.QueryAllIncluded
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}
  definition: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<Image>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.Image>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of Image).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.Image).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<Image>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.Image>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of Image).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.Image).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<T>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of T).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<T>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of T).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceImageManager.Update*
  commentId: Overload:FarmMaster.Services.ServiceImageManager.Update
  name: Update
  nameWithType: ServiceImageManager.Update
  fullName: FarmMaster.Services.ServiceImageManager.Update
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.Update(Business.Model.Image)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.Image}.Update(Business.Model.Image)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.Image}
  definition: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(Image)
  nameWithType: IServiceEntityManager<Image>.Update(Image)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.Image>.Update(Business.Model.Image)
  nameWithType.vb: IServiceEntityManager(Of Image).Update(Image)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.Image).Update(Business.Model.Image)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<Image>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.Image>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of Image).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.Image).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(T)
  nameWithType: IServiceEntityManager<T>.Update(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Update(T)
  nameWithType.vb: IServiceEntityManager(Of T).Update(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Update(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<T>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of T).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
