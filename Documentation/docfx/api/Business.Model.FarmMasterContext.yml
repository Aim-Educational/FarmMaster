### YamlMime:ManagedReference
items:
- uid: Business.Model.FarmMasterContext
  commentId: T:Business.Model.FarmMasterContext
  id: FarmMasterContext
  parent: Business.Model
  children:
  - Business.Model.FarmMasterContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  - Business.Model.FarmMasterContext.#ctor(System.String)
  - Business.Model.FarmMasterContext.ActionsAgainstContactInfo
  - Business.Model.FarmMasterContext.AnimalCharacteristicLists
  - Business.Model.FarmMasterContext.AnimalCharacteristics
  - Business.Model.FarmMasterContext.AnimalGroups
  - Business.Model.FarmMasterContext.AnimalGroupScripts
  - Business.Model.FarmMasterContext.Animals
  - Business.Model.FarmMasterContext.Breeds
  - Business.Model.FarmMasterContext.Contacts
  - Business.Model.FarmMasterContext.ContactTokens
  - Business.Model.FarmMasterContext.Emails
  - Business.Model.FarmMasterContext.EnumHoldingRegistrations
  - Business.Model.FarmMasterContext.EnumRolePermissions
  - Business.Model.FarmMasterContext.Holdings
  - Business.Model.FarmMasterContext.ImageData
  - Business.Model.FarmMasterContext.Images
  - Business.Model.FarmMasterContext.LifeEventDynamicFieldInfo
  - Business.Model.FarmMasterContext.LifeEventDynamicFieldValues
  - Business.Model.FarmMasterContext.LifeEventEntries
  - Business.Model.FarmMasterContext.LifeEvents
  - Business.Model.FarmMasterContext.MapAnimalToAnimalGroups
  - Business.Model.FarmMasterContext.MapBreedToAnimals
  - Business.Model.FarmMasterContext.MapContactRelationships
  - Business.Model.FarmMasterContext.MapHoldingRegistrationToHoldings
  - Business.Model.FarmMasterContext.MapLifeEventEntryToAnimals
  - Business.Model.FarmMasterContext.MapRolePermissionToRoles
  - Business.Model.FarmMasterContext.MetricRequests
  - Business.Model.FarmMasterContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  - Business.Model.FarmMasterContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Business.Model.FarmMasterContext.Roles
  - Business.Model.FarmMasterContext.Species
  - Business.Model.FarmMasterContext.Telephones
  - Business.Model.FarmMasterContext.UserLoginInfo
  - Business.Model.FarmMasterContext.UserPrivacy
  - Business.Model.FarmMasterContext.Users
  langs:
  - csharp
  - vb
  name: FarmMasterContext
  nameWithType: FarmMasterContext
  fullName: Business.Model.FarmMasterContext
  type: Class
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: FarmMasterContext
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 14
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: 'public class FarmMasterContext : DbContext, IDisposable, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbQueryCache, IDbContextPoolable'
    content.vb: >-
      Public Class FarmMasterContext

          Inherits DbContext

          Implements IDisposable, IInfrastructure(Of IServiceProvider), IDbContextDependencies, IDbSetCache, IDbQueryCache, IDbContextPoolable
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.DbContext
  implements:
  - System.IDisposable
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  - Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
  - Microsoft.EntityFrameworkCore.Internal.IDbSetCache
  - Microsoft.EntityFrameworkCore.Internal.IDbQueryCache
  - Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbQueryCache#GetOrAddQuery(Microsoft.EntityFrameworkCore.Internal.IDbQuerySource,System.Type)
  - Microsoft.EntityFrameworkCore.DbContext.Set``1
  - Microsoft.EntityFrameworkCore.DbContext.Query``1
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetPool(Microsoft.EntityFrameworkCore.Internal.IDbContextPool)
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#Resurrect(Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot)
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ResetState
  - Microsoft.EntityFrameworkCore.DbContext.Dispose
  - Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Database
  - Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  - Microsoft.EntityFrameworkCore.DbContext.Model
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#SetSource
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#QuerySource
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityFinderFactory
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#QueryProvider
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#StateManager
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#ChangeDetector
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityGraphAttacher
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#UpdateLogger
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#InfrastructureLogger
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Business.Model.FarmMasterContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  commentId: M:Business.Model.FarmMasterContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)'
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: FarmMasterContext(DbContextOptions)
  nameWithType: FarmMasterContext.FarmMasterContext(DbContextOptions)
  fullName: Business.Model.FarmMasterContext.FarmMasterContext(Microsoft.EntityFrameworkCore.DbContextOptions)
  type: Constructor
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 19
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public FarmMasterContext(DbContextOptions options)
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions
    content.vb: Public Sub New(options As DbContextOptions)
  overload: Business.Model.FarmMasterContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.#ctor(System.String)
  commentId: M:Business.Model.FarmMasterContext.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: FarmMasterContext(String)
  nameWithType: FarmMasterContext.FarmMasterContext(String)
  fullName: Business.Model.FarmMasterContext.FarmMasterContext(System.String)
  type: Constructor
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 23
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public FarmMasterContext(string connectionString)
    parameters:
    - id: connectionString
      type: System.String
    content.vb: Public Sub New(connectionString As String)
  overload: Business.Model.FarmMasterContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Business.Model.FarmMasterContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  id: OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: FarmMasterContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Business.Model.FarmMasterContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  type: Method
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: OnConfiguring
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 28
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    content.vb: Protected Overrides Sub OnConfiguring(optionsBuilder As DbContextOptionsBuilder)
  overridden: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  overload: Business.Model.FarmMasterContext.OnConfiguring*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Business.Model.FarmMasterContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Business.Model.FarmMasterContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: OnModelCreating(ModelBuilder)
  nameWithType: FarmMasterContext.OnModelCreating(ModelBuilder)
  fullName: Business.Model.FarmMasterContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Method
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: OnModelCreating
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 38
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: protected override void OnModelCreating(ModelBuilder b)
    parameters:
    - id: b
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    content.vb: Protected Overrides Sub OnModelCreating(b As ModelBuilder)
  overridden: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  overload: Business.Model.FarmMasterContext.OnModelCreating*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Business.Model.FarmMasterContext.Users
  commentId: P:Business.Model.FarmMasterContext.Users
  id: Users
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: FarmMasterContext.Users
  fullName: Business.Model.FarmMasterContext.Users
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Users
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 160
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<User> Users { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.User}
    content.vb: Public Property Users As DbSet(Of User)
  overload: Business.Model.FarmMasterContext.Users*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.Contacts
  commentId: P:Business.Model.FarmMasterContext.Contacts
  id: Contacts
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Contacts
  nameWithType: FarmMasterContext.Contacts
  fullName: Business.Model.FarmMasterContext.Contacts
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Contacts
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 161
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<Contact> Contacts { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Contact}
    content.vb: Public Property Contacts As DbSet(Of Contact)
  overload: Business.Model.FarmMasterContext.Contacts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.Telephones
  commentId: P:Business.Model.FarmMasterContext.Telephones
  id: Telephones
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Telephones
  nameWithType: FarmMasterContext.Telephones
  fullName: Business.Model.FarmMasterContext.Telephones
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Telephones
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 162
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<Telephone> Telephones { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Telephone}
    content.vb: Public Property Telephones As DbSet(Of Telephone)
  overload: Business.Model.FarmMasterContext.Telephones*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.EnumRolePermissions
  commentId: P:Business.Model.FarmMasterContext.EnumRolePermissions
  id: EnumRolePermissions
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: EnumRolePermissions
  nameWithType: FarmMasterContext.EnumRolePermissions
  fullName: Business.Model.FarmMasterContext.EnumRolePermissions
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: EnumRolePermissions
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 163
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<EnumRolePermission> EnumRolePermissions { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.EnumRolePermission}
    content.vb: Public Property EnumRolePermissions As DbSet(Of EnumRolePermission)
  overload: Business.Model.FarmMasterContext.EnumRolePermissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.MapRolePermissionToRoles
  commentId: P:Business.Model.FarmMasterContext.MapRolePermissionToRoles
  id: MapRolePermissionToRoles
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: MapRolePermissionToRoles
  nameWithType: FarmMasterContext.MapRolePermissionToRoles
  fullName: Business.Model.FarmMasterContext.MapRolePermissionToRoles
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MapRolePermissionToRoles
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 164
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<MapRolePermissionToRole> MapRolePermissionToRoles { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapRolePermissionToRole}
    content.vb: Public Property MapRolePermissionToRoles As DbSet(Of MapRolePermissionToRole)
  overload: Business.Model.FarmMasterContext.MapRolePermissionToRoles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.Roles
  commentId: P:Business.Model.FarmMasterContext.Roles
  id: Roles
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: FarmMasterContext.Roles
  fullName: Business.Model.FarmMasterContext.Roles
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Roles
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 165
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<Role> Roles { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Role}
    content.vb: Public Property Roles As DbSet(Of Role)
  overload: Business.Model.FarmMasterContext.Roles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.UserLoginInfo
  commentId: P:Business.Model.FarmMasterContext.UserLoginInfo
  id: UserLoginInfo
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: UserLoginInfo
  nameWithType: FarmMasterContext.UserLoginInfo
  fullName: Business.Model.FarmMasterContext.UserLoginInfo
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserLoginInfo
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 166
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<UserLoginInfo> UserLoginInfo { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.UserLoginInfo}
    content.vb: Public Property UserLoginInfo As DbSet(Of UserLoginInfo)
  overload: Business.Model.FarmMasterContext.UserLoginInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.UserPrivacy
  commentId: P:Business.Model.FarmMasterContext.UserPrivacy
  id: UserPrivacy
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: UserPrivacy
  nameWithType: FarmMasterContext.UserPrivacy
  fullName: Business.Model.FarmMasterContext.UserPrivacy
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserPrivacy
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 167
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<UserPrivacy> UserPrivacy { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.UserPrivacy}
    content.vb: Public Property UserPrivacy As DbSet(Of UserPrivacy)
  overload: Business.Model.FarmMasterContext.UserPrivacy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.Emails
  commentId: P:Business.Model.FarmMasterContext.Emails
  id: Emails
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Emails
  nameWithType: FarmMasterContext.Emails
  fullName: Business.Model.FarmMasterContext.Emails
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Emails
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 168
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<Email> Emails { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Email}
    content.vb: Public Property Emails As DbSet(Of Email)
  overload: Business.Model.FarmMasterContext.Emails*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.ActionsAgainstContactInfo
  commentId: P:Business.Model.FarmMasterContext.ActionsAgainstContactInfo
  id: ActionsAgainstContactInfo
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: ActionsAgainstContactInfo
  nameWithType: FarmMasterContext.ActionsAgainstContactInfo
  fullName: Business.Model.FarmMasterContext.ActionsAgainstContactInfo
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ActionsAgainstContactInfo
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 169
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<ActionAgainstContactInfo> ActionsAgainstContactInfo { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.ActionAgainstContactInfo}
    content.vb: Public Property ActionsAgainstContactInfo As DbSet(Of ActionAgainstContactInfo)
  overload: Business.Model.FarmMasterContext.ActionsAgainstContactInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.MapContactRelationships
  commentId: P:Business.Model.FarmMasterContext.MapContactRelationships
  id: MapContactRelationships
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: MapContactRelationships
  nameWithType: FarmMasterContext.MapContactRelationships
  fullName: Business.Model.FarmMasterContext.MapContactRelationships
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MapContactRelationships
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 170
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<MapContactRelationship> MapContactRelationships { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapContactRelationship}
    content.vb: Public Property MapContactRelationships As DbSet(Of MapContactRelationship)
  overload: Business.Model.FarmMasterContext.MapContactRelationships*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.EnumHoldingRegistrations
  commentId: P:Business.Model.FarmMasterContext.EnumHoldingRegistrations
  id: EnumHoldingRegistrations
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: EnumHoldingRegistrations
  nameWithType: FarmMasterContext.EnumHoldingRegistrations
  fullName: Business.Model.FarmMasterContext.EnumHoldingRegistrations
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: EnumHoldingRegistrations
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 171
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<EnumHoldingRegistration> EnumHoldingRegistrations { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.EnumHoldingRegistration}
    content.vb: Public Property EnumHoldingRegistrations As DbSet(Of EnumHoldingRegistration)
  overload: Business.Model.FarmMasterContext.EnumHoldingRegistrations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.Holdings
  commentId: P:Business.Model.FarmMasterContext.Holdings
  id: Holdings
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Holdings
  nameWithType: FarmMasterContext.Holdings
  fullName: Business.Model.FarmMasterContext.Holdings
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Holdings
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 172
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<Holding> Holdings { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Holding}
    content.vb: Public Property Holdings As DbSet(Of Holding)
  overload: Business.Model.FarmMasterContext.Holdings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.MapHoldingRegistrationToHoldings
  commentId: P:Business.Model.FarmMasterContext.MapHoldingRegistrationToHoldings
  id: MapHoldingRegistrationToHoldings
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: MapHoldingRegistrationToHoldings
  nameWithType: FarmMasterContext.MapHoldingRegistrationToHoldings
  fullName: Business.Model.FarmMasterContext.MapHoldingRegistrationToHoldings
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MapHoldingRegistrationToHoldings
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 173
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<MapHoldingRegistrationToHolding> MapHoldingRegistrationToHoldings { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapHoldingRegistrationToHolding}
    content.vb: Public Property MapHoldingRegistrationToHoldings As DbSet(Of MapHoldingRegistrationToHolding)
  overload: Business.Model.FarmMasterContext.MapHoldingRegistrationToHoldings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.Species
  commentId: P:Business.Model.FarmMasterContext.Species
  id: Species
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Species
  nameWithType: FarmMasterContext.Species
  fullName: Business.Model.FarmMasterContext.Species
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Species
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 174
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<Species> Species { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Species}
    content.vb: Public Property Species As DbSet(Of Species)
  overload: Business.Model.FarmMasterContext.Species*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.Breeds
  commentId: P:Business.Model.FarmMasterContext.Breeds
  id: Breeds
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Breeds
  nameWithType: FarmMasterContext.Breeds
  fullName: Business.Model.FarmMasterContext.Breeds
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Breeds
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 175
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<Breed> Breeds { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Breed}
    content.vb: Public Property Breeds As DbSet(Of Breed)
  overload: Business.Model.FarmMasterContext.Breeds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.AnimalCharacteristics
  commentId: P:Business.Model.FarmMasterContext.AnimalCharacteristics
  id: AnimalCharacteristics
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: AnimalCharacteristics
  nameWithType: FarmMasterContext.AnimalCharacteristics
  fullName: Business.Model.FarmMasterContext.AnimalCharacteristics
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AnimalCharacteristics
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 176
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<AnimalCharacteristic> AnimalCharacteristics { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalCharacteristic}
    content.vb: Public Property AnimalCharacteristics As DbSet(Of AnimalCharacteristic)
  overload: Business.Model.FarmMasterContext.AnimalCharacteristics*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.AnimalCharacteristicLists
  commentId: P:Business.Model.FarmMasterContext.AnimalCharacteristicLists
  id: AnimalCharacteristicLists
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: AnimalCharacteristicLists
  nameWithType: FarmMasterContext.AnimalCharacteristicLists
  fullName: Business.Model.FarmMasterContext.AnimalCharacteristicLists
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AnimalCharacteristicLists
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 177
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<AnimalCharacteristicList> AnimalCharacteristicLists { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalCharacteristicList}
    content.vb: Public Property AnimalCharacteristicLists As DbSet(Of AnimalCharacteristicList)
  overload: Business.Model.FarmMasterContext.AnimalCharacteristicLists*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.LifeEvents
  commentId: P:Business.Model.FarmMasterContext.LifeEvents
  id: LifeEvents
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: LifeEvents
  nameWithType: FarmMasterContext.LifeEvents
  fullName: Business.Model.FarmMasterContext.LifeEvents
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: LifeEvents
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 178
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<LifeEvent> LifeEvents { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEvent}
    content.vb: Public Property LifeEvents As DbSet(Of LifeEvent)
  overload: Business.Model.FarmMasterContext.LifeEvents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.LifeEventDynamicFieldInfo
  commentId: P:Business.Model.FarmMasterContext.LifeEventDynamicFieldInfo
  id: LifeEventDynamicFieldInfo
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: LifeEventDynamicFieldInfo
  nameWithType: FarmMasterContext.LifeEventDynamicFieldInfo
  fullName: Business.Model.FarmMasterContext.LifeEventDynamicFieldInfo
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: LifeEventDynamicFieldInfo
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 179
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<LifeEventDynamicFieldInfo> LifeEventDynamicFieldInfo { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEventDynamicFieldInfo}
    content.vb: Public Property LifeEventDynamicFieldInfo As DbSet(Of LifeEventDynamicFieldInfo)
  overload: Business.Model.FarmMasterContext.LifeEventDynamicFieldInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.LifeEventDynamicFieldValues
  commentId: P:Business.Model.FarmMasterContext.LifeEventDynamicFieldValues
  id: LifeEventDynamicFieldValues
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: LifeEventDynamicFieldValues
  nameWithType: FarmMasterContext.LifeEventDynamicFieldValues
  fullName: Business.Model.FarmMasterContext.LifeEventDynamicFieldValues
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: LifeEventDynamicFieldValues
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 180
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<LifeEventDynamicFieldValue> LifeEventDynamicFieldValues { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEventDynamicFieldValue}
    content.vb: Public Property LifeEventDynamicFieldValues As DbSet(Of LifeEventDynamicFieldValue)
  overload: Business.Model.FarmMasterContext.LifeEventDynamicFieldValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.LifeEventEntries
  commentId: P:Business.Model.FarmMasterContext.LifeEventEntries
  id: LifeEventEntries
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: LifeEventEntries
  nameWithType: FarmMasterContext.LifeEventEntries
  fullName: Business.Model.FarmMasterContext.LifeEventEntries
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: LifeEventEntries
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 181
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<LifeEventEntry> LifeEventEntries { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEventEntry}
    content.vb: Public Property LifeEventEntries As DbSet(Of LifeEventEntry)
  overload: Business.Model.FarmMasterContext.LifeEventEntries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.MapLifeEventEntryToAnimals
  commentId: P:Business.Model.FarmMasterContext.MapLifeEventEntryToAnimals
  id: MapLifeEventEntryToAnimals
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: MapLifeEventEntryToAnimals
  nameWithType: FarmMasterContext.MapLifeEventEntryToAnimals
  fullName: Business.Model.FarmMasterContext.MapLifeEventEntryToAnimals
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MapLifeEventEntryToAnimals
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 182
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<MapLifeEventEntryToAnimal> MapLifeEventEntryToAnimals { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapLifeEventEntryToAnimal}
    content.vb: Public Property MapLifeEventEntryToAnimals As DbSet(Of MapLifeEventEntryToAnimal)
  overload: Business.Model.FarmMasterContext.MapLifeEventEntryToAnimals*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.MapBreedToAnimals
  commentId: P:Business.Model.FarmMasterContext.MapBreedToAnimals
  id: MapBreedToAnimals
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: MapBreedToAnimals
  nameWithType: FarmMasterContext.MapBreedToAnimals
  fullName: Business.Model.FarmMasterContext.MapBreedToAnimals
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MapBreedToAnimals
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 183
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<MapBreedToAnimal> MapBreedToAnimals { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapBreedToAnimal}
    content.vb: Public Property MapBreedToAnimals As DbSet(Of MapBreedToAnimal)
  overload: Business.Model.FarmMasterContext.MapBreedToAnimals*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.Animals
  commentId: P:Business.Model.FarmMasterContext.Animals
  id: Animals
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Animals
  nameWithType: FarmMasterContext.Animals
  fullName: Business.Model.FarmMasterContext.Animals
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Animals
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 184
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<Animal> Animals { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Animal}
    content.vb: Public Property Animals As DbSet(Of Animal)
  overload: Business.Model.FarmMasterContext.Animals*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.ContactTokens
  commentId: P:Business.Model.FarmMasterContext.ContactTokens
  id: ContactTokens
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: ContactTokens
  nameWithType: FarmMasterContext.ContactTokens
  fullName: Business.Model.FarmMasterContext.ContactTokens
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ContactTokens
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 185
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<ContactToken> ContactTokens { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.ContactToken}
    content.vb: Public Property ContactTokens As DbSet(Of ContactToken)
  overload: Business.Model.FarmMasterContext.ContactTokens*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.MetricRequests
  commentId: P:Business.Model.FarmMasterContext.MetricRequests
  id: MetricRequests
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: MetricRequests
  nameWithType: FarmMasterContext.MetricRequests
  fullName: Business.Model.FarmMasterContext.MetricRequests
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MetricRequests
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 186
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<MetricRequest> MetricRequests { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MetricRequest}
    content.vb: Public Property MetricRequests As DbSet(Of MetricRequest)
  overload: Business.Model.FarmMasterContext.MetricRequests*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.Images
  commentId: P:Business.Model.FarmMasterContext.Images
  id: Images
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: Images
  nameWithType: FarmMasterContext.Images
  fullName: Business.Model.FarmMasterContext.Images
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Images
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 187
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<Image> Images { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Image}
    content.vb: Public Property Images As DbSet(Of Image)
  overload: Business.Model.FarmMasterContext.Images*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.ImageData
  commentId: P:Business.Model.FarmMasterContext.ImageData
  id: ImageData
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: ImageData
  nameWithType: FarmMasterContext.ImageData
  fullName: Business.Model.FarmMasterContext.ImageData
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ImageData
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 188
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<ImageData> ImageData { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.ImageData}
    content.vb: Public Property ImageData As DbSet(Of ImageData)
  overload: Business.Model.FarmMasterContext.ImageData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.AnimalGroups
  commentId: P:Business.Model.FarmMasterContext.AnimalGroups
  id: AnimalGroups
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: AnimalGroups
  nameWithType: FarmMasterContext.AnimalGroups
  fullName: Business.Model.FarmMasterContext.AnimalGroups
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AnimalGroups
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 189
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<AnimalGroup> AnimalGroups { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalGroup}
    content.vb: Public Property AnimalGroups As DbSet(Of AnimalGroup)
  overload: Business.Model.FarmMasterContext.AnimalGroups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.MapAnimalToAnimalGroups
  commentId: P:Business.Model.FarmMasterContext.MapAnimalToAnimalGroups
  id: MapAnimalToAnimalGroups
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: MapAnimalToAnimalGroups
  nameWithType: FarmMasterContext.MapAnimalToAnimalGroups
  fullName: Business.Model.FarmMasterContext.MapAnimalToAnimalGroups
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MapAnimalToAnimalGroups
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 190
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<MapAnimalToAnimalGroup> MapAnimalToAnimalGroups { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapAnimalToAnimalGroup}
    content.vb: Public Property MapAnimalToAnimalGroups As DbSet(Of MapAnimalToAnimalGroup)
  overload: Business.Model.FarmMasterContext.MapAnimalToAnimalGroups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.FarmMasterContext.AnimalGroupScripts
  commentId: P:Business.Model.FarmMasterContext.AnimalGroupScripts
  id: AnimalGroupScripts
  parent: Business.Model.FarmMasterContext
  langs:
  - csharp
  - vb
  name: AnimalGroupScripts
  nameWithType: FarmMasterContext.AnimalGroupScripts
  fullName: Business.Model.FarmMasterContext.AnimalGroupScripts
  type: Property
  source:
    remote:
      path: Business/Model/FarmMasterContext.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AnimalGroupScripts
    path: ../Business/Model/FarmMasterContext.cs
    startLine: 191
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public DbSet<AnimalGroupScript> AnimalGroupScripts { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalGroupScript}
    content.vb: Public Property AnimalGroupScripts As DbSet(Of AnimalGroupScript)
  overload: Business.Model.FarmMasterContext.AnimalGroupScripts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IServiceProvider>
  nameWithType: IInfrastructure<IServiceProvider>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>
  nameWithType.vb: IInfrastructure(Of IServiceProvider)
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider)
  name.vb: IInfrastructure(Of IServiceProvider)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  name: IDbContextDependencies
  nameWithType: IDbContextDependencies
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetCache
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetCache
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  name: IDbSetCache
  nameWithType: IDbSetCache
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetCache
- uid: Microsoft.EntityFrameworkCore.Internal.IDbQueryCache
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbQueryCache
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  name: IDbQueryCache
  nameWithType: IDbQueryCache
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbQueryCache
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  name: IDbContextPoolable
  nameWithType: IDbContextPoolable
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbSetCache.GetOrAddSet(IDbSetSource, Type)
  nameWithType: DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, Type)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.Type)
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(IDbSetSource, Type)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(IDbSetSource, Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
    name: IDbSetCache.GetOrAddSet
    nameWithType: DbContext.IDbSetCache.GetOrAddSet
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    name: IDbSetSource
    nameWithType: IDbSetSource
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
    name: Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    name: IDbSetSource
    nameWithType: IDbSetSource
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbQueryCache#GetOrAddQuery(Microsoft.EntityFrameworkCore.Internal.IDbQuerySource,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbQueryCache#GetOrAddQuery(Microsoft.EntityFrameworkCore.Internal.IDbQuerySource,System.Type)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbQueryCache.GetOrAddQuery(IDbQuerySource, Type)
  nameWithType: DbContext.IDbQueryCache.GetOrAddQuery(IDbQuerySource, Type)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbQueryCache.GetOrAddQuery(Microsoft.EntityFrameworkCore.Internal.IDbQuerySource, System.Type)
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbQueryCache.GetOrAddQuery(IDbQuerySource, Type)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbQueryCache.GetOrAddQuery(IDbQuerySource, Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbQueryCache#GetOrAddQuery(Microsoft.EntityFrameworkCore.Internal.IDbQuerySource,System.Type)
    name: IDbQueryCache.GetOrAddQuery
    nameWithType: DbContext.IDbQueryCache.GetOrAddQuery
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbQueryCache.GetOrAddQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbQuerySource
    name: IDbQuerySource
    nameWithType: IDbQuerySource
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbQuerySource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbQueryCache#GetOrAddQuery(Microsoft.EntityFrameworkCore.Internal.IDbQuerySource,System.Type)
    name: Microsoft.EntityFrameworkCore.Internal.IDbQueryCache.GetOrAddQuery
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbQueryCache.GetOrAddQuery
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbQueryCache.GetOrAddQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbQuerySource
    name: IDbQuerySource
    nameWithType: IDbQuerySource
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbQuerySource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Set``1
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Set<TEntity>()
  nameWithType: DbContext.Set<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>()
  nameWithType.vb: DbContext.Set(Of TEntity)()
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)()
  name.vb: Set(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set<TEntity>
    nameWithType: DbContext.Set<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set(Of TEntity)
    nameWithType: DbContext.Set(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Query``1
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Query``1
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Query<TQuery>()
  nameWithType: DbContext.Query<TQuery>()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Query<TQuery>()
  nameWithType.vb: DbContext.Query(Of TQuery)()
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Query(Of TQuery)()
  name.vb: Query(Of TQuery)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Query``1
    name: Query<TQuery>
    nameWithType: DbContext.Query<TQuery>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Query<TQuery>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Query``1
    name: Query(Of TQuery)
    nameWithType: DbContext.Query(Of TQuery)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Query(Of TQuery)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChanges(Boolean)
  nameWithType: DbContext.SaveChanges(Boolean)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesAsync(CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesAsync(Boolean, CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetPool(Microsoft.EntityFrameworkCore.Internal.IDbContextPool)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetPool(Microsoft.EntityFrameworkCore.Internal.IDbContextPool)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextPoolable.SetPool(IDbContextPool)
  nameWithType: DbContext.IDbContextPoolable.SetPool(IDbContextPool)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool(Microsoft.EntityFrameworkCore.Internal.IDbContextPool)
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool(IDbContextPool)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool(IDbContextPool)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetPool(Microsoft.EntityFrameworkCore.Internal.IDbContextPool)
    name: IDbContextPoolable.SetPool
    nameWithType: DbContext.IDbContextPoolable.SetPool
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbContextPool
    name: IDbContextPool
    nameWithType: IDbContextPool
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextPool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetPool(Microsoft.EntityFrameworkCore.Internal.IDbContextPool)
    name: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbContextPool
    name: IDbContextPool
    nameWithType: IDbContextPool
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextPool
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextPoolable.SnapshotConfiguration()
  nameWithType: DbContext.IDbContextPoolable.SnapshotConfiguration()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration()
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration()
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
    name: IDbContextPoolable.SnapshotConfiguration
    nameWithType: DbContext.IDbContextPoolable.SnapshotConfiguration
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
    name: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#Resurrect(Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#Resurrect(Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextPoolable.Resurrect(DbContextPoolConfigurationSnapshot)
  nameWithType: DbContext.IDbContextPoolable.Resurrect(DbContextPoolConfigurationSnapshot)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect(Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot)
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect(DbContextPoolConfigurationSnapshot)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect(DbContextPoolConfigurationSnapshot)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#Resurrect(Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot)
    name: IDbContextPoolable.Resurrect
    nameWithType: DbContext.IDbContextPoolable.Resurrect
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot
    name: DbContextPoolConfigurationSnapshot
    nameWithType: DbContextPoolConfigurationSnapshot
    fullName: Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#Resurrect(Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot)
    name: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot
    name: DbContextPoolConfigurationSnapshot
    nameWithType: DbContextPoolConfigurationSnapshot
    fullName: Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ResetState
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ResetState
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextPoolable.ResetState()
  nameWithType: DbContext.IDbContextPoolable.ResetState()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ResetState()
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ResetState()
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ResetState()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ResetState
    name: IDbContextPoolable.ResetState
    nameWithType: DbContext.IDbContextPoolable.ResetState
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ResetState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ResetState
    name: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ResetState
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ResetState
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ResetState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Dispose
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Dispose()
  nameWithType: DbContext.Dispose()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Entry(Object)
  nameWithType: DbContext.Entry(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add<TEntity>
    nameWithType: DbContext.Add<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add(Of TEntity)
    nameWithType: DbContext.Add(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync<TEntity>
    nameWithType: DbContext.AddAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync(Of TEntity)
    nameWithType: DbContext.AddAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach<TEntity>
    nameWithType: DbContext.Attach<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach(Of TEntity)
    nameWithType: DbContext.Attach(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update<TEntity>
    nameWithType: DbContext.Update<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update(Of TEntity)
    nameWithType: DbContext.Update(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove<TEntity>
    nameWithType: DbContext.Remove<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove(Of TEntity)
    nameWithType: DbContext.Remove(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Add(Object)
  nameWithType: DbContext.Add(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    nameWithType: DbContext.Add
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    nameWithType: DbContext.Add
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddAsync(Object, CancellationToken)
  nameWithType: DbContext.AddAsync(Object, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    nameWithType: DbContext.AddAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    nameWithType: DbContext.AddAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Attach(Object)
  nameWithType: DbContext.Attach(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    nameWithType: DbContext.Attach
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    nameWithType: DbContext.Attach
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Update(Object)
  nameWithType: DbContext.Update(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    nameWithType: DbContext.Update
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    nameWithType: DbContext.Update
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Remove(Object)
  nameWithType: DbContext.Remove(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    nameWithType: DbContext.Remove
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    nameWithType: DbContext.Remove
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRange(Object[])
  nameWithType: DbContext.AddRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  nameWithType.vb: DbContext.AddRange(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object())
  name.vb: AddRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRangeAsync(Object[])
  nameWithType: DbContext.AddRangeAsync(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  nameWithType.vb: DbContext.AddRangeAsync(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object())
  name.vb: AddRangeAsync(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AttachRange(Object[])
  nameWithType: DbContext.AttachRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  nameWithType.vb: DbContext.AttachRange(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object())
  name.vb: AttachRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: UpdateRange(Object[])
  nameWithType: DbContext.UpdateRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  nameWithType.vb: DbContext.UpdateRange(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object())
  name.vb: UpdateRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: RemoveRange(Object[])
  nameWithType: DbContext.RemoveRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  nameWithType.vb: DbContext.RemoveRange(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object())
  name.vb: RemoveRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRange(IEnumerable<Object>)
  nameWithType: DbContext.AddRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.AddRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AddRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRangeAsync(IEnumerable<Object>, CancellationToken)
  nameWithType: DbContext.AddRangeAsync(IEnumerable<Object>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable(Of System.Object), System.Threading.CancellationToken)
  name.vb: AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AttachRange(IEnumerable<Object>)
  nameWithType: DbContext.AttachRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.AttachRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AttachRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: UpdateRange(IEnumerable<Object>)
  nameWithType: DbContext.UpdateRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.UpdateRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: UpdateRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: RemoveRange(IEnumerable<Object>)
  nameWithType: DbContext.RemoveRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.RemoveRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: RemoveRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Find(Type, Object[])
  nameWithType: DbContext.Find(Type, Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[])
  nameWithType.vb: DbContext.Find(Type, Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object())
  name.vb: Find(Type, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    nameWithType: DbContext.Find
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    nameWithType: DbContext.Find
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync(Type, Object[])
  nameWithType: DbContext.FindAsync(Type, Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[])
  nameWithType.vb: DbContext.FindAsync(Type, Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object())
  name.vb: FindAsync(Type, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync(Type, Object[], CancellationToken)
  nameWithType: DbContext.FindAsync(Type, Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Type, Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Type, Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Find<TEntity>(Object[])
  nameWithType: DbContext.Find<TEntity>(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[])
  nameWithType.vb: DbContext.Find(Of TEntity)(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Find(Of TEntity)(System.Object())
  name.vb: Find(Of TEntity)(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find<TEntity>
    nameWithType: DbContext.Find<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find(Of TEntity)
    nameWithType: DbContext.Find(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync<TEntity>(Object[])
  nameWithType: DbContext.FindAsync<TEntity>(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[])
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(System.Object())
  name.vb: FindAsync(Of TEntity)(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync<TEntity>
    nameWithType: DbContext.FindAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync(Of TEntity)
    nameWithType: DbContext.FindAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync<TEntity>(Object[], CancellationToken)
  nameWithType: DbContext.FindAsync<TEntity>(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Of TEntity)(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync<TEntity>
    nameWithType: DbContext.FindAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync(Of TEntity)
    nameWithType: DbContext.FindAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Database
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Database
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Database
  nameWithType: DbContext.Database
  fullName: Microsoft.EntityFrameworkCore.DbContext.Database
- uid: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: ChangeTracker
  nameWithType: DbContext.ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.DbContext.Model
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Model
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Model
  nameWithType: DbContext.Model
  fullName: Microsoft.EntityFrameworkCore.DbContext.Model
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#SetSource
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#SetSource
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.SetSource
  nameWithType: DbContext.IDbContextDependencies.SetSource
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#QuerySource
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#QuerySource
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.QuerySource
  nameWithType: DbContext.IDbContextDependencies.QuerySource
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QuerySource
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QuerySource
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QuerySource
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityFinderFactory
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityFinderFactory
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.EntityFinderFactory
  nameWithType: DbContext.IDbContextDependencies.EntityFinderFactory
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#QueryProvider
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#QueryProvider
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.QueryProvider
  nameWithType: DbContext.IDbContextDependencies.QueryProvider
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#StateManager
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#StateManager
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.StateManager
  nameWithType: DbContext.IDbContextDependencies.StateManager
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#ChangeDetector
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#ChangeDetector
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.ChangeDetector
  nameWithType: DbContext.IDbContextDependencies.ChangeDetector
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityGraphAttacher
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityGraphAttacher
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.EntityGraphAttacher
  nameWithType: DbContext.IDbContextDependencies.EntityGraphAttacher
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#UpdateLogger
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#UpdateLogger
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.UpdateLogger
  nameWithType: DbContext.IDbContextDependencies.UpdateLogger
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#InfrastructureLogger
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#InfrastructureLogger
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.InfrastructureLogger
  nameWithType: DbContext.IDbContextDependencies.InfrastructureLogger
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IInfrastructure<IServiceProvider>.Instance
  nameWithType: DbContext.IInfrastructure<IServiceProvider>.Instance
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: true
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  isExternal: true
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  isExternal: true
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add<TEntity>
    nameWithType: DbContext.Add<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add(Of TEntity)
    nameWithType: DbContext.Add(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync<TEntity>
    nameWithType: DbContext.AddAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync(Of TEntity)
    nameWithType: DbContext.AddAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  isExternal: true
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach<TEntity>
    nameWithType: DbContext.Attach<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach(Of TEntity)
    nameWithType: DbContext.Attach(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  isExternal: true
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update<TEntity>
    nameWithType: DbContext.Update<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update(Of TEntity)
    nameWithType: DbContext.Update(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  isExternal: true
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove<TEntity>
    nameWithType: DbContext.Remove<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove(Of TEntity)
    nameWithType: DbContext.Remove(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.#ctor*
  commentId: Overload:Business.Model.FarmMasterContext.#ctor
  name: FarmMasterContext
  nameWithType: FarmMasterContext.FarmMasterContext
  fullName: Business.Model.FarmMasterContext.FarmMasterContext
- uid: Microsoft.EntityFrameworkCore.DbContextOptions
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptions
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  name: DbContextOptions
  nameWithType: DbContextOptions
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: DbContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    nameWithType: DbContext.OnConfiguring
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    nameWithType: DbContext.OnConfiguring
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.OnConfiguring*
  commentId: Overload:Business.Model.FarmMasterContext.OnConfiguring
  name: OnConfiguring
  nameWithType: FarmMasterContext.OnConfiguring
  fullName: Business.Model.FarmMasterContext.OnConfiguring
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
- uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: OnModelCreating(ModelBuilder)
  nameWithType: DbContext.OnModelCreating(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: DbContext.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: DbContext.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.OnModelCreating*
  commentId: Overload:Business.Model.FarmMasterContext.OnModelCreating
  name: OnModelCreating
  nameWithType: FarmMasterContext.OnModelCreating
  fullName: Business.Model.FarmMasterContext.OnModelCreating
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
- uid: Business.Model.FarmMasterContext.Users*
  commentId: Overload:Business.Model.FarmMasterContext.Users
  name: Users
  nameWithType: FarmMasterContext.Users
  fullName: Business.Model.FarmMasterContext.Users
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.User}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.User}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<User>
  nameWithType: DbSet<User>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.User>
  nameWithType.vb: DbSet(Of User)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.User)
  name.vb: DbSet(Of User)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: true
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.Contacts*
  commentId: Overload:Business.Model.FarmMasterContext.Contacts
  name: Contacts
  nameWithType: FarmMasterContext.Contacts
  fullName: Business.Model.FarmMasterContext.Contacts
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Contact}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.Contact}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Contact>
  nameWithType: DbSet<Contact>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.Contact>
  nameWithType.vb: DbSet(Of Contact)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.Contact)
  name.vb: DbSet(Of Contact)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Contact
    name: Contact
    nameWithType: Contact
    fullName: Business.Model.Contact
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Contact
    name: Contact
    nameWithType: Contact
    fullName: Business.Model.Contact
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.Telephones*
  commentId: Overload:Business.Model.FarmMasterContext.Telephones
  name: Telephones
  nameWithType: FarmMasterContext.Telephones
  fullName: Business.Model.FarmMasterContext.Telephones
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Telephone}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.Telephone}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Telephone>
  nameWithType: DbSet<Telephone>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.Telephone>
  nameWithType.vb: DbSet(Of Telephone)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.Telephone)
  name.vb: DbSet(Of Telephone)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Telephone
    name: Telephone
    nameWithType: Telephone
    fullName: Business.Model.Telephone
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Telephone
    name: Telephone
    nameWithType: Telephone
    fullName: Business.Model.Telephone
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.EnumRolePermissions*
  commentId: Overload:Business.Model.FarmMasterContext.EnumRolePermissions
  name: EnumRolePermissions
  nameWithType: FarmMasterContext.EnumRolePermissions
  fullName: Business.Model.FarmMasterContext.EnumRolePermissions
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.EnumRolePermission}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.EnumRolePermission}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<EnumRolePermission>
  nameWithType: DbSet<EnumRolePermission>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.EnumRolePermission>
  nameWithType.vb: DbSet(Of EnumRolePermission)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.EnumRolePermission)
  name.vb: DbSet(Of EnumRolePermission)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.EnumRolePermission
    name: EnumRolePermission
    nameWithType: EnumRolePermission
    fullName: Business.Model.EnumRolePermission
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.EnumRolePermission
    name: EnumRolePermission
    nameWithType: EnumRolePermission
    fullName: Business.Model.EnumRolePermission
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.MapRolePermissionToRoles*
  commentId: Overload:Business.Model.FarmMasterContext.MapRolePermissionToRoles
  name: MapRolePermissionToRoles
  nameWithType: FarmMasterContext.MapRolePermissionToRoles
  fullName: Business.Model.FarmMasterContext.MapRolePermissionToRoles
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapRolePermissionToRole}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapRolePermissionToRole}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<MapRolePermissionToRole>
  nameWithType: DbSet<MapRolePermissionToRole>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.MapRolePermissionToRole>
  nameWithType.vb: DbSet(Of MapRolePermissionToRole)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.MapRolePermissionToRole)
  name.vb: DbSet(Of MapRolePermissionToRole)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.MapRolePermissionToRole
    name: MapRolePermissionToRole
    nameWithType: MapRolePermissionToRole
    fullName: Business.Model.MapRolePermissionToRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.MapRolePermissionToRole
    name: MapRolePermissionToRole
    nameWithType: MapRolePermissionToRole
    fullName: Business.Model.MapRolePermissionToRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.Roles*
  commentId: Overload:Business.Model.FarmMasterContext.Roles
  name: Roles
  nameWithType: FarmMasterContext.Roles
  fullName: Business.Model.FarmMasterContext.Roles
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Role}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.Role}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Role>
  nameWithType: DbSet<Role>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.Role>
  nameWithType.vb: DbSet(Of Role)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.Role)
  name.vb: DbSet(Of Role)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Role
    name: Role
    nameWithType: Role
    fullName: Business.Model.Role
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Role
    name: Role
    nameWithType: Role
    fullName: Business.Model.Role
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.UserLoginInfo*
  commentId: Overload:Business.Model.FarmMasterContext.UserLoginInfo
  name: UserLoginInfo
  nameWithType: FarmMasterContext.UserLoginInfo
  fullName: Business.Model.FarmMasterContext.UserLoginInfo
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.UserLoginInfo}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.UserLoginInfo}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<UserLoginInfo>
  nameWithType: DbSet<UserLoginInfo>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.UserLoginInfo>
  nameWithType.vb: DbSet(Of UserLoginInfo)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.UserLoginInfo)
  name.vb: DbSet(Of UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Business.Model.UserLoginInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Business.Model.UserLoginInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.UserPrivacy*
  commentId: Overload:Business.Model.FarmMasterContext.UserPrivacy
  name: UserPrivacy
  nameWithType: FarmMasterContext.UserPrivacy
  fullName: Business.Model.FarmMasterContext.UserPrivacy
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.UserPrivacy}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.UserPrivacy}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<UserPrivacy>
  nameWithType: DbSet<UserPrivacy>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.UserPrivacy>
  nameWithType.vb: DbSet(Of UserPrivacy)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.UserPrivacy)
  name.vb: DbSet(Of UserPrivacy)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.UserPrivacy
    name: UserPrivacy
    nameWithType: UserPrivacy
    fullName: Business.Model.UserPrivacy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.UserPrivacy
    name: UserPrivacy
    nameWithType: UserPrivacy
    fullName: Business.Model.UserPrivacy
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.Emails*
  commentId: Overload:Business.Model.FarmMasterContext.Emails
  name: Emails
  nameWithType: FarmMasterContext.Emails
  fullName: Business.Model.FarmMasterContext.Emails
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Email}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.Email}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Email>
  nameWithType: DbSet<Email>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.Email>
  nameWithType.vb: DbSet(Of Email)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.Email)
  name.vb: DbSet(Of Email)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Email
    name: Email
    nameWithType: Email
    fullName: Business.Model.Email
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Email
    name: Email
    nameWithType: Email
    fullName: Business.Model.Email
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.ActionsAgainstContactInfo*
  commentId: Overload:Business.Model.FarmMasterContext.ActionsAgainstContactInfo
  name: ActionsAgainstContactInfo
  nameWithType: FarmMasterContext.ActionsAgainstContactInfo
  fullName: Business.Model.FarmMasterContext.ActionsAgainstContactInfo
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.ActionAgainstContactInfo}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.ActionAgainstContactInfo}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<ActionAgainstContactInfo>
  nameWithType: DbSet<ActionAgainstContactInfo>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.ActionAgainstContactInfo>
  nameWithType.vb: DbSet(Of ActionAgainstContactInfo)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.ActionAgainstContactInfo)
  name.vb: DbSet(Of ActionAgainstContactInfo)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.ActionAgainstContactInfo
    name: ActionAgainstContactInfo
    nameWithType: ActionAgainstContactInfo
    fullName: Business.Model.ActionAgainstContactInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.ActionAgainstContactInfo
    name: ActionAgainstContactInfo
    nameWithType: ActionAgainstContactInfo
    fullName: Business.Model.ActionAgainstContactInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.MapContactRelationships*
  commentId: Overload:Business.Model.FarmMasterContext.MapContactRelationships
  name: MapContactRelationships
  nameWithType: FarmMasterContext.MapContactRelationships
  fullName: Business.Model.FarmMasterContext.MapContactRelationships
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapContactRelationship}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapContactRelationship}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<MapContactRelationship>
  nameWithType: DbSet<MapContactRelationship>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.MapContactRelationship>
  nameWithType.vb: DbSet(Of MapContactRelationship)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.MapContactRelationship)
  name.vb: DbSet(Of MapContactRelationship)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.MapContactRelationship
    name: MapContactRelationship
    nameWithType: MapContactRelationship
    fullName: Business.Model.MapContactRelationship
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.MapContactRelationship
    name: MapContactRelationship
    nameWithType: MapContactRelationship
    fullName: Business.Model.MapContactRelationship
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.EnumHoldingRegistrations*
  commentId: Overload:Business.Model.FarmMasterContext.EnumHoldingRegistrations
  name: EnumHoldingRegistrations
  nameWithType: FarmMasterContext.EnumHoldingRegistrations
  fullName: Business.Model.FarmMasterContext.EnumHoldingRegistrations
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.EnumHoldingRegistration}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.EnumHoldingRegistration}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<EnumHoldingRegistration>
  nameWithType: DbSet<EnumHoldingRegistration>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.EnumHoldingRegistration>
  nameWithType.vb: DbSet(Of EnumHoldingRegistration)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.EnumHoldingRegistration)
  name.vb: DbSet(Of EnumHoldingRegistration)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.EnumHoldingRegistration
    name: EnumHoldingRegistration
    nameWithType: EnumHoldingRegistration
    fullName: Business.Model.EnumHoldingRegistration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.EnumHoldingRegistration
    name: EnumHoldingRegistration
    nameWithType: EnumHoldingRegistration
    fullName: Business.Model.EnumHoldingRegistration
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.Holdings*
  commentId: Overload:Business.Model.FarmMasterContext.Holdings
  name: Holdings
  nameWithType: FarmMasterContext.Holdings
  fullName: Business.Model.FarmMasterContext.Holdings
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Holding}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.Holding}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Holding>
  nameWithType: DbSet<Holding>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.Holding>
  nameWithType.vb: DbSet(Of Holding)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.Holding)
  name.vb: DbSet(Of Holding)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Holding
    name: Holding
    nameWithType: Holding
    fullName: Business.Model.Holding
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Holding
    name: Holding
    nameWithType: Holding
    fullName: Business.Model.Holding
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.MapHoldingRegistrationToHoldings*
  commentId: Overload:Business.Model.FarmMasterContext.MapHoldingRegistrationToHoldings
  name: MapHoldingRegistrationToHoldings
  nameWithType: FarmMasterContext.MapHoldingRegistrationToHoldings
  fullName: Business.Model.FarmMasterContext.MapHoldingRegistrationToHoldings
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapHoldingRegistrationToHolding}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapHoldingRegistrationToHolding}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<MapHoldingRegistrationToHolding>
  nameWithType: DbSet<MapHoldingRegistrationToHolding>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.MapHoldingRegistrationToHolding>
  nameWithType.vb: DbSet(Of MapHoldingRegistrationToHolding)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.MapHoldingRegistrationToHolding)
  name.vb: DbSet(Of MapHoldingRegistrationToHolding)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.MapHoldingRegistrationToHolding
    name: MapHoldingRegistrationToHolding
    nameWithType: MapHoldingRegistrationToHolding
    fullName: Business.Model.MapHoldingRegistrationToHolding
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.MapHoldingRegistrationToHolding
    name: MapHoldingRegistrationToHolding
    nameWithType: MapHoldingRegistrationToHolding
    fullName: Business.Model.MapHoldingRegistrationToHolding
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.Species*
  commentId: Overload:Business.Model.FarmMasterContext.Species
  name: Species
  nameWithType: FarmMasterContext.Species
  fullName: Business.Model.FarmMasterContext.Species
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Species}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.Species}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Species>
  nameWithType: DbSet<Species>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.Species>
  nameWithType.vb: DbSet(Of Species)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.Species)
  name.vb: DbSet(Of Species)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Species
    name: Species
    nameWithType: Species
    fullName: Business.Model.Species
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Species
    name: Species
    nameWithType: Species
    fullName: Business.Model.Species
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.Breeds*
  commentId: Overload:Business.Model.FarmMasterContext.Breeds
  name: Breeds
  nameWithType: FarmMasterContext.Breeds
  fullName: Business.Model.FarmMasterContext.Breeds
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Breed}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.Breed}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Breed>
  nameWithType: DbSet<Breed>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.Breed>
  nameWithType.vb: DbSet(Of Breed)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.Breed)
  name.vb: DbSet(Of Breed)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Breed
    name: Breed
    nameWithType: Breed
    fullName: Business.Model.Breed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Breed
    name: Breed
    nameWithType: Breed
    fullName: Business.Model.Breed
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.AnimalCharacteristics*
  commentId: Overload:Business.Model.FarmMasterContext.AnimalCharacteristics
  name: AnimalCharacteristics
  nameWithType: FarmMasterContext.AnimalCharacteristics
  fullName: Business.Model.FarmMasterContext.AnimalCharacteristics
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalCharacteristic}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalCharacteristic}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AnimalCharacteristic>
  nameWithType: DbSet<AnimalCharacteristic>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.AnimalCharacteristic>
  nameWithType.vb: DbSet(Of AnimalCharacteristic)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.AnimalCharacteristic)
  name.vb: DbSet(Of AnimalCharacteristic)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalCharacteristic
    name: AnimalCharacteristic
    nameWithType: AnimalCharacteristic
    fullName: Business.Model.AnimalCharacteristic
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.AnimalCharacteristicLists*
  commentId: Overload:Business.Model.FarmMasterContext.AnimalCharacteristicLists
  name: AnimalCharacteristicLists
  nameWithType: FarmMasterContext.AnimalCharacteristicLists
  fullName: Business.Model.FarmMasterContext.AnimalCharacteristicLists
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalCharacteristicList}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalCharacteristicList}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AnimalCharacteristicList>
  nameWithType: DbSet<AnimalCharacteristicList>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.AnimalCharacteristicList>
  nameWithType.vb: DbSet(Of AnimalCharacteristicList)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.AnimalCharacteristicList)
  name.vb: DbSet(Of AnimalCharacteristicList)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalCharacteristicList
    name: AnimalCharacteristicList
    nameWithType: AnimalCharacteristicList
    fullName: Business.Model.AnimalCharacteristicList
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalCharacteristicList
    name: AnimalCharacteristicList
    nameWithType: AnimalCharacteristicList
    fullName: Business.Model.AnimalCharacteristicList
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.LifeEvents*
  commentId: Overload:Business.Model.FarmMasterContext.LifeEvents
  name: LifeEvents
  nameWithType: FarmMasterContext.LifeEvents
  fullName: Business.Model.FarmMasterContext.LifeEvents
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEvent}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEvent}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<LifeEvent>
  nameWithType: DbSet<LifeEvent>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.LifeEvent>
  nameWithType.vb: DbSet(Of LifeEvent)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.LifeEvent)
  name.vb: DbSet(Of LifeEvent)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.LifeEvent
    name: LifeEvent
    nameWithType: LifeEvent
    fullName: Business.Model.LifeEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.LifeEvent
    name: LifeEvent
    nameWithType: LifeEvent
    fullName: Business.Model.LifeEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.LifeEventDynamicFieldInfo*
  commentId: Overload:Business.Model.FarmMasterContext.LifeEventDynamicFieldInfo
  name: LifeEventDynamicFieldInfo
  nameWithType: FarmMasterContext.LifeEventDynamicFieldInfo
  fullName: Business.Model.FarmMasterContext.LifeEventDynamicFieldInfo
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEventDynamicFieldInfo}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEventDynamicFieldInfo}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<LifeEventDynamicFieldInfo>
  nameWithType: DbSet<LifeEventDynamicFieldInfo>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.LifeEventDynamicFieldInfo>
  nameWithType.vb: DbSet(Of LifeEventDynamicFieldInfo)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.LifeEventDynamicFieldInfo)
  name.vb: DbSet(Of LifeEventDynamicFieldInfo)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.LifeEventDynamicFieldInfo
    name: LifeEventDynamicFieldInfo
    nameWithType: LifeEventDynamicFieldInfo
    fullName: Business.Model.LifeEventDynamicFieldInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.LifeEventDynamicFieldInfo
    name: LifeEventDynamicFieldInfo
    nameWithType: LifeEventDynamicFieldInfo
    fullName: Business.Model.LifeEventDynamicFieldInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.LifeEventDynamicFieldValues*
  commentId: Overload:Business.Model.FarmMasterContext.LifeEventDynamicFieldValues
  name: LifeEventDynamicFieldValues
  nameWithType: FarmMasterContext.LifeEventDynamicFieldValues
  fullName: Business.Model.FarmMasterContext.LifeEventDynamicFieldValues
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEventDynamicFieldValue}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEventDynamicFieldValue}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<LifeEventDynamicFieldValue>
  nameWithType: DbSet<LifeEventDynamicFieldValue>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.LifeEventDynamicFieldValue>
  nameWithType.vb: DbSet(Of LifeEventDynamicFieldValue)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.LifeEventDynamicFieldValue)
  name.vb: DbSet(Of LifeEventDynamicFieldValue)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.LifeEventDynamicFieldValue
    name: LifeEventDynamicFieldValue
    nameWithType: LifeEventDynamicFieldValue
    fullName: Business.Model.LifeEventDynamicFieldValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.LifeEventDynamicFieldValue
    name: LifeEventDynamicFieldValue
    nameWithType: LifeEventDynamicFieldValue
    fullName: Business.Model.LifeEventDynamicFieldValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.LifeEventEntries*
  commentId: Overload:Business.Model.FarmMasterContext.LifeEventEntries
  name: LifeEventEntries
  nameWithType: FarmMasterContext.LifeEventEntries
  fullName: Business.Model.FarmMasterContext.LifeEventEntries
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEventEntry}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.LifeEventEntry}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<LifeEventEntry>
  nameWithType: DbSet<LifeEventEntry>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.LifeEventEntry>
  nameWithType.vb: DbSet(Of LifeEventEntry)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.LifeEventEntry)
  name.vb: DbSet(Of LifeEventEntry)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.LifeEventEntry
    name: LifeEventEntry
    nameWithType: LifeEventEntry
    fullName: Business.Model.LifeEventEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.LifeEventEntry
    name: LifeEventEntry
    nameWithType: LifeEventEntry
    fullName: Business.Model.LifeEventEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.MapLifeEventEntryToAnimals*
  commentId: Overload:Business.Model.FarmMasterContext.MapLifeEventEntryToAnimals
  name: MapLifeEventEntryToAnimals
  nameWithType: FarmMasterContext.MapLifeEventEntryToAnimals
  fullName: Business.Model.FarmMasterContext.MapLifeEventEntryToAnimals
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapLifeEventEntryToAnimal}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapLifeEventEntryToAnimal}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<MapLifeEventEntryToAnimal>
  nameWithType: DbSet<MapLifeEventEntryToAnimal>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.MapLifeEventEntryToAnimal>
  nameWithType.vb: DbSet(Of MapLifeEventEntryToAnimal)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.MapLifeEventEntryToAnimal)
  name.vb: DbSet(Of MapLifeEventEntryToAnimal)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.MapLifeEventEntryToAnimal
    name: MapLifeEventEntryToAnimal
    nameWithType: MapLifeEventEntryToAnimal
    fullName: Business.Model.MapLifeEventEntryToAnimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.MapLifeEventEntryToAnimal
    name: MapLifeEventEntryToAnimal
    nameWithType: MapLifeEventEntryToAnimal
    fullName: Business.Model.MapLifeEventEntryToAnimal
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.MapBreedToAnimals*
  commentId: Overload:Business.Model.FarmMasterContext.MapBreedToAnimals
  name: MapBreedToAnimals
  nameWithType: FarmMasterContext.MapBreedToAnimals
  fullName: Business.Model.FarmMasterContext.MapBreedToAnimals
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapBreedToAnimal}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapBreedToAnimal}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<MapBreedToAnimal>
  nameWithType: DbSet<MapBreedToAnimal>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.MapBreedToAnimal>
  nameWithType.vb: DbSet(Of MapBreedToAnimal)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.MapBreedToAnimal)
  name.vb: DbSet(Of MapBreedToAnimal)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.MapBreedToAnimal
    name: MapBreedToAnimal
    nameWithType: MapBreedToAnimal
    fullName: Business.Model.MapBreedToAnimal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.MapBreedToAnimal
    name: MapBreedToAnimal
    nameWithType: MapBreedToAnimal
    fullName: Business.Model.MapBreedToAnimal
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.Animals*
  commentId: Overload:Business.Model.FarmMasterContext.Animals
  name: Animals
  nameWithType: FarmMasterContext.Animals
  fullName: Business.Model.FarmMasterContext.Animals
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Animal}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.Animal}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Animal>
  nameWithType: DbSet<Animal>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.Animal>
  nameWithType.vb: DbSet(Of Animal)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.Animal)
  name.vb: DbSet(Of Animal)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Animal
    name: Animal
    nameWithType: Animal
    fullName: Business.Model.Animal
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.ContactTokens*
  commentId: Overload:Business.Model.FarmMasterContext.ContactTokens
  name: ContactTokens
  nameWithType: FarmMasterContext.ContactTokens
  fullName: Business.Model.FarmMasterContext.ContactTokens
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.ContactToken}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.ContactToken}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<ContactToken>
  nameWithType: DbSet<ContactToken>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.ContactToken>
  nameWithType.vb: DbSet(Of ContactToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.ContactToken)
  name.vb: DbSet(Of ContactToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.ContactToken
    name: ContactToken
    nameWithType: ContactToken
    fullName: Business.Model.ContactToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.ContactToken
    name: ContactToken
    nameWithType: ContactToken
    fullName: Business.Model.ContactToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.MetricRequests*
  commentId: Overload:Business.Model.FarmMasterContext.MetricRequests
  name: MetricRequests
  nameWithType: FarmMasterContext.MetricRequests
  fullName: Business.Model.FarmMasterContext.MetricRequests
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MetricRequest}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.MetricRequest}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<MetricRequest>
  nameWithType: DbSet<MetricRequest>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.MetricRequest>
  nameWithType.vb: DbSet(Of MetricRequest)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.MetricRequest)
  name.vb: DbSet(Of MetricRequest)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.MetricRequest
    name: MetricRequest
    nameWithType: MetricRequest
    fullName: Business.Model.MetricRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.MetricRequest
    name: MetricRequest
    nameWithType: MetricRequest
    fullName: Business.Model.MetricRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.Images*
  commentId: Overload:Business.Model.FarmMasterContext.Images
  name: Images
  nameWithType: FarmMasterContext.Images
  fullName: Business.Model.FarmMasterContext.Images
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.Image}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.Image}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Image>
  nameWithType: DbSet<Image>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.Image>
  nameWithType.vb: DbSet(Of Image)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.Image)
  name.vb: DbSet(Of Image)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.Image
    name: Image
    nameWithType: Image
    fullName: Business.Model.Image
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.ImageData*
  commentId: Overload:Business.Model.FarmMasterContext.ImageData
  name: ImageData
  nameWithType: FarmMasterContext.ImageData
  fullName: Business.Model.FarmMasterContext.ImageData
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.ImageData}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.ImageData}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<ImageData>
  nameWithType: DbSet<ImageData>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.ImageData>
  nameWithType.vb: DbSet(Of ImageData)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.ImageData)
  name.vb: DbSet(Of ImageData)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.ImageData
    name: ImageData
    nameWithType: ImageData
    fullName: Business.Model.ImageData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.ImageData
    name: ImageData
    nameWithType: ImageData
    fullName: Business.Model.ImageData
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.AnimalGroups*
  commentId: Overload:Business.Model.FarmMasterContext.AnimalGroups
  name: AnimalGroups
  nameWithType: FarmMasterContext.AnimalGroups
  fullName: Business.Model.FarmMasterContext.AnimalGroups
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalGroup}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalGroup}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AnimalGroup>
  nameWithType: DbSet<AnimalGroup>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.AnimalGroup>
  nameWithType.vb: DbSet(Of AnimalGroup)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.AnimalGroup)
  name.vb: DbSet(Of AnimalGroup)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.MapAnimalToAnimalGroups*
  commentId: Overload:Business.Model.FarmMasterContext.MapAnimalToAnimalGroups
  name: MapAnimalToAnimalGroups
  nameWithType: FarmMasterContext.MapAnimalToAnimalGroups
  fullName: Business.Model.FarmMasterContext.MapAnimalToAnimalGroups
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapAnimalToAnimalGroup}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.MapAnimalToAnimalGroup}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<MapAnimalToAnimalGroup>
  nameWithType: DbSet<MapAnimalToAnimalGroup>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.MapAnimalToAnimalGroup>
  nameWithType.vb: DbSet(Of MapAnimalToAnimalGroup)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.MapAnimalToAnimalGroup)
  name.vb: DbSet(Of MapAnimalToAnimalGroup)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.MapAnimalToAnimalGroup
    name: MapAnimalToAnimalGroup
    nameWithType: MapAnimalToAnimalGroup
    fullName: Business.Model.MapAnimalToAnimalGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.MapAnimalToAnimalGroup
    name: MapAnimalToAnimalGroup
    nameWithType: MapAnimalToAnimalGroup
    fullName: Business.Model.MapAnimalToAnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.FarmMasterContext.AnimalGroupScripts*
  commentId: Overload:Business.Model.FarmMasterContext.AnimalGroupScripts
  name: AnimalGroupScripts
  nameWithType: FarmMasterContext.AnimalGroupScripts
  fullName: Business.Model.FarmMasterContext.AnimalGroupScripts
- uid: Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalGroupScript}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Business.Model.AnimalGroupScript}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AnimalGroupScript>
  nameWithType: DbSet<AnimalGroupScript>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Business.Model.AnimalGroupScript>
  nameWithType.vb: DbSet(Of AnimalGroupScript)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Business.Model.AnimalGroupScript)
  name.vb: DbSet(Of AnimalGroupScript)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroupScript
    name: AnimalGroupScript
    nameWithType: AnimalGroupScript
    fullName: Business.Model.AnimalGroupScript
  - name: )
    nameWithType: )
    fullName: )
