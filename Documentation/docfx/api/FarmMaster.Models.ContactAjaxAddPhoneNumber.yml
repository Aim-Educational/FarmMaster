### YamlMime:ManagedReference
items:
- uid: FarmMaster.Models.ContactAjaxAddPhoneNumber
  commentId: T:FarmMaster.Models.ContactAjaxAddPhoneNumber
  id: ContactAjaxAddPhoneNumber
  parent: FarmMaster.Models
  children:
  - FarmMaster.Models.ContactAjaxAddPhoneNumber.Id
  - FarmMaster.Models.ContactAjaxAddPhoneNumber.Name
  - FarmMaster.Models.ContactAjaxAddPhoneNumber.Reason
  - FarmMaster.Models.ContactAjaxAddPhoneNumber.Value
  langs:
  - csharp
  - vb
  name: ContactAjaxAddPhoneNumber
  nameWithType: ContactAjaxAddPhoneNumber
  fullName: FarmMaster.Models.ContactAjaxAddPhoneNumber
  type: Class
  source:
    remote:
      path: FarmMaster/Models/ContactViewModels.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ContactAjaxAddPhoneNumber
    path: Models/ContactViewModels.cs
    startLine: 34
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: 'public class ContactAjaxAddPhoneNumber : AjaxRequestModel'
    content.vb: >-
      Public Class ContactAjaxAddPhoneNumber

          Inherits AjaxRequestModel
  inheritance:
  - System.Object
  - FarmMaster.Models.AjaxRequestModel
  inheritedMembers:
  - FarmMaster.Models.AjaxRequestModel.SessionToken
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FarmMaster.Models.ContactAjaxAddPhoneNumber.Id
  commentId: P:FarmMaster.Models.ContactAjaxAddPhoneNumber.Id
  id: Id
  parent: FarmMaster.Models.ContactAjaxAddPhoneNumber
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ContactAjaxAddPhoneNumber.Id
  fullName: FarmMaster.Models.ContactAjaxAddPhoneNumber.Id
  type: Property
  source:
    remote:
      path: FarmMaster/Models/ContactViewModels.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Id
    path: Models/ContactViewModels.cs
    startLine: 36
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: >-
      [Required]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      Public Property Id As Integer
  overload: FarmMaster.Models.ContactAjaxAddPhoneNumber.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.ContactAjaxAddPhoneNumber.Name
  commentId: P:FarmMaster.Models.ContactAjaxAddPhoneNumber.Name
  id: Name
  parent: FarmMaster.Models.ContactAjaxAddPhoneNumber
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ContactAjaxAddPhoneNumber.Name
  fullName: FarmMaster.Models.ContactAjaxAddPhoneNumber.Name
  type: Property
  source:
    remote:
      path: FarmMaster/Models/ContactViewModels.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Name
    path: Models/ContactViewModels.cs
    startLine: 39
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "A name is required.")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="A name is required.")>

      Public Property Name As String
  overload: FarmMaster.Models.ContactAjaxAddPhoneNumber.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: A name is required.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.ContactAjaxAddPhoneNumber.Value
  commentId: P:FarmMaster.Models.ContactAjaxAddPhoneNumber.Value
  id: Value
  parent: FarmMaster.Models.ContactAjaxAddPhoneNumber
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ContactAjaxAddPhoneNumber.Value
  fullName: FarmMaster.Models.ContactAjaxAddPhoneNumber.Value
  type: Property
  source:
    remote:
      path: FarmMaster/Models/ContactViewModels.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Value
    path: Models/ContactViewModels.cs
    startLine: 42
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "A number is required.")]

      [RegularExpression("^\\+?[0-9]*$", ErrorMessage = "Invalid Phone Number. Only '+', and digits are allowed.")]

      public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="A number is required.")>

      <RegularExpression("^\+?[0-9]*$", ErrorMessage:="Invalid Phone Number. Only '+', and digits are allowed.")>

      Public Property Value As String
  overload: FarmMaster.Models.ContactAjaxAddPhoneNumber.Value*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: A number is required.
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ^\+?[0-9]*$
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Invalid Phone Number. Only '+', and digits are allowed.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FarmMaster.Models.ContactAjaxAddPhoneNumber.Reason
  commentId: P:FarmMaster.Models.ContactAjaxAddPhoneNumber.Reason
  id: Reason
  parent: FarmMaster.Models.ContactAjaxAddPhoneNumber
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: ContactAjaxAddPhoneNumber.Reason
  fullName: FarmMaster.Models.ContactAjaxAddPhoneNumber.Reason
  type: Property
  source:
    remote:
      path: FarmMaster/Models/ContactViewModels.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Reason
    path: Models/ContactViewModels.cs
    startLine: 46
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Models
  syntax:
    content: >-
      [Required(ErrorMessage = "You must give a reason for adding this number.")]

      public string Reason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="You must give a reason for adding this number.")>

      Public Property Reason As String
  overload: FarmMaster.Models.ContactAjaxAddPhoneNumber.Reason*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: You must give a reason for adding this number.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: FarmMaster.Models
  commentId: N:FarmMaster.Models
  name: FarmMaster.Models
  nameWithType: FarmMaster.Models
  fullName: FarmMaster.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FarmMaster.Models.AjaxRequestModel
  commentId: T:FarmMaster.Models.AjaxRequestModel
  parent: FarmMaster.Models
  name: AjaxRequestModel
  nameWithType: AjaxRequestModel
  fullName: FarmMaster.Models.AjaxRequestModel
- uid: FarmMaster.Models.AjaxRequestModel.SessionToken
  commentId: P:FarmMaster.Models.AjaxRequestModel.SessionToken
  parent: FarmMaster.Models.AjaxRequestModel
  name: SessionToken
  nameWithType: AjaxRequestModel.SessionToken
  fullName: FarmMaster.Models.AjaxRequestModel.SessionToken
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.Models.ContactAjaxAddPhoneNumber.Id*
  commentId: Overload:FarmMaster.Models.ContactAjaxAddPhoneNumber.Id
  name: Id
  nameWithType: ContactAjaxAddPhoneNumber.Id
  fullName: FarmMaster.Models.ContactAjaxAddPhoneNumber.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FarmMaster.Models.ContactAjaxAddPhoneNumber.Name*
  commentId: Overload:FarmMaster.Models.ContactAjaxAddPhoneNumber.Name
  name: Name
  nameWithType: ContactAjaxAddPhoneNumber.Name
  fullName: FarmMaster.Models.ContactAjaxAddPhoneNumber.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FarmMaster.Models.ContactAjaxAddPhoneNumber.Value*
  commentId: Overload:FarmMaster.Models.ContactAjaxAddPhoneNumber.Value
  name: Value
  nameWithType: ContactAjaxAddPhoneNumber.Value
  fullName: FarmMaster.Models.ContactAjaxAddPhoneNumber.Value
- uid: FarmMaster.Models.ContactAjaxAddPhoneNumber.Reason*
  commentId: Overload:FarmMaster.Models.ContactAjaxAddPhoneNumber.Reason
  name: Reason
  nameWithType: ContactAjaxAddPhoneNumber.Reason
  fullName: FarmMaster.Models.ContactAjaxAddPhoneNumber.Reason
