### YamlMime:ManagedReference
items:
- uid: Business.Model.MapRolePermissionToRole
  commentId: T:Business.Model.MapRolePermissionToRole
  id: MapRolePermissionToRole
  parent: Business.Model
  children:
  - Business.Model.MapRolePermissionToRole.EnumRolePermission
  - Business.Model.MapRolePermissionToRole.EnumRolePermissionId
  - Business.Model.MapRolePermissionToRole.MapRolePermissionToRoleId
  - Business.Model.MapRolePermissionToRole.Role
  - Business.Model.MapRolePermissionToRole.RoleId
  - Business.Model.MapRolePermissionToRole.Timestamp
  langs:
  - csharp
  - vb
  name: MapRolePermissionToRole
  nameWithType: MapRolePermissionToRole
  fullName: Business.Model.MapRolePermissionToRole
  type: Class
  source:
    remote:
      path: Business/Model/MapRolePermissionToRole.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MapRolePermissionToRole
    path: ../Business/Model/MapRolePermissionToRole.cs
    startLine: 7
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public class MapRolePermissionToRole
    content.vb: Public Class MapRolePermissionToRole
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Business.Model.MapRolePermissionToRole.MapRolePermissionToRoleId
  commentId: P:Business.Model.MapRolePermissionToRole.MapRolePermissionToRoleId
  id: MapRolePermissionToRoleId
  parent: Business.Model.MapRolePermissionToRole
  langs:
  - csharp
  - vb
  name: MapRolePermissionToRoleId
  nameWithType: MapRolePermissionToRole.MapRolePermissionToRoleId
  fullName: Business.Model.MapRolePermissionToRole.MapRolePermissionToRoleId
  type: Property
  source:
    remote:
      path: Business/Model/MapRolePermissionToRole.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: MapRolePermissionToRoleId
    path: ../Business/Model/MapRolePermissionToRole.cs
    startLine: 9
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Key]

      public int MapRolePermissionToRoleId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Key>

      Public Property MapRolePermissionToRoleId As Integer
  overload: Business.Model.MapRolePermissionToRole.MapRolePermissionToRoleId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.MapRolePermissionToRole.RoleId
  commentId: P:Business.Model.MapRolePermissionToRole.RoleId
  id: RoleId
  parent: Business.Model.MapRolePermissionToRole
  langs:
  - csharp
  - vb
  name: RoleId
  nameWithType: MapRolePermissionToRole.RoleId
  fullName: Business.Model.MapRolePermissionToRole.RoleId
  type: Property
  source:
    remote:
      path: Business/Model/MapRolePermissionToRole.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: RoleId
    path: ../Business/Model/MapRolePermissionToRole.cs
    startLine: 12
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      public int RoleId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      Public Property RoleId As Integer
  overload: Business.Model.MapRolePermissionToRole.RoleId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.MapRolePermissionToRole.Role
  commentId: P:Business.Model.MapRolePermissionToRole.Role
  id: Role
  parent: Business.Model.MapRolePermissionToRole
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: MapRolePermissionToRole.Role
  fullName: Business.Model.MapRolePermissionToRole.Role
  type: Property
  source:
    remote:
      path: Business/Model/MapRolePermissionToRole.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Role
    path: ../Business/Model/MapRolePermissionToRole.cs
    startLine: 14
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public Role Role { get; set; }
    parameters: []
    return:
      type: Business.Model.Role
    content.vb: Public Property Role As Role
  overload: Business.Model.MapRolePermissionToRole.Role*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.MapRolePermissionToRole.EnumRolePermissionId
  commentId: P:Business.Model.MapRolePermissionToRole.EnumRolePermissionId
  id: EnumRolePermissionId
  parent: Business.Model.MapRolePermissionToRole
  langs:
  - csharp
  - vb
  name: EnumRolePermissionId
  nameWithType: MapRolePermissionToRole.EnumRolePermissionId
  fullName: Business.Model.MapRolePermissionToRole.EnumRolePermissionId
  type: Property
  source:
    remote:
      path: Business/Model/MapRolePermissionToRole.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: EnumRolePermissionId
    path: ../Business/Model/MapRolePermissionToRole.cs
    startLine: 16
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Required]

      public int EnumRolePermissionId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      Public Property EnumRolePermissionId As Integer
  overload: Business.Model.MapRolePermissionToRole.EnumRolePermissionId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.MapRolePermissionToRole.EnumRolePermission
  commentId: P:Business.Model.MapRolePermissionToRole.EnumRolePermission
  id: EnumRolePermission
  parent: Business.Model.MapRolePermissionToRole
  langs:
  - csharp
  - vb
  name: EnumRolePermission
  nameWithType: MapRolePermissionToRole.EnumRolePermission
  fullName: Business.Model.MapRolePermissionToRole.EnumRolePermission
  type: Property
  source:
    remote:
      path: Business/Model/MapRolePermissionToRole.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: EnumRolePermission
    path: ../Business/Model/MapRolePermissionToRole.cs
    startLine: 18
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: public EnumRolePermission EnumRolePermission { get; set; }
    parameters: []
    return:
      type: Business.Model.EnumRolePermission
    content.vb: Public Property EnumRolePermission As EnumRolePermission
  overload: Business.Model.MapRolePermissionToRole.EnumRolePermission*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Business.Model.MapRolePermissionToRole.Timestamp
  commentId: P:Business.Model.MapRolePermissionToRole.Timestamp
  id: Timestamp
  parent: Business.Model.MapRolePermissionToRole
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: MapRolePermissionToRole.Timestamp
  fullName: Business.Model.MapRolePermissionToRole.Timestamp
  type: Property
  source:
    remote:
      path: Business/Model/MapRolePermissionToRole.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Timestamp
    path: ../Business/Model/MapRolePermissionToRole.cs
    startLine: 20
  assemblies:
  - Business
  namespace: Business.Model
  syntax:
    content: >-
      [Timestamp]

      public byte[] Timestamp { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: >-
      <Timestamp>

      Public Property Timestamp As Byte()
  overload: Business.Model.MapRolePermissionToRole.Timestamp*
  attributes:
  - type: System.ComponentModel.DataAnnotations.TimestampAttribute
    ctor: System.ComponentModel.DataAnnotations.TimestampAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Business.Model.MapRolePermissionToRole.MapRolePermissionToRoleId*
  commentId: Overload:Business.Model.MapRolePermissionToRole.MapRolePermissionToRoleId
  name: MapRolePermissionToRoleId
  nameWithType: MapRolePermissionToRole.MapRolePermissionToRoleId
  fullName: Business.Model.MapRolePermissionToRole.MapRolePermissionToRoleId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Business.Model.MapRolePermissionToRole.RoleId*
  commentId: Overload:Business.Model.MapRolePermissionToRole.RoleId
  name: RoleId
  nameWithType: MapRolePermissionToRole.RoleId
  fullName: Business.Model.MapRolePermissionToRole.RoleId
- uid: Business.Model.MapRolePermissionToRole.Role*
  commentId: Overload:Business.Model.MapRolePermissionToRole.Role
  name: Role
  nameWithType: MapRolePermissionToRole.Role
  fullName: Business.Model.MapRolePermissionToRole.Role
- uid: Business.Model.Role
  commentId: T:Business.Model.Role
  parent: Business.Model
  name: Role
  nameWithType: Role
  fullName: Business.Model.Role
- uid: Business.Model.MapRolePermissionToRole.EnumRolePermissionId*
  commentId: Overload:Business.Model.MapRolePermissionToRole.EnumRolePermissionId
  name: EnumRolePermissionId
  nameWithType: MapRolePermissionToRole.EnumRolePermissionId
  fullName: Business.Model.MapRolePermissionToRole.EnumRolePermissionId
- uid: Business.Model.MapRolePermissionToRole.EnumRolePermission*
  commentId: Overload:Business.Model.MapRolePermissionToRole.EnumRolePermission
  name: EnumRolePermission
  nameWithType: MapRolePermissionToRole.EnumRolePermission
  fullName: Business.Model.MapRolePermissionToRole.EnumRolePermission
- uid: Business.Model.EnumRolePermission
  commentId: T:Business.Model.EnumRolePermission
  parent: Business.Model
  name: EnumRolePermission
  nameWithType: EnumRolePermission
  fullName: Business.Model.EnumRolePermission
- uid: Business.Model.MapRolePermissionToRole.Timestamp*
  commentId: Overload:Business.Model.MapRolePermissionToRole.Timestamp
  name: Timestamp
  nameWithType: MapRolePermissionToRole.Timestamp
  fullName: Business.Model.MapRolePermissionToRole.Timestamp
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
