### YamlMime:ManagedReference
items:
- uid: FarmMaster.Services.ServiceUserManager
  commentId: T:FarmMaster.Services.ServiceUserManager
  id: ServiceUserManager
  parent: FarmMaster.Services
  children:
  - FarmMaster.Services.ServiceUserManager.#ctor(Business.Model.FarmMasterContext,FarmMaster.Services.IServiceSmtpClient,FarmMaster.Services.IServiceRoleManager,FarmMaster.Services.IServiceContactManager,Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpDomainConfig},Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceUserManagerConfig})
  - FarmMaster.Services.ServiceUserManager.AnonymiseContactData(Business.Model.Contact)
  - FarmMaster.Services.ServiceUserManager.AnonymiseUserData(Business.Model.User)
  - FarmMaster.Services.ServiceUserManager.ChangePassword(Business.Model.User,System.String)
  - FarmMaster.Services.ServiceUserManager.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  - FarmMaster.Services.ServiceUserManager.EndSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  - FarmMaster.Services.ServiceUserManager.FinishEmailVerify(System.String)
  - FarmMaster.Services.ServiceUserManager.GetContactGdprData(Business.Model.Contact,Newtonsoft.Json.Linq.JObject)
  - FarmMaster.Services.ServiceUserManager.GetIdFor(Business.Model.User)
  - FarmMaster.Services.ServiceUserManager.GetUserGdprData(Business.Model.User,Newtonsoft.Json.Linq.JObject)
  - FarmMaster.Services.ServiceUserManager.Query
  - FarmMaster.Services.ServiceUserManager.QueryAllIncluded
  - FarmMaster.Services.ServiceUserManager.RenewSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  - FarmMaster.Services.ServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
  - FarmMaster.Services.ServiceUserManager.Update(Business.Model.User)
  - FarmMaster.Services.ServiceUserManager.UserExists(System.String)
  - FarmMaster.Services.ServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
  - FarmMaster.Services.ServiceUserManager.UserFromCookieSession(System.String)
  - FarmMaster.Services.ServiceUserManager.UserFromLoginInfo(System.String,System.String)
  - FarmMaster.Services.ServiceUserManager.UserPasswordMatches(System.String,System.String)
  langs:
  - csharp
  - vb
  name: ServiceUserManager
  nameWithType: ServiceUserManager
  fullName: FarmMaster.Services.ServiceUserManager
  type: Class
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ServiceUserManager
    path: Services/IServiceUserManager.cs
    startLine: 37
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: 'public class ServiceUserManager : IServiceUserManager, IServiceEntityManager<User>, IServiceGdprData'
    content.vb: >-
      Public Class ServiceUserManager

          Implements IServiceUserManager, IServiceEntityManager(Of User), IServiceGdprData
  inheritance:
  - System.Object
  implements:
  - FarmMaster.Services.IServiceUserManager
  - FarmMaster.Services.IServiceEntityManager{Business.Model.User}
  - FarmMaster.Services.IServiceGdprData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.User}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.User}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.User}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FarmMaster.Services.ServiceUserManager.#ctor(Business.Model.FarmMasterContext,FarmMaster.Services.IServiceSmtpClient,FarmMaster.Services.IServiceRoleManager,FarmMaster.Services.IServiceContactManager,Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpDomainConfig},Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceUserManagerConfig})
  commentId: M:FarmMaster.Services.ServiceUserManager.#ctor(Business.Model.FarmMasterContext,FarmMaster.Services.IServiceSmtpClient,FarmMaster.Services.IServiceRoleManager,FarmMaster.Services.IServiceContactManager,Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpDomainConfig},Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceUserManagerConfig})
  id: '#ctor(Business.Model.FarmMasterContext,FarmMaster.Services.IServiceSmtpClient,FarmMaster.Services.IServiceRoleManager,FarmMaster.Services.IServiceContactManager,Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpDomainConfig},Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceUserManagerConfig})'
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: ServiceUserManager(FarmMasterContext, IServiceSmtpClient, IServiceRoleManager, IServiceContactManager, IOptions<IServiceSmtpDomainConfig>, IOptions<IServiceUserManagerConfig>)
  nameWithType: ServiceUserManager.ServiceUserManager(FarmMasterContext, IServiceSmtpClient, IServiceRoleManager, IServiceContactManager, IOptions<IServiceSmtpDomainConfig>, IOptions<IServiceUserManagerConfig>)
  fullName: FarmMaster.Services.ServiceUserManager.ServiceUserManager(Business.Model.FarmMasterContext, FarmMaster.Services.IServiceSmtpClient, FarmMaster.Services.IServiceRoleManager, FarmMaster.Services.IServiceContactManager, Microsoft.Extensions.Options.IOptions<FarmMaster.Services.IServiceSmtpDomainConfig>, Microsoft.Extensions.Options.IOptions<FarmMaster.Services.IServiceUserManagerConfig>)
  type: Constructor
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: Services/IServiceUserManager.cs
    startLine: 47
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public ServiceUserManager(FarmMasterContext context, IServiceSmtpClient smtp, IServiceRoleManager roles, IServiceContactManager contacts, IOptions<IServiceSmtpDomainConfig> domains, IOptions<IServiceUserManagerConfig> config)
    parameters:
    - id: context
      type: Business.Model.FarmMasterContext
    - id: smtp
      type: FarmMaster.Services.IServiceSmtpClient
    - id: roles
      type: FarmMaster.Services.IServiceRoleManager
    - id: contacts
      type: FarmMaster.Services.IServiceContactManager
    - id: domains
      type: Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpDomainConfig}
    - id: config
      type: Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceUserManagerConfig}
    content.vb: Public Sub New(context As FarmMasterContext, smtp As IServiceSmtpClient, roles As IServiceRoleManager, contacts As IServiceContactManager, domains As IOptions(Of IServiceSmtpDomainConfig), config As IOptions(Of IServiceUserManagerConfig))
  overload: FarmMaster.Services.ServiceUserManager.#ctor*
  nameWithType.vb: ServiceUserManager.ServiceUserManager(FarmMasterContext, IServiceSmtpClient, IServiceRoleManager, IServiceContactManager, IOptions(Of IServiceSmtpDomainConfig), IOptions(Of IServiceUserManagerConfig))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FarmMaster.Services.ServiceUserManager.ServiceUserManager(Business.Model.FarmMasterContext, FarmMaster.Services.IServiceSmtpClient, FarmMaster.Services.IServiceRoleManager, FarmMaster.Services.IServiceContactManager, Microsoft.Extensions.Options.IOptions(Of FarmMaster.Services.IServiceSmtpDomainConfig), Microsoft.Extensions.Options.IOptions(Of FarmMaster.Services.IServiceUserManagerConfig))
  name.vb: ServiceUserManager(FarmMasterContext, IServiceSmtpClient, IServiceRoleManager, IServiceContactManager, IOptions(Of IServiceSmtpDomainConfig), IOptions(Of IServiceUserManagerConfig))
- uid: FarmMaster.Services.ServiceUserManager.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:FarmMaster.Services.ServiceUserManager.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  id: Create(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: Create(String, String, String, String, Boolean, Boolean)
  nameWithType: ServiceUserManager.Create(String, String, String, String, Boolean, Boolean)
  fullName: FarmMaster.Services.ServiceUserManager.Create(System.String, System.String, System.String, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Create
    path: Services/IServiceUserManager.cs
    startLine: 62
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public User Create(string username, string password, string fullName, string email, bool tosConsent, bool privacyConsent)
    parameters:
    - id: username
      type: System.String
    - id: password
      type: System.String
    - id: fullName
      type: System.String
    - id: email
      type: System.String
    - id: tosConsent
      type: System.Boolean
    - id: privacyConsent
      type: System.Boolean
    return:
      type: Business.Model.User
    content.vb: Public Function Create(username As String, password As String, fullName As String, email As String, tosConsent As Boolean, privacyConsent As Boolean) As User
  overload: FarmMaster.Services.ServiceUserManager.Create*
  implements:
  - FarmMaster.Services.IServiceUserManager.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.RenewSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FarmMaster.Services.ServiceUserManager.RenewSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  id: RenewSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: RenewSession(User, HttpContext)
  nameWithType: ServiceUserManager.RenewSession(User, HttpContext)
  fullName: FarmMaster.Services.ServiceUserManager.RenewSession(Business.Model.User, Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: RenewSession
    path: Services/IServiceUserManager.cs
    startLine: 130
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void RenewSession(User user, HttpContext http)
    parameters:
    - id: user
      type: Business.Model.User
    - id: http
      type: Microsoft.AspNetCore.Http.HttpContext
    content.vb: Public Sub RenewSession(user As User, http As HttpContext)
  overload: FarmMaster.Services.ServiceUserManager.RenewSession*
  implements:
  - FarmMaster.Services.IServiceUserManager.RenewSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.EndSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FarmMaster.Services.ServiceUserManager.EndSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  id: EndSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: EndSession(User, HttpContext)
  nameWithType: ServiceUserManager.EndSession(User, HttpContext)
  fullName: FarmMaster.Services.ServiceUserManager.EndSession(Business.Model.User, Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: EndSession
    path: Services/IServiceUserManager.cs
    startLine: 150
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void EndSession(User user, HttpContext http)
    parameters:
    - id: user
      type: Business.Model.User
    - id: http
      type: Microsoft.AspNetCore.Http.HttpContext
    content.vb: Public Sub EndSession(user As User, http As HttpContext)
  overload: FarmMaster.Services.ServiceUserManager.EndSession*
  implements:
  - FarmMaster.Services.IServiceUserManager.EndSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.UserExists(System.String)
  commentId: M:FarmMaster.Services.ServiceUserManager.UserExists(System.String)
  id: UserExists(System.String)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: UserExists(String)
  nameWithType: ServiceUserManager.UserExists(String)
  fullName: FarmMaster.Services.ServiceUserManager.UserExists(System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserExists
    path: Services/IServiceUserManager.cs
    startLine: 156
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public bool UserExists(string username)
    parameters:
    - id: username
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function UserExists(username As String) As Boolean
  overload: FarmMaster.Services.ServiceUserManager.UserExists*
  implements:
  - FarmMaster.Services.IServiceUserManager.UserExists(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FarmMaster.Services.ServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
  id: UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: UserFromCookieSession(HttpContext)
  nameWithType: ServiceUserManager.UserFromCookieSession(HttpContext)
  fullName: FarmMaster.Services.ServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserFromCookieSession
    path: Services/IServiceUserManager.cs
    startLine: 161
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public User UserFromCookieSession(HttpContext http)
    parameters:
    - id: http
      type: Microsoft.AspNetCore.Http.HttpContext
    return:
      type: Business.Model.User
    content.vb: Public Function UserFromCookieSession(http As HttpContext) As User
  overload: FarmMaster.Services.ServiceUserManager.UserFromCookieSession*
  implements:
  - FarmMaster.Services.IServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.UserFromCookieSession(System.String)
  commentId: M:FarmMaster.Services.ServiceUserManager.UserFromCookieSession(System.String)
  id: UserFromCookieSession(System.String)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: UserFromCookieSession(String)
  nameWithType: ServiceUserManager.UserFromCookieSession(String)
  fullName: FarmMaster.Services.ServiceUserManager.UserFromCookieSession(System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserFromCookieSession
    path: Services/IServiceUserManager.cs
    startLine: 170
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public User UserFromCookieSession(string sessionToken)
    parameters:
    - id: sessionToken
      type: System.String
    return:
      type: Business.Model.User
    content.vb: Public Function UserFromCookieSession(sessionToken As String) As User
  overload: FarmMaster.Services.ServiceUserManager.UserFromCookieSession*
  implements:
  - FarmMaster.Services.IServiceUserManager.UserFromCookieSession(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.UserPasswordMatches(System.String,System.String)
  commentId: M:FarmMaster.Services.ServiceUserManager.UserPasswordMatches(System.String,System.String)
  id: UserPasswordMatches(System.String,System.String)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: UserPasswordMatches(String, String)
  nameWithType: ServiceUserManager.UserPasswordMatches(String, String)
  fullName: FarmMaster.Services.ServiceUserManager.UserPasswordMatches(System.String, System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserPasswordMatches
    path: Services/IServiceUserManager.cs
    startLine: 188
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public bool UserPasswordMatches(string username, string password)
    parameters:
    - id: username
      type: System.String
    - id: password
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function UserPasswordMatches(username As String, password As String) As Boolean
  overload: FarmMaster.Services.ServiceUserManager.UserPasswordMatches*
  implements:
  - FarmMaster.Services.IServiceUserManager.UserPasswordMatches(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
  commentId: M:FarmMaster.Services.ServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
  id: SendEmailVerifyEmail(Business.Model.User)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: SendEmailVerifyEmail(User)
  nameWithType: ServiceUserManager.SendEmailVerifyEmail(User)
  fullName: FarmMaster.Services.ServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: SendEmailVerifyEmail
    path: Services/IServiceUserManager.cs
    startLine: 197
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void SendEmailVerifyEmail(User user)
    parameters:
    - id: user
      type: Business.Model.User
    content.vb: Public Sub SendEmailVerifyEmail(user As User)
  overload: FarmMaster.Services.ServiceUserManager.SendEmailVerifyEmail*
  implements:
  - FarmMaster.Services.IServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.UserFromLoginInfo(System.String,System.String)
  commentId: M:FarmMaster.Services.ServiceUserManager.UserFromLoginInfo(System.String,System.String)
  id: UserFromLoginInfo(System.String,System.String)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: UserFromLoginInfo(String, String)
  nameWithType: ServiceUserManager.UserFromLoginInfo(String, String)
  fullName: FarmMaster.Services.ServiceUserManager.UserFromLoginInfo(System.String, System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: UserFromLoginInfo
    path: Services/IServiceUserManager.cs
    startLine: 210
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public User UserFromLoginInfo(string username, string password)
    parameters:
    - id: username
      type: System.String
    - id: password
      type: System.String
    return:
      type: Business.Model.User
    content.vb: Public Function UserFromLoginInfo(username As String, password As String) As User
  overload: FarmMaster.Services.ServiceUserManager.UserFromLoginInfo*
  implements:
  - FarmMaster.Services.IServiceUserManager.UserFromLoginInfo(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.FinishEmailVerify(System.String)
  commentId: M:FarmMaster.Services.ServiceUserManager.FinishEmailVerify(System.String)
  id: FinishEmailVerify(System.String)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: FinishEmailVerify(String)
  nameWithType: ServiceUserManager.FinishEmailVerify(String)
  fullName: FarmMaster.Services.ServiceUserManager.FinishEmailVerify(System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: FinishEmailVerify
    path: Services/IServiceUserManager.cs
    startLine: 232
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void FinishEmailVerify(string token)
    parameters:
    - id: token
      type: System.String
    content.vb: Public Sub FinishEmailVerify(token As String)
  overload: FarmMaster.Services.ServiceUserManager.FinishEmailVerify*
  implements:
  - FarmMaster.Services.IServiceUserManager.FinishEmailVerify(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.QueryAllIncluded
  commentId: M:FarmMaster.Services.ServiceUserManager.QueryAllIncluded
  id: QueryAllIncluded
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: QueryAllIncluded()
  nameWithType: ServiceUserManager.QueryAllIncluded()
  fullName: FarmMaster.Services.ServiceUserManager.QueryAllIncluded()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: QueryAllIncluded
    path: Services/IServiceUserManager.cs
    startLine: 243
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<User> QueryAllIncluded()
    return:
      type: System.Linq.IQueryable{Business.Model.User}
    content.vb: Public Function QueryAllIncluded As IQueryable(Of User)
  overload: FarmMaster.Services.ServiceUserManager.QueryAllIncluded*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.User}.QueryAllIncluded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.Query
  commentId: M:FarmMaster.Services.ServiceUserManager.Query
  id: Query
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: Query()
  nameWithType: ServiceUserManager.Query()
  fullName: FarmMaster.Services.ServiceUserManager.Query()
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Query
    path: Services/IServiceUserManager.cs
    startLine: 259
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public IQueryable<User> Query()
    return:
      type: System.Linq.IQueryable{Business.Model.User}
    content.vb: Public Function Query As IQueryable(Of User)
  overload: FarmMaster.Services.ServiceUserManager.Query*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.User}.Query
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.GetIdFor(Business.Model.User)
  commentId: M:FarmMaster.Services.ServiceUserManager.GetIdFor(Business.Model.User)
  id: GetIdFor(Business.Model.User)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: GetIdFor(User)
  nameWithType: ServiceUserManager.GetIdFor(User)
  fullName: FarmMaster.Services.ServiceUserManager.GetIdFor(Business.Model.User)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetIdFor
    path: Services/IServiceUserManager.cs
    startLine: 264
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public int GetIdFor(User entity)
    parameters:
    - id: entity
      type: Business.Model.User
    return:
      type: System.Int32
    content.vb: Public Function GetIdFor(entity As User) As Integer
  overload: FarmMaster.Services.ServiceUserManager.GetIdFor*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.User}.GetIdFor(Business.Model.User)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.Update(Business.Model.User)
  commentId: M:FarmMaster.Services.ServiceUserManager.Update(Business.Model.User)
  id: Update(Business.Model.User)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: Update(User)
  nameWithType: ServiceUserManager.Update(User)
  fullName: FarmMaster.Services.ServiceUserManager.Update(Business.Model.User)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Update
    path: Services/IServiceUserManager.cs
    startLine: 269
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void Update(User entity)
    parameters:
    - id: entity
      type: Business.Model.User
    content.vb: Public Sub Update(entity As User)
  overload: FarmMaster.Services.ServiceUserManager.Update*
  implements:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.User}.Update(Business.Model.User)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.GetContactGdprData(Business.Model.Contact,Newtonsoft.Json.Linq.JObject)
  commentId: M:FarmMaster.Services.ServiceUserManager.GetContactGdprData(Business.Model.Contact,Newtonsoft.Json.Linq.JObject)
  id: GetContactGdprData(Business.Model.Contact,Newtonsoft.Json.Linq.JObject)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: GetContactGdprData(Contact, JObject)
  nameWithType: ServiceUserManager.GetContactGdprData(Contact, JObject)
  fullName: FarmMaster.Services.ServiceUserManager.GetContactGdprData(Business.Model.Contact, Newtonsoft.Json.Linq.JObject)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetContactGdprData
    path: Services/IServiceUserManager.cs
    startLine: 275
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void GetContactGdprData(Contact contact, JObject json)
    parameters:
    - id: contact
      type: Business.Model.Contact
    - id: json
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Sub GetContactGdprData(contact As Contact, json As JObject)
  overload: FarmMaster.Services.ServiceUserManager.GetContactGdprData*
  implements:
  - FarmMaster.Services.IServiceGdprData.GetContactGdprData(Business.Model.Contact,Newtonsoft.Json.Linq.JObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.GetUserGdprData(Business.Model.User,Newtonsoft.Json.Linq.JObject)
  commentId: M:FarmMaster.Services.ServiceUserManager.GetUserGdprData(Business.Model.User,Newtonsoft.Json.Linq.JObject)
  id: GetUserGdprData(Business.Model.User,Newtonsoft.Json.Linq.JObject)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: GetUserGdprData(User, JObject)
  nameWithType: ServiceUserManager.GetUserGdprData(User, JObject)
  fullName: FarmMaster.Services.ServiceUserManager.GetUserGdprData(Business.Model.User, Newtonsoft.Json.Linq.JObject)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: GetUserGdprData
    path: Services/IServiceUserManager.cs
    startLine: 278
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void GetUserGdprData(User user, JObject json)
    parameters:
    - id: user
      type: Business.Model.User
    - id: json
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Sub GetUserGdprData(user As User, json As JObject)
  overload: FarmMaster.Services.ServiceUserManager.GetUserGdprData*
  implements:
  - FarmMaster.Services.IServiceGdprData.GetUserGdprData(Business.Model.User,Newtonsoft.Json.Linq.JObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.AnonymiseContactData(Business.Model.Contact)
  commentId: M:FarmMaster.Services.ServiceUserManager.AnonymiseContactData(Business.Model.Contact)
  id: AnonymiseContactData(Business.Model.Contact)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: AnonymiseContactData(Contact)
  nameWithType: ServiceUserManager.AnonymiseContactData(Contact)
  fullName: FarmMaster.Services.ServiceUserManager.AnonymiseContactData(Business.Model.Contact)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AnonymiseContactData
    path: Services/IServiceUserManager.cs
    startLine: 303
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void AnonymiseContactData(Contact contact)
    parameters:
    - id: contact
      type: Business.Model.Contact
    content.vb: Public Sub AnonymiseContactData(contact As Contact)
  overload: FarmMaster.Services.ServiceUserManager.AnonymiseContactData*
  implements:
  - FarmMaster.Services.IServiceGdprData.AnonymiseContactData(Business.Model.Contact)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.AnonymiseUserData(Business.Model.User)
  commentId: M:FarmMaster.Services.ServiceUserManager.AnonymiseUserData(Business.Model.User)
  id: AnonymiseUserData(Business.Model.User)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: AnonymiseUserData(User)
  nameWithType: ServiceUserManager.AnonymiseUserData(User)
  fullName: FarmMaster.Services.ServiceUserManager.AnonymiseUserData(Business.Model.User)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AnonymiseUserData
    path: Services/IServiceUserManager.cs
    startLine: 305
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void AnonymiseUserData(User user)
    parameters:
    - id: user
      type: Business.Model.User
    content.vb: Public Sub AnonymiseUserData(user As User)
  overload: FarmMaster.Services.ServiceUserManager.AnonymiseUserData*
  implements:
  - FarmMaster.Services.IServiceGdprData.AnonymiseUserData(Business.Model.User)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.Services.ServiceUserManager.ChangePassword(Business.Model.User,System.String)
  commentId: M:FarmMaster.Services.ServiceUserManager.ChangePassword(Business.Model.User,System.String)
  id: ChangePassword(Business.Model.User,System.String)
  parent: FarmMaster.Services.ServiceUserManager
  langs:
  - csharp
  - vb
  name: ChangePassword(User, String)
  nameWithType: ServiceUserManager.ChangePassword(User, String)
  fullName: FarmMaster.Services.ServiceUserManager.ChangePassword(Business.Model.User, System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceUserManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: ChangePassword
    path: Services/IServiceUserManager.cs
    startLine: 326
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: public void ChangePassword(User user, string password)
    parameters:
    - id: user
      type: Business.Model.User
    - id: password
      type: System.String
    content.vb: Public Sub ChangePassword(user As User, password As String)
  overload: FarmMaster.Services.ServiceUserManager.ChangePassword*
  implements:
  - FarmMaster.Services.IServiceUserManager.ChangePassword(Business.Model.User,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FarmMaster.Services.IServiceUserManager
  commentId: T:FarmMaster.Services.IServiceUserManager
  parent: FarmMaster.Services
  name: IServiceUserManager
  nameWithType: IServiceUserManager
  fullName: FarmMaster.Services.IServiceUserManager
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.User}
  commentId: T:FarmMaster.Services.IServiceEntityManager{Business.Model.User}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<User>
  nameWithType: IServiceEntityManager<User>
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.User>
  nameWithType.vb: IServiceEntityManager(Of User)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.User)
  name.vb: IServiceEntityManager(Of User)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceGdprData
  commentId: T:FarmMaster.Services.IServiceGdprData
  parent: FarmMaster.Services
  name: IServiceGdprData
  nameWithType: IServiceGdprData
  fullName: FarmMaster.Services.IServiceGdprData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.User}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromId<User>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<User>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.User>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of User)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.User)(System.Int32)
  name.vb: FromId(Of User)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId<User>
    nameWithType: IServiceEntityDataExtentions.FromId<User>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.User>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId(Of User)
    nameWithType: IServiceEntityDataExtentions.FromId(Of User)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.User)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.User}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromIdAllIncluded<User>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<User>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.User>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of User)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.User)(System.Int32)
  name.vb: FromIdAllIncluded(Of User)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded<User>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<User>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.User>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded(Of User)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of User)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.User)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.User}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<User>()
  nameWithType: IServiceEntityDataExtentions.For<User>()
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.User>()
  nameWithType.vb: IServiceEntityDataExtentions.For(Of User)()
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.User)()
  name.vb: For(Of User)()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For<User>
    nameWithType: IServiceEntityDataExtentions.For<User>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.User>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For(Of User)
    nameWithType: IServiceEntityDataExtentions.For(Of User)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.User)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.Services.IServiceEntityManager`1
  commentId: T:FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<T>
  nameWithType: IServiceEntityManager<T>
  fullName: FarmMaster.Services.IServiceEntityManager<T>
  nameWithType.vb: IServiceEntityManager(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T)
  name.vb: IServiceEntityManager(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromId<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromId(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId<T>
    nameWithType: IServiceEntityDataExtentions.FromId<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId(Of T)
    nameWithType: IServiceEntityDataExtentions.FromId(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions
  commentId: T:FarmMaster.Services.IServiceEntityDataExtentions
  parent: FarmMaster.Services
  name: IServiceEntityDataExtentions
  nameWithType: IServiceEntityDataExtentions
  fullName: FarmMaster.Services.IServiceEntityDataExtentions
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded<T>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded(Of T)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<T>(IServiceEntityManager<T>)
  nameWithType: IServiceEntityDataExtentions.For<T>(IServiceEntityManager<T>)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>(FarmMaster.Services.IServiceEntityManager<T>)
  nameWithType.vb: IServiceEntityDataExtentions.For(Of T)(IServiceEntityManager(Of T))
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)(FarmMaster.Services.IServiceEntityManager(Of T))
  name.vb: For(Of T)(IServiceEntityManager(Of T))
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For<T>
    nameWithType: IServiceEntityDataExtentions.For<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For(Of T)
    nameWithType: IServiceEntityDataExtentions.For(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.#ctor*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.#ctor
  name: ServiceUserManager
  nameWithType: ServiceUserManager.ServiceUserManager
  fullName: FarmMaster.Services.ServiceUserManager.ServiceUserManager
- uid: Business.Model.FarmMasterContext
  commentId: T:Business.Model.FarmMasterContext
  parent: Business.Model
  name: FarmMasterContext
  nameWithType: FarmMasterContext
  fullName: Business.Model.FarmMasterContext
- uid: FarmMaster.Services.IServiceSmtpClient
  commentId: T:FarmMaster.Services.IServiceSmtpClient
  parent: FarmMaster.Services
  name: IServiceSmtpClient
  nameWithType: IServiceSmtpClient
  fullName: FarmMaster.Services.IServiceSmtpClient
- uid: FarmMaster.Services.IServiceRoleManager
  commentId: T:FarmMaster.Services.IServiceRoleManager
  parent: FarmMaster.Services
  name: IServiceRoleManager
  nameWithType: IServiceRoleManager
  fullName: FarmMaster.Services.IServiceRoleManager
- uid: FarmMaster.Services.IServiceContactManager
  commentId: T:FarmMaster.Services.IServiceContactManager
  parent: FarmMaster.Services
  name: IServiceContactManager
  nameWithType: IServiceContactManager
  fullName: FarmMaster.Services.IServiceContactManager
- uid: Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpDomainConfig}
  commentId: T:Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceSmtpDomainConfig}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<IServiceSmtpDomainConfig>
  nameWithType: IOptions<IServiceSmtpDomainConfig>
  fullName: Microsoft.Extensions.Options.IOptions<FarmMaster.Services.IServiceSmtpDomainConfig>
  nameWithType.vb: IOptions(Of IServiceSmtpDomainConfig)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of FarmMaster.Services.IServiceSmtpDomainConfig)
  name.vb: IOptions(Of IServiceSmtpDomainConfig)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FarmMaster.Services.IServiceSmtpDomainConfig
    name: IServiceSmtpDomainConfig
    nameWithType: IServiceSmtpDomainConfig
    fullName: FarmMaster.Services.IServiceSmtpDomainConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FarmMaster.Services.IServiceSmtpDomainConfig
    name: IServiceSmtpDomainConfig
    nameWithType: IServiceSmtpDomainConfig
    fullName: FarmMaster.Services.IServiceSmtpDomainConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceUserManagerConfig}
  commentId: T:Microsoft.Extensions.Options.IOptions{FarmMaster.Services.IServiceUserManagerConfig}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<IServiceUserManagerConfig>
  nameWithType: IOptions<IServiceUserManagerConfig>
  fullName: Microsoft.Extensions.Options.IOptions<FarmMaster.Services.IServiceUserManagerConfig>
  nameWithType.vb: IOptions(Of IServiceUserManagerConfig)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of FarmMaster.Services.IServiceUserManagerConfig)
  name.vb: IOptions(Of IServiceUserManagerConfig)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FarmMaster.Services.IServiceUserManagerConfig
    name: IServiceUserManagerConfig
    nameWithType: IServiceUserManagerConfig
    fullName: FarmMaster.Services.IServiceUserManagerConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FarmMaster.Services.IServiceUserManagerConfig
    name: IServiceUserManagerConfig
    nameWithType: IServiceUserManagerConfig
    fullName: FarmMaster.Services.IServiceUserManagerConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: FarmMaster.Services.ServiceUserManager.Create*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.Create
  name: Create
  nameWithType: ServiceUserManager.Create
  fullName: FarmMaster.Services.ServiceUserManager.Create
- uid: FarmMaster.Services.IServiceUserManager.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:FarmMaster.Services.IServiceUserManager.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: Create(String, String, String, String, Boolean, Boolean)
  nameWithType: IServiceUserManager.Create(String, String, String, String, Boolean, Boolean)
  fullName: FarmMaster.Services.IServiceUserManager.Create(System.String, System.String, System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
    name: Create
    nameWithType: IServiceUserManager.Create
    fullName: FarmMaster.Services.IServiceUserManager.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.Create(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)
    name: Create
    nameWithType: IServiceUserManager.Create
    fullName: FarmMaster.Services.IServiceUserManager.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Business.Model.User
  commentId: T:Business.Model.User
  parent: Business.Model
  name: User
  nameWithType: User
  fullName: Business.Model.User
- uid: FarmMaster.Services.ServiceUserManager.RenewSession*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.RenewSession
  name: RenewSession
  nameWithType: ServiceUserManager.RenewSession
  fullName: FarmMaster.Services.ServiceUserManager.RenewSession
- uid: FarmMaster.Services.IServiceUserManager.RenewSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FarmMaster.Services.IServiceUserManager.RenewSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: RenewSession(User, HttpContext)
  nameWithType: IServiceUserManager.RenewSession(User, HttpContext)
  fullName: FarmMaster.Services.IServiceUserManager.RenewSession(Business.Model.User, Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.RenewSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
    name: RenewSession
    nameWithType: IServiceUserManager.RenewSession
    fullName: FarmMaster.Services.IServiceUserManager.RenewSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.RenewSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
    name: RenewSession
    nameWithType: IServiceUserManager.RenewSession
    fullName: FarmMaster.Services.IServiceUserManager.RenewSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: FarmMaster.Services.ServiceUserManager.EndSession*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.EndSession
  name: EndSession
  nameWithType: ServiceUserManager.EndSession
  fullName: FarmMaster.Services.ServiceUserManager.EndSession
- uid: FarmMaster.Services.IServiceUserManager.EndSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FarmMaster.Services.IServiceUserManager.EndSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: EndSession(User, HttpContext)
  nameWithType: IServiceUserManager.EndSession(User, HttpContext)
  fullName: FarmMaster.Services.IServiceUserManager.EndSession(Business.Model.User, Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.EndSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
    name: EndSession
    nameWithType: IServiceUserManager.EndSession
    fullName: FarmMaster.Services.IServiceUserManager.EndSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.EndSession(Business.Model.User,Microsoft.AspNetCore.Http.HttpContext)
    name: EndSession
    nameWithType: IServiceUserManager.EndSession
    fullName: FarmMaster.Services.IServiceUserManager.EndSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.UserExists*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.UserExists
  name: UserExists
  nameWithType: ServiceUserManager.UserExists
  fullName: FarmMaster.Services.ServiceUserManager.UserExists
- uid: FarmMaster.Services.IServiceUserManager.UserExists(System.String)
  commentId: M:FarmMaster.Services.IServiceUserManager.UserExists(System.String)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: UserExists(String)
  nameWithType: IServiceUserManager.UserExists(String)
  fullName: FarmMaster.Services.IServiceUserManager.UserExists(System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.UserExists(System.String)
    name: UserExists
    nameWithType: IServiceUserManager.UserExists
    fullName: FarmMaster.Services.IServiceUserManager.UserExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.UserExists(System.String)
    name: UserExists
    nameWithType: IServiceUserManager.UserExists
    fullName: FarmMaster.Services.IServiceUserManager.UserExists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.UserFromCookieSession*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.UserFromCookieSession
  name: UserFromCookieSession
  nameWithType: ServiceUserManager.UserFromCookieSession
  fullName: FarmMaster.Services.ServiceUserManager.UserFromCookieSession
- uid: FarmMaster.Services.IServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:FarmMaster.Services.IServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: UserFromCookieSession(HttpContext)
  nameWithType: IServiceUserManager.UserFromCookieSession(HttpContext)
  fullName: FarmMaster.Services.IServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
    name: UserFromCookieSession
    nameWithType: IServiceUserManager.UserFromCookieSession
    fullName: FarmMaster.Services.IServiceUserManager.UserFromCookieSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.UserFromCookieSession(Microsoft.AspNetCore.Http.HttpContext)
    name: UserFromCookieSession
    nameWithType: IServiceUserManager.UserFromCookieSession
    fullName: FarmMaster.Services.IServiceUserManager.UserFromCookieSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceUserManager.UserFromCookieSession(System.String)
  commentId: M:FarmMaster.Services.IServiceUserManager.UserFromCookieSession(System.String)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: UserFromCookieSession(String)
  nameWithType: IServiceUserManager.UserFromCookieSession(String)
  fullName: FarmMaster.Services.IServiceUserManager.UserFromCookieSession(System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.UserFromCookieSession(System.String)
    name: UserFromCookieSession
    nameWithType: IServiceUserManager.UserFromCookieSession
    fullName: FarmMaster.Services.IServiceUserManager.UserFromCookieSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.UserFromCookieSession(System.String)
    name: UserFromCookieSession
    nameWithType: IServiceUserManager.UserFromCookieSession
    fullName: FarmMaster.Services.IServiceUserManager.UserFromCookieSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.UserPasswordMatches*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.UserPasswordMatches
  name: UserPasswordMatches
  nameWithType: ServiceUserManager.UserPasswordMatches
  fullName: FarmMaster.Services.ServiceUserManager.UserPasswordMatches
- uid: FarmMaster.Services.IServiceUserManager.UserPasswordMatches(System.String,System.String)
  commentId: M:FarmMaster.Services.IServiceUserManager.UserPasswordMatches(System.String,System.String)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: UserPasswordMatches(String, String)
  nameWithType: IServiceUserManager.UserPasswordMatches(String, String)
  fullName: FarmMaster.Services.IServiceUserManager.UserPasswordMatches(System.String, System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.UserPasswordMatches(System.String,System.String)
    name: UserPasswordMatches
    nameWithType: IServiceUserManager.UserPasswordMatches
    fullName: FarmMaster.Services.IServiceUserManager.UserPasswordMatches
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.UserPasswordMatches(System.String,System.String)
    name: UserPasswordMatches
    nameWithType: IServiceUserManager.UserPasswordMatches
    fullName: FarmMaster.Services.IServiceUserManager.UserPasswordMatches
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.SendEmailVerifyEmail*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.SendEmailVerifyEmail
  name: SendEmailVerifyEmail
  nameWithType: ServiceUserManager.SendEmailVerifyEmail
  fullName: FarmMaster.Services.ServiceUserManager.SendEmailVerifyEmail
- uid: FarmMaster.Services.IServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
  commentId: M:FarmMaster.Services.IServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
  parent: FarmMaster.Services.IServiceUserManager
  name: SendEmailVerifyEmail(User)
  nameWithType: IServiceUserManager.SendEmailVerifyEmail(User)
  fullName: FarmMaster.Services.IServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
    name: SendEmailVerifyEmail
    nameWithType: IServiceUserManager.SendEmailVerifyEmail
    fullName: FarmMaster.Services.IServiceUserManager.SendEmailVerifyEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.SendEmailVerifyEmail(Business.Model.User)
    name: SendEmailVerifyEmail
    nameWithType: IServiceUserManager.SendEmailVerifyEmail
    fullName: FarmMaster.Services.IServiceUserManager.SendEmailVerifyEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.UserFromLoginInfo*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.UserFromLoginInfo
  name: UserFromLoginInfo
  nameWithType: ServiceUserManager.UserFromLoginInfo
  fullName: FarmMaster.Services.ServiceUserManager.UserFromLoginInfo
- uid: FarmMaster.Services.IServiceUserManager.UserFromLoginInfo(System.String,System.String)
  commentId: M:FarmMaster.Services.IServiceUserManager.UserFromLoginInfo(System.String,System.String)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: UserFromLoginInfo(String, String)
  nameWithType: IServiceUserManager.UserFromLoginInfo(String, String)
  fullName: FarmMaster.Services.IServiceUserManager.UserFromLoginInfo(System.String, System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.UserFromLoginInfo(System.String,System.String)
    name: UserFromLoginInfo
    nameWithType: IServiceUserManager.UserFromLoginInfo
    fullName: FarmMaster.Services.IServiceUserManager.UserFromLoginInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.UserFromLoginInfo(System.String,System.String)
    name: UserFromLoginInfo
    nameWithType: IServiceUserManager.UserFromLoginInfo
    fullName: FarmMaster.Services.IServiceUserManager.UserFromLoginInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.FinishEmailVerify*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.FinishEmailVerify
  name: FinishEmailVerify
  nameWithType: ServiceUserManager.FinishEmailVerify
  fullName: FarmMaster.Services.ServiceUserManager.FinishEmailVerify
- uid: FarmMaster.Services.IServiceUserManager.FinishEmailVerify(System.String)
  commentId: M:FarmMaster.Services.IServiceUserManager.FinishEmailVerify(System.String)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: FinishEmailVerify(String)
  nameWithType: IServiceUserManager.FinishEmailVerify(String)
  fullName: FarmMaster.Services.IServiceUserManager.FinishEmailVerify(System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.FinishEmailVerify(System.String)
    name: FinishEmailVerify
    nameWithType: IServiceUserManager.FinishEmailVerify
    fullName: FarmMaster.Services.IServiceUserManager.FinishEmailVerify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.FinishEmailVerify(System.String)
    name: FinishEmailVerify
    nameWithType: IServiceUserManager.FinishEmailVerify
    fullName: FarmMaster.Services.IServiceUserManager.FinishEmailVerify
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.QueryAllIncluded*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.QueryAllIncluded
  name: QueryAllIncluded
  nameWithType: ServiceUserManager.QueryAllIncluded
  fullName: FarmMaster.Services.ServiceUserManager.QueryAllIncluded
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.User}.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.User}.QueryAllIncluded
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.User}
  definition: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<User>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.User>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of User).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.User).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<User>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.User>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of User).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.User).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{Business.Model.User}
  commentId: T:System.Linq.IQueryable{Business.Model.User}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<User>
  nameWithType: IQueryable<User>
  fullName: System.Linq.IQueryable<Business.Model.User>
  nameWithType.vb: IQueryable(Of User)
  fullName.vb: System.Linq.IQueryable(Of Business.Model.User)
  name.vb: IQueryable(Of User)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<T>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of T).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<T>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of T).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: FarmMaster.Services.ServiceUserManager.Query*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.Query
  name: Query
  nameWithType: ServiceUserManager.Query
  fullName: FarmMaster.Services.ServiceUserManager.Query
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.User}.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.User}.Query
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.User}
  definition: FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<User>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.User>.Query()
  nameWithType.vb: IServiceEntityManager(Of User).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.User).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<User>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.User>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of User).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.User).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<T>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Query()
  nameWithType.vb: IServiceEntityManager(Of T).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<T>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of T).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.GetIdFor*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.GetIdFor
  name: GetIdFor
  nameWithType: ServiceUserManager.GetIdFor
  fullName: FarmMaster.Services.ServiceUserManager.GetIdFor
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.User}.GetIdFor(Business.Model.User)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.User}.GetIdFor(Business.Model.User)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.User}
  definition: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(User)
  nameWithType: IServiceEntityManager<User>.GetIdFor(User)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.User>.GetIdFor(Business.Model.User)
  nameWithType.vb: IServiceEntityManager(Of User).GetIdFor(User)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.User).GetIdFor(Business.Model.User)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<User>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.User>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of User).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.User).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(T)
  nameWithType: IServiceEntityManager<T>.GetIdFor(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor(T)
  nameWithType.vb: IServiceEntityManager(Of T).GetIdFor(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<T>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of T).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.Update*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.Update
  name: Update
  nameWithType: ServiceUserManager.Update
  fullName: FarmMaster.Services.ServiceUserManager.Update
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.User}.Update(Business.Model.User)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.User}.Update(Business.Model.User)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.User}
  definition: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(User)
  nameWithType: IServiceEntityManager<User>.Update(User)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.User>.Update(Business.Model.User)
  nameWithType.vb: IServiceEntityManager(Of User).Update(User)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.User).Update(Business.Model.User)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<User>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.User>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of User).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.User).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(T)
  nameWithType: IServiceEntityManager<T>.Update(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Update(T)
  nameWithType.vb: IServiceEntityManager(Of T).Update(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Update(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<T>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of T).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.GetContactGdprData*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.GetContactGdprData
  name: GetContactGdprData
  nameWithType: ServiceUserManager.GetContactGdprData
  fullName: FarmMaster.Services.ServiceUserManager.GetContactGdprData
- uid: FarmMaster.Services.IServiceGdprData.GetContactGdprData(Business.Model.Contact,Newtonsoft.Json.Linq.JObject)
  commentId: M:FarmMaster.Services.IServiceGdprData.GetContactGdprData(Business.Model.Contact,Newtonsoft.Json.Linq.JObject)
  parent: FarmMaster.Services.IServiceGdprData
  isExternal: true
  name: GetContactGdprData(Contact, JObject)
  nameWithType: IServiceGdprData.GetContactGdprData(Contact, JObject)
  fullName: FarmMaster.Services.IServiceGdprData.GetContactGdprData(Business.Model.Contact, Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceGdprData.GetContactGdprData(Business.Model.Contact,Newtonsoft.Json.Linq.JObject)
    name: GetContactGdprData
    nameWithType: IServiceGdprData.GetContactGdprData
    fullName: FarmMaster.Services.IServiceGdprData.GetContactGdprData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Contact
    name: Contact
    nameWithType: Contact
    fullName: Business.Model.Contact
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceGdprData.GetContactGdprData(Business.Model.Contact,Newtonsoft.Json.Linq.JObject)
    name: GetContactGdprData
    nameWithType: IServiceGdprData.GetContactGdprData
    fullName: FarmMaster.Services.IServiceGdprData.GetContactGdprData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Contact
    name: Contact
    nameWithType: Contact
    fullName: Business.Model.Contact
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Business.Model.Contact
  commentId: T:Business.Model.Contact
  parent: Business.Model
  name: Contact
  nameWithType: Contact
  fullName: Business.Model.Contact
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: FarmMaster.Services.ServiceUserManager.GetUserGdprData*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.GetUserGdprData
  name: GetUserGdprData
  nameWithType: ServiceUserManager.GetUserGdprData
  fullName: FarmMaster.Services.ServiceUserManager.GetUserGdprData
- uid: FarmMaster.Services.IServiceGdprData.GetUserGdprData(Business.Model.User,Newtonsoft.Json.Linq.JObject)
  commentId: M:FarmMaster.Services.IServiceGdprData.GetUserGdprData(Business.Model.User,Newtonsoft.Json.Linq.JObject)
  parent: FarmMaster.Services.IServiceGdprData
  isExternal: true
  name: GetUserGdprData(User, JObject)
  nameWithType: IServiceGdprData.GetUserGdprData(User, JObject)
  fullName: FarmMaster.Services.IServiceGdprData.GetUserGdprData(Business.Model.User, Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceGdprData.GetUserGdprData(Business.Model.User,Newtonsoft.Json.Linq.JObject)
    name: GetUserGdprData
    nameWithType: IServiceGdprData.GetUserGdprData
    fullName: FarmMaster.Services.IServiceGdprData.GetUserGdprData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceGdprData.GetUserGdprData(Business.Model.User,Newtonsoft.Json.Linq.JObject)
    name: GetUserGdprData
    nameWithType: IServiceGdprData.GetUserGdprData
    fullName: FarmMaster.Services.IServiceGdprData.GetUserGdprData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.AnonymiseContactData*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.AnonymiseContactData
  name: AnonymiseContactData
  nameWithType: ServiceUserManager.AnonymiseContactData
  fullName: FarmMaster.Services.ServiceUserManager.AnonymiseContactData
- uid: FarmMaster.Services.IServiceGdprData.AnonymiseContactData(Business.Model.Contact)
  commentId: M:FarmMaster.Services.IServiceGdprData.AnonymiseContactData(Business.Model.Contact)
  parent: FarmMaster.Services.IServiceGdprData
  name: AnonymiseContactData(Contact)
  nameWithType: IServiceGdprData.AnonymiseContactData(Contact)
  fullName: FarmMaster.Services.IServiceGdprData.AnonymiseContactData(Business.Model.Contact)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceGdprData.AnonymiseContactData(Business.Model.Contact)
    name: AnonymiseContactData
    nameWithType: IServiceGdprData.AnonymiseContactData
    fullName: FarmMaster.Services.IServiceGdprData.AnonymiseContactData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Contact
    name: Contact
    nameWithType: Contact
    fullName: Business.Model.Contact
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceGdprData.AnonymiseContactData(Business.Model.Contact)
    name: AnonymiseContactData
    nameWithType: IServiceGdprData.AnonymiseContactData
    fullName: FarmMaster.Services.IServiceGdprData.AnonymiseContactData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.Contact
    name: Contact
    nameWithType: Contact
    fullName: Business.Model.Contact
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.AnonymiseUserData*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.AnonymiseUserData
  name: AnonymiseUserData
  nameWithType: ServiceUserManager.AnonymiseUserData
  fullName: FarmMaster.Services.ServiceUserManager.AnonymiseUserData
- uid: FarmMaster.Services.IServiceGdprData.AnonymiseUserData(Business.Model.User)
  commentId: M:FarmMaster.Services.IServiceGdprData.AnonymiseUserData(Business.Model.User)
  parent: FarmMaster.Services.IServiceGdprData
  name: AnonymiseUserData(User)
  nameWithType: IServiceGdprData.AnonymiseUserData(User)
  fullName: FarmMaster.Services.IServiceGdprData.AnonymiseUserData(Business.Model.User)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceGdprData.AnonymiseUserData(Business.Model.User)
    name: AnonymiseUserData
    nameWithType: IServiceGdprData.AnonymiseUserData
    fullName: FarmMaster.Services.IServiceGdprData.AnonymiseUserData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceGdprData.AnonymiseUserData(Business.Model.User)
    name: AnonymiseUserData
    nameWithType: IServiceGdprData.AnonymiseUserData
    fullName: FarmMaster.Services.IServiceGdprData.AnonymiseUserData
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.ServiceUserManager.ChangePassword*
  commentId: Overload:FarmMaster.Services.ServiceUserManager.ChangePassword
  name: ChangePassword
  nameWithType: ServiceUserManager.ChangePassword
  fullName: FarmMaster.Services.ServiceUserManager.ChangePassword
- uid: FarmMaster.Services.IServiceUserManager.ChangePassword(Business.Model.User,System.String)
  commentId: M:FarmMaster.Services.IServiceUserManager.ChangePassword(Business.Model.User,System.String)
  parent: FarmMaster.Services.IServiceUserManager
  isExternal: true
  name: ChangePassword(User, String)
  nameWithType: IServiceUserManager.ChangePassword(User, String)
  fullName: FarmMaster.Services.IServiceUserManager.ChangePassword(Business.Model.User, System.String)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceUserManager.ChangePassword(Business.Model.User,System.String)
    name: ChangePassword
    nameWithType: IServiceUserManager.ChangePassword
    fullName: FarmMaster.Services.IServiceUserManager.ChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceUserManager.ChangePassword(Business.Model.User,System.String)
    name: ChangePassword
    nameWithType: IServiceUserManager.ChangePassword
    fullName: FarmMaster.Services.IServiceUserManager.ChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.User
    name: User
    nameWithType: User
    fullName: Business.Model.User
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
