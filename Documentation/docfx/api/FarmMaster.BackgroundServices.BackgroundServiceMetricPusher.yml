### YamlMime:ManagedReference
items:
- uid: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher
  commentId: T:FarmMaster.BackgroundServices.BackgroundServiceMetricPusher
  id: BackgroundServiceMetricPusher
  parent: FarmMaster.BackgroundServices
  children:
  - FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.#ctor(Business.Model.FarmMasterContext,FarmMaster.Services.IServiceMetricAggregator,Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  - FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.Config
  - FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnShutdown
  - FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnTickAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: BackgroundServiceMetricPusher
  nameWithType: BackgroundServiceMetricPusher
  fullName: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher
  type: Class
  source:
    remote:
      path: FarmMaster/BackgroundServices/BackgroundServiceMetricPusher.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: BackgroundServiceMetricPusher
    path: BackgroundServices/BackgroundServiceMetricPusher.cs
    startLine: 11
  assemblies:
  - FarmMaster
  namespace: FarmMaster.BackgroundServices
  syntax:
    content: 'public class BackgroundServiceMetricPusher : IFarmBackgroundService'
    content.vb: >-
      Public Class BackgroundServiceMetricPusher

          Implements IFarmBackgroundService
  inheritance:
  - System.Object
  implements:
  - FarmMaster.BackgroundServices.IFarmBackgroundService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.Config
  commentId: P:FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.Config
  id: Config
  parent: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: BackgroundServiceMetricPusher.Config
  fullName: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.Config
  type: Property
  source:
    remote:
      path: FarmMaster/BackgroundServices/BackgroundServiceMetricPusher.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Config
    path: BackgroundServices/BackgroundServiceMetricPusher.cs
    startLine: 16
  assemblies:
  - FarmMaster
  namespace: FarmMaster.BackgroundServices
  syntax:
    content: public IFarmBackgroundServiceConfig Config { get; }
    parameters: []
    return:
      type: FarmMaster.BackgroundServices.IFarmBackgroundServiceConfig
    content.vb: Public ReadOnly Property Config As IFarmBackgroundServiceConfig
  overload: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.Config*
  implements:
  - FarmMaster.BackgroundServices.IFarmBackgroundService.Config
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.#ctor(Business.Model.FarmMasterContext,FarmMaster.Services.IServiceMetricAggregator,Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  commentId: M:FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.#ctor(Business.Model.FarmMasterContext,FarmMaster.Services.IServiceMetricAggregator,Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  id: '#ctor(Business.Model.FarmMasterContext,FarmMaster.Services.IServiceMetricAggregator,Microsoft.AspNetCore.Hosting.IHostingEnvironment)'
  parent: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher
  langs:
  - csharp
  - vb
  name: BackgroundServiceMetricPusher(FarmMasterContext, IServiceMetricAggregator, IHostingEnvironment)
  nameWithType: BackgroundServiceMetricPusher.BackgroundServiceMetricPusher(FarmMasterContext, IServiceMetricAggregator, IHostingEnvironment)
  fullName: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.BackgroundServiceMetricPusher(Business.Model.FarmMasterContext, FarmMaster.Services.IServiceMetricAggregator, Microsoft.AspNetCore.Hosting.IHostingEnvironment)
  type: Constructor
  source:
    remote:
      path: FarmMaster/BackgroundServices/BackgroundServiceMetricPusher.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: .ctor
    path: BackgroundServices/BackgroundServiceMetricPusher.cs
    startLine: 22
  assemblies:
  - FarmMaster
  namespace: FarmMaster.BackgroundServices
  syntax:
    content: public BackgroundServiceMetricPusher(FarmMasterContext context, IServiceMetricAggregator metrics, IHostingEnvironment env)
    parameters:
    - id: context
      type: Business.Model.FarmMasterContext
    - id: metrics
      type: FarmMaster.Services.IServiceMetricAggregator
    - id: env
      type: Microsoft.AspNetCore.Hosting.IHostingEnvironment
    content.vb: Public Sub New(context As FarmMasterContext, metrics As IServiceMetricAggregator, env As IHostingEnvironment)
  overload: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnShutdown
  commentId: M:FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnShutdown
  id: OnShutdown
  parent: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher
  langs:
  - csharp
  - vb
  name: OnShutdown()
  nameWithType: BackgroundServiceMetricPusher.OnShutdown()
  fullName: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnShutdown()
  type: Method
  source:
    remote:
      path: FarmMaster/BackgroundServices/BackgroundServiceMetricPusher.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: OnShutdown
    path: BackgroundServices/BackgroundServiceMetricPusher.cs
    startLine: 35
  assemblies:
  - FarmMaster
  namespace: FarmMaster.BackgroundServices
  syntax:
    content: public Task OnShutdown()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function OnShutdown As Task
  overload: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnShutdown*
  implements:
  - FarmMaster.BackgroundServices.IFarmBackgroundService.OnShutdown
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnTickAsync(System.Threading.CancellationToken)
  commentId: M:FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnTickAsync(System.Threading.CancellationToken)
  id: OnTickAsync(System.Threading.CancellationToken)
  parent: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher
  langs:
  - csharp
  - vb
  name: OnTickAsync(CancellationToken)
  nameWithType: BackgroundServiceMetricPusher.OnTickAsync(CancellationToken)
  fullName: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnTickAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: FarmMaster/BackgroundServices/BackgroundServiceMetricPusher.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: OnTickAsync
    path: BackgroundServices/BackgroundServiceMetricPusher.cs
    startLine: 40
  assemblies:
  - FarmMaster
  namespace: FarmMaster.BackgroundServices
  syntax:
    content: public Task OnTickAsync(CancellationToken stoppingToken)
    parameters:
    - id: stoppingToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function OnTickAsync(stoppingToken As CancellationToken) As Task
  overload: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnTickAsync*
  implements:
  - FarmMaster.BackgroundServices.IFarmBackgroundService.OnTickAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FarmMaster.BackgroundServices
  commentId: N:FarmMaster.BackgroundServices
  name: FarmMaster.BackgroundServices
  nameWithType: FarmMaster.BackgroundServices
  fullName: FarmMaster.BackgroundServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FarmMaster.BackgroundServices.IFarmBackgroundService
  commentId: T:FarmMaster.BackgroundServices.IFarmBackgroundService
  parent: FarmMaster.BackgroundServices
  name: IFarmBackgroundService
  nameWithType: IFarmBackgroundService
  fullName: FarmMaster.BackgroundServices.IFarmBackgroundService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.Config*
  commentId: Overload:FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.Config
  name: Config
  nameWithType: BackgroundServiceMetricPusher.Config
  fullName: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.Config
- uid: FarmMaster.BackgroundServices.IFarmBackgroundService.Config
  commentId: P:FarmMaster.BackgroundServices.IFarmBackgroundService.Config
  parent: FarmMaster.BackgroundServices.IFarmBackgroundService
  name: Config
  nameWithType: IFarmBackgroundService.Config
  fullName: FarmMaster.BackgroundServices.IFarmBackgroundService.Config
- uid: FarmMaster.BackgroundServices.IFarmBackgroundServiceConfig
  commentId: T:FarmMaster.BackgroundServices.IFarmBackgroundServiceConfig
  parent: FarmMaster.BackgroundServices
  name: IFarmBackgroundServiceConfig
  nameWithType: IFarmBackgroundServiceConfig
  fullName: FarmMaster.BackgroundServices.IFarmBackgroundServiceConfig
- uid: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.#ctor*
  commentId: Overload:FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.#ctor
  name: BackgroundServiceMetricPusher
  nameWithType: BackgroundServiceMetricPusher.BackgroundServiceMetricPusher
  fullName: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.BackgroundServiceMetricPusher
- uid: Business.Model.FarmMasterContext
  commentId: T:Business.Model.FarmMasterContext
  parent: Business.Model
  name: FarmMasterContext
  nameWithType: FarmMasterContext
  fullName: Business.Model.FarmMasterContext
- uid: FarmMaster.Services.IServiceMetricAggregator
  commentId: T:FarmMaster.Services.IServiceMetricAggregator
  parent: FarmMaster.Services
  name: IServiceMetricAggregator
  nameWithType: IServiceMetricAggregator
  fullName: FarmMaster.Services.IServiceMetricAggregator
- uid: Microsoft.AspNetCore.Hosting.IHostingEnvironment
  commentId: T:Microsoft.AspNetCore.Hosting.IHostingEnvironment
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IHostingEnvironment
  nameWithType: IHostingEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IHostingEnvironment
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnShutdown*
  commentId: Overload:FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnShutdown
  name: OnShutdown
  nameWithType: BackgroundServiceMetricPusher.OnShutdown
  fullName: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnShutdown
- uid: FarmMaster.BackgroundServices.IFarmBackgroundService.OnShutdown
  commentId: M:FarmMaster.BackgroundServices.IFarmBackgroundService.OnShutdown
  parent: FarmMaster.BackgroundServices.IFarmBackgroundService
  name: OnShutdown()
  nameWithType: IFarmBackgroundService.OnShutdown()
  fullName: FarmMaster.BackgroundServices.IFarmBackgroundService.OnShutdown()
  spec.csharp:
  - uid: FarmMaster.BackgroundServices.IFarmBackgroundService.OnShutdown
    name: OnShutdown
    nameWithType: IFarmBackgroundService.OnShutdown
    fullName: FarmMaster.BackgroundServices.IFarmBackgroundService.OnShutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.BackgroundServices.IFarmBackgroundService.OnShutdown
    name: OnShutdown
    nameWithType: IFarmBackgroundService.OnShutdown
    fullName: FarmMaster.BackgroundServices.IFarmBackgroundService.OnShutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnTickAsync*
  commentId: Overload:FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnTickAsync
  name: OnTickAsync
  nameWithType: BackgroundServiceMetricPusher.OnTickAsync
  fullName: FarmMaster.BackgroundServices.BackgroundServiceMetricPusher.OnTickAsync
- uid: FarmMaster.BackgroundServices.IFarmBackgroundService.OnTickAsync(System.Threading.CancellationToken)
  commentId: M:FarmMaster.BackgroundServices.IFarmBackgroundService.OnTickAsync(System.Threading.CancellationToken)
  parent: FarmMaster.BackgroundServices.IFarmBackgroundService
  isExternal: true
  name: OnTickAsync(CancellationToken)
  nameWithType: IFarmBackgroundService.OnTickAsync(CancellationToken)
  fullName: FarmMaster.BackgroundServices.IFarmBackgroundService.OnTickAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: FarmMaster.BackgroundServices.IFarmBackgroundService.OnTickAsync(System.Threading.CancellationToken)
    name: OnTickAsync
    nameWithType: IFarmBackgroundService.OnTickAsync
    fullName: FarmMaster.BackgroundServices.IFarmBackgroundService.OnTickAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.BackgroundServices.IFarmBackgroundService.OnTickAsync(System.Threading.CancellationToken)
    name: OnTickAsync
    nameWithType: IFarmBackgroundService.OnTickAsync
    fullName: FarmMaster.BackgroundServices.IFarmBackgroundService.OnTickAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
