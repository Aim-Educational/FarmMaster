### YamlMime:ManagedReference
items:
- uid: FarmMaster.Services.IServiceAnimalGroupManager
  commentId: T:FarmMaster.Services.IServiceAnimalGroupManager
  id: IServiceAnimalGroupManager
  parent: FarmMaster.Services
  children:
  - FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  - FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String,System.String)
  - FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  langs:
  - csharp
  - vb
  name: IServiceAnimalGroupManager
  nameWithType: IServiceAnimalGroupManager
  fullName: FarmMaster.Services.IServiceAnimalGroupManager
  type: Interface
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: IServiceAnimalGroupManager
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 15
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  summary: "\nManager for animal groups.\n\nCovers creation, querying, and deletion.\n"
  example: []
  syntax:
    content: 'public interface IServiceAnimalGroupManager : IServiceEntityManager<AnimalGroup>, IServiceEntityManagerFullDeletion<AnimalGroup>'
    content.vb: >-
      Public Interface IServiceAnimalGroupManager

          Inherits IServiceEntityManager(Of AnimalGroup), IServiceEntityManagerFullDeletion(Of AnimalGroup)
  inheritedMembers:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Query
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.QueryAllIncluded
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.GetIdFor(Business.Model.AnimalGroup)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Update(Business.Model.AnimalGroup)
  - FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}.FullDelete(Business.Model.AnimalGroup)
  extensionMethods:
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  - FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String,System.String)
  commentId: M:FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String,System.String)
  id: Create(System.String,System.String)
  parent: FarmMaster.Services.IServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: Create(String, String)
  nameWithType: IServiceAnimalGroupManager.Create(String, String)
  fullName: FarmMaster.Services.IServiceAnimalGroupManager.Create(System.String, System.String)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: Create
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 17
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: AnimalGroup Create(string name, string description)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    return:
      type: Business.Model.AnimalGroup
    content.vb: Function Create(name As String, description As String) As AnimalGroup
  overload: FarmMaster.Services.IServiceAnimalGroupManager.Create*
- uid: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  commentId: M:FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  id: AssignAnimal(Business.Model.AnimalGroup,Business.Model.Animal)
  parent: FarmMaster.Services.IServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: AssignAnimal(AnimalGroup, Animal)
  nameWithType: IServiceAnimalGroupManager.AssignAnimal(AnimalGroup, Animal)
  fullName: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal(Business.Model.AnimalGroup, Business.Model.Animal)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: AssignAnimal
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 18
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: MapAnimalToAnimalGroup AssignAnimal(AnimalGroup group, Animal animal)
    parameters:
    - id: group
      type: Business.Model.AnimalGroup
    - id: animal
      type: Business.Model.Animal
    return:
      type: Business.Model.MapAnimalToAnimalGroup
    content.vb: Function AssignAnimal(group As AnimalGroup, animal As Animal) As MapAnimalToAnimalGroup
  overload: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal*
- uid: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  commentId: M:FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  id: RemoveFromGroup(Business.Model.AnimalGroup,Business.Model.Animal)
  parent: FarmMaster.Services.IServiceAnimalGroupManager
  langs:
  - csharp
  - vb
  name: RemoveFromGroup(AnimalGroup, Animal)
  nameWithType: IServiceAnimalGroupManager.RemoveFromGroup(AnimalGroup, Animal)
  fullName: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup(Business.Model.AnimalGroup, Business.Model.Animal)
  type: Method
  source:
    remote:
      path: FarmMaster/Services/IServiceAnimalGroupManager.cs
      branch: assignment_script
      repo: https://github.com/Aim-Educational/FarmMaster.git
    id: RemoveFromGroup
    path: Services/IServiceAnimalGroupManager.cs
    startLine: 19
  assemblies:
  - FarmMaster
  namespace: FarmMaster.Services
  syntax:
    content: CouldDelete RemoveFromGroup(AnimalGroup group, Animal animal)
    parameters:
    - id: group
      type: Business.Model.AnimalGroup
    - id: animal
      type: Business.Model.Animal
    return:
      type: FarmMaster.Misc.CouldDelete
    content.vb: Function RemoveFromGroup(group As AnimalGroup, animal As Animal) As CouldDelete
  overload: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup*
references:
- uid: FarmMaster.Services
  commentId: N:FarmMaster.Services
  name: FarmMaster.Services
  nameWithType: FarmMaster.Services
  fullName: FarmMaster.Services
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Query
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<AnimalGroup>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.Query()
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<AnimalGroup>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of AnimalGroup).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.QueryAllIncluded
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<AnimalGroup>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<AnimalGroup>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of AnimalGroup).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.GetIdFor(Business.Model.AnimalGroup)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.GetIdFor(Business.Model.AnimalGroup)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(AnimalGroup)
  nameWithType: IServiceEntityManager<AnimalGroup>.GetIdFor(AnimalGroup)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.GetIdFor(Business.Model.AnimalGroup)
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup).GetIdFor(AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).GetIdFor(Business.Model.AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<AnimalGroup>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of AnimalGroup).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Update(Business.Model.AnimalGroup)
  commentId: M:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.Update(Business.Model.AnimalGroup)
  parent: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(AnimalGroup)
  nameWithType: IServiceEntityManager<AnimalGroup>.Update(AnimalGroup)
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.Update(Business.Model.AnimalGroup)
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup).Update(AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).Update(Business.Model.AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<AnimalGroup>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of AnimalGroup).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}.FullDelete(Business.Model.AnimalGroup)
  commentId: M:FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}.FullDelete(Business.Model.AnimalGroup)
  parent: FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}
  definition: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
  name: FullDelete(AnimalGroup)
  nameWithType: IServiceEntityManagerFullDeletion<AnimalGroup>.FullDelete(AnimalGroup)
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<Business.Model.AnimalGroup>.FullDelete(Business.Model.AnimalGroup)
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of AnimalGroup).FullDelete(AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of Business.Model.AnimalGroup).FullDelete(Business.Model.AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion<AnimalGroup>.FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<Business.Model.AnimalGroup>.FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion(Of AnimalGroup).FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of Business.Model.AnimalGroup).FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromId<AnimalGroup>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<AnimalGroup>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalGroup>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of AnimalGroup)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalGroup)(System.Int32)
  name.vb: FromId(Of AnimalGroup)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId<AnimalGroup>
    nameWithType: IServiceEntityDataExtentions.FromId<AnimalGroup>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<Business.Model.AnimalGroup>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(System.Int32)
    name: FromId(Of AnimalGroup)
    nameWithType: IServiceEntityDataExtentions.FromId(Of AnimalGroup)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of Business.Model.AnimalGroup)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  name: FromIdAllIncluded<AnimalGroup>(Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalGroup>(Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalGroup>(System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalGroup)(Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalGroup)(System.Int32)
  name.vb: FromIdAllIncluded(Of AnimalGroup)(Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded<AnimalGroup>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<AnimalGroup>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<Business.Model.AnimalGroup>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(System.Int32)
    name: FromIdAllIncluded(Of AnimalGroup)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of AnimalGroup)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of Business.Model.AnimalGroup)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}.FarmMaster.Services.IServiceEntityDataExtentions.For``1
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  parent: FarmMaster.Services.IServiceEntityDataExtentions
  definition: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<AnimalGroup>()
  nameWithType: IServiceEntityDataExtentions.For<AnimalGroup>()
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalGroup>()
  nameWithType.vb: IServiceEntityDataExtentions.For(Of AnimalGroup)()
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalGroup)()
  name.vb: For(Of AnimalGroup)()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For<AnimalGroup>
    nameWithType: IServiceEntityDataExtentions.For<AnimalGroup>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<Business.Model.AnimalGroup>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1
    name: For(Of AnimalGroup)
    nameWithType: IServiceEntityDataExtentions.For(Of AnimalGroup)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of Business.Model.AnimalGroup)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Query
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Query
  name: Query()
  nameWithType: IServiceEntityManager<T>.Query()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Query()
  nameWithType.vb: IServiceEntityManager(Of T).Query()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Query()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager<T>.Query
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Query
    name: Query
    nameWithType: IServiceEntityManager(Of T).Query
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Query
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  commentId: T:FarmMaster.Services.IServiceEntityManager{Business.Model.AnimalGroup}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<AnimalGroup>
  nameWithType: IServiceEntityManager<AnimalGroup>
  fullName: FarmMaster.Services.IServiceEntityManager<Business.Model.AnimalGroup>
  nameWithType.vb: IServiceEntityManager(Of AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of Business.Model.AnimalGroup)
  name.vb: IServiceEntityManager(Of AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
  name: QueryAllIncluded()
  nameWithType: IServiceEntityManager<T>.QueryAllIncluded()
  fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded()
  nameWithType.vb: IServiceEntityManager(Of T).QueryAllIncluded()
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded()
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager<T>.QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager<T>.QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.QueryAllIncluded
    name: QueryAllIncluded
    nameWithType: IServiceEntityManager(Of T).QueryAllIncluded
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).QueryAllIncluded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
  name: GetIdFor(T)
  nameWithType: IServiceEntityManager<T>.GetIdFor(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor(T)
  nameWithType.vb: IServiceEntityManager(Of T).GetIdFor(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager<T>.GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager<T>.GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.GetIdFor(`0)
    name: GetIdFor
    nameWithType: IServiceEntityManager(Of T).GetIdFor
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).GetIdFor
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManager`1.Update(`0)
  name: Update(T)
  nameWithType: IServiceEntityManager<T>.Update(T)
  fullName: FarmMaster.Services.IServiceEntityManager<T>.Update(T)
  nameWithType.vb: IServiceEntityManager(Of T).Update(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T).Update(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager<T>.Update
    fullName: FarmMaster.Services.IServiceEntityManager<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1.Update(`0)
    name: Update
    nameWithType: IServiceEntityManager(Of T).Update
    fullName: FarmMaster.Services.IServiceEntityManager(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
  commentId: M:FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
  name: FullDelete(T)
  nameWithType: IServiceEntityManagerFullDeletion<T>.FullDelete(T)
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<T>.FullDelete(T)
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of T).FullDelete(T)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of T).FullDelete(T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion<T>.FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<T>.FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1.FullDelete(`0)
    name: FullDelete
    nameWithType: IServiceEntityManagerFullDeletion(Of T).FullDelete
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of T).FullDelete
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}
  commentId: T:FarmMaster.Services.IServiceEntityManagerFullDeletion{Business.Model.AnimalGroup}
  parent: FarmMaster.Services
  definition: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
  name: IServiceEntityManagerFullDeletion<AnimalGroup>
  nameWithType: IServiceEntityManagerFullDeletion<AnimalGroup>
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<Business.Model.AnimalGroup>
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of AnimalGroup)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of Business.Model.AnimalGroup)
  name.vb: IServiceEntityManagerFullDeletion(Of AnimalGroup)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: <
    nameWithType: <
    fullName: <
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Business.Model.AnimalGroup
    name: AnimalGroup
    nameWithType: AnimalGroup
    fullName: Business.Model.AnimalGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromId<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromId<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromId(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromId(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId<T>
    nameWithType: IServiceEntityDataExtentions.FromId<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromId``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromId(Of T)
    nameWithType: IServiceEntityDataExtentions.FromId(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromId(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions
  commentId: T:FarmMaster.Services.IServiceEntityDataExtentions
  parent: FarmMaster.Services
  name: IServiceEntityDataExtentions
  nameWithType: IServiceEntityDataExtentions
  fullName: FarmMaster.Services.IServiceEntityDataExtentions
- uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
  isExternal: true
  name: FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>(IServiceEntityManager<T>, Int32)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>(FarmMaster.Services.IServiceEntityManager<T>, System.Int32)
  nameWithType.vb: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)(FarmMaster.Services.IServiceEntityManager(Of T), System.Int32)
  name.vb: FromIdAllIncluded(Of T)(IServiceEntityManager(Of T), Int32)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded<T>
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded``1(FarmMaster.Services.IServiceEntityManager{``0},System.Int32)
    name: FromIdAllIncluded(Of T)
    nameWithType: IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.FromIdAllIncluded(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  commentId: M:FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
  name: For<T>(IServiceEntityManager<T>)
  nameWithType: IServiceEntityDataExtentions.For<T>(IServiceEntityManager<T>)
  fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>(FarmMaster.Services.IServiceEntityManager<T>)
  nameWithType.vb: IServiceEntityDataExtentions.For(Of T)(IServiceEntityManager(Of T))
  fullName.vb: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)(FarmMaster.Services.IServiceEntityManager(Of T))
  name.vb: For(Of T)(IServiceEntityManager(Of T))
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For<T>
    nameWithType: IServiceEntityDataExtentions.For<T>
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityDataExtentions.For``1(FarmMaster.Services.IServiceEntityManager{``0})
    name: For(Of T)
    nameWithType: IServiceEntityDataExtentions.For(Of T)
    fullName: FarmMaster.Services.IServiceEntityDataExtentions.For(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManager`1
  commentId: T:FarmMaster.Services.IServiceEntityManager`1
  name: IServiceEntityManager<T>
  nameWithType: IServiceEntityManager<T>
  fullName: FarmMaster.Services.IServiceEntityManager<T>
  nameWithType.vb: IServiceEntityManager(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManager(Of T)
  name.vb: IServiceEntityManager(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManager`1
    name: IServiceEntityManager
    nameWithType: IServiceEntityManager
    fullName: FarmMaster.Services.IServiceEntityManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
  commentId: T:FarmMaster.Services.IServiceEntityManagerFullDeletion`1
  name: IServiceEntityManagerFullDeletion<T>
  nameWithType: IServiceEntityManagerFullDeletion<T>
  fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion<T>
  nameWithType.vb: IServiceEntityManagerFullDeletion(Of T)
  fullName.vb: FarmMaster.Services.IServiceEntityManagerFullDeletion(Of T)
  name.vb: IServiceEntityManagerFullDeletion(Of T)
  spec.csharp:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FarmMaster.Services.IServiceEntityManagerFullDeletion`1
    name: IServiceEntityManagerFullDeletion
    nameWithType: IServiceEntityManagerFullDeletion
    fullName: FarmMaster.Services.IServiceEntityManagerFullDeletion
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FarmMaster.Services.IServiceAnimalGroupManager.Create*
  commentId: Overload:FarmMaster.Services.IServiceAnimalGroupManager.Create
  name: Create
  nameWithType: IServiceAnimalGroupManager.Create
  fullName: FarmMaster.Services.IServiceAnimalGroupManager.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Business.Model.AnimalGroup
  commentId: T:Business.Model.AnimalGroup
  parent: Business.Model
  name: AnimalGroup
  nameWithType: AnimalGroup
  fullName: Business.Model.AnimalGroup
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Business.Model
  commentId: N:Business.Model
  name: Business.Model
  nameWithType: Business.Model
  fullName: Business.Model
- uid: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal*
  commentId: Overload:FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal
  name: AssignAnimal
  nameWithType: IServiceAnimalGroupManager.AssignAnimal
  fullName: FarmMaster.Services.IServiceAnimalGroupManager.AssignAnimal
- uid: Business.Model.Animal
  commentId: T:Business.Model.Animal
  parent: Business.Model
  name: Animal
  nameWithType: Animal
  fullName: Business.Model.Animal
- uid: Business.Model.MapAnimalToAnimalGroup
  commentId: T:Business.Model.MapAnimalToAnimalGroup
  parent: Business.Model
  name: MapAnimalToAnimalGroup
  nameWithType: MapAnimalToAnimalGroup
  fullName: Business.Model.MapAnimalToAnimalGroup
- uid: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup*
  commentId: Overload:FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup
  name: RemoveFromGroup
  nameWithType: IServiceAnimalGroupManager.RemoveFromGroup
  fullName: FarmMaster.Services.IServiceAnimalGroupManager.RemoveFromGroup
- uid: FarmMaster.Misc.CouldDelete
  commentId: T:FarmMaster.Misc.CouldDelete
  parent: FarmMaster.Misc
  name: CouldDelete
  nameWithType: CouldDelete
  fullName: FarmMaster.Misc.CouldDelete
- uid: FarmMaster.Misc
  commentId: N:FarmMaster.Misc
  name: FarmMaster.Misc
  nameWithType: FarmMaster.Misc
  fullName: FarmMaster.Misc
